//
// Generated by NVIDIA NVVM Compiler
// Compiler built on Thu Jul 31 22:29:38 2014 (1406860178)
// Cuda compilation tools, release 6.5, V6.5.14
//

.version 4.1
.target sm_20
.address_size 64

.func  (.param .b64 funj_retval0) __internal_trig_reduction_slowpathd
(
	.param .b64 __internal_trig_reduction_slowpathd_param_0,
	.param .b64 __internal_trig_reduction_slowpathd_param_1
)
;
.const .align 4 .b8 __cudart_i2opi_f[24] = {65, 144, 67, 60, 153, 149, 98, 219, 192, 221, 52, 245, 209, 87, 39, 252, 41, 21, 68, 78, 110, 131, 249, 162};
.const .align 8 .b8 __cudart_i2opi_d[144] = {8, 93, 141, 31, 177, 95, 251, 107, 234, 146, 82, 138, 247, 57, 7, 61, 123, 241, 229, 235, 199, 186, 39, 117, 45, 234, 95, 158, 102, 63, 70, 79, 183, 9, 203, 39, 207, 126, 54, 109, 31, 109, 10, 90, 139, 17, 47, 239, 15, 152, 5, 222, 255, 151, 248, 31, 59, 40, 249, 189, 139, 95, 132, 156, 244, 57, 83, 131, 57, 214, 145, 57, 65, 126, 95, 180, 38, 112, 156, 233, 132, 68, 187, 46, 245, 53, 130, 232, 62, 167, 41, 177, 28, 235, 29, 254, 28, 146, 209, 9, 234, 46, 73, 6, 224, 210, 77, 66, 58, 110, 36, 183, 97, 197, 187, 222, 171, 99, 81, 254, 65, 144, 67, 60, 153, 149, 98, 219, 192, 221, 52, 245, 209, 87, 39, 252, 41, 21, 68, 78, 110, 131, 249, 162};
.const .align 8 .b8 __cudart_sin_cos_coeffs[128] = {186, 94, 120, 249, 101, 219, 229, 61, 70, 210, 176, 44, 241, 229, 90, 190, 146, 227, 172, 105, 227, 29, 199, 62, 161, 98, 219, 25, 160, 1, 42, 191, 24, 8, 17, 17, 17, 17, 129, 63, 84, 85, 85, 85, 85, 85, 197, 191, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 129, 253, 32, 131, 255, 168, 189, 40, 133, 239, 193, 167, 238, 33, 62, 217, 230, 6, 142, 79, 126, 146, 190, 233, 188, 221, 25, 160, 1, 250, 62, 71, 93, 193, 22, 108, 193, 86, 191, 81, 85, 85, 85, 85, 85, 165, 63, 0, 0, 0, 0, 0, 0, 224, 191, 0, 0, 0, 0, 0, 0, 240, 63};

.visible .func  (.param .b32 funj_retval0) ___sins(
	.param .b32 ___sins_param_0
)
{
	.local .align 4 .b8 	__local_depot0[28];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<14>;
	.reg .s32 	%r<91>;
	.reg .f32 	%f<48>;
	.reg .s64 	%rd<12>;


	mov.u64 	%SPL, __local_depot0;
	ld.param.f32 	%f43, [___sins_param_0];
	add.u64 	%rd7, %SPL, 0;
	abs.f32 	%f19, %f43;
	setp.neu.f32	%p1, %f19, 0f7F800000;
	@%p1 bra 	BB0_2;

	mov.f32 	%f20, 0f00000000;
	mul.rn.f32 	%f43, %f43, %f20;

BB0_2:
	mul.f32 	%f21, %f43, 0f3F22F983;
	cvt.rni.s32.f32	%r90, %f21;
	cvt.rn.f32.s32	%f22, %r90;
	neg.f32 	%f23, %f22;
	mov.f32 	%f24, 0f3FC90FDA;
	fma.rn.f32 	%f25, %f23, %f24, %f43;
	mov.f32 	%f26, 0f33A22168;
	fma.rn.f32 	%f27, %f23, %f26, %f25;
	mov.f32 	%f28, 0f27C234C5;
	fma.rn.f32 	%f44, %f23, %f28, %f27;
	abs.f32 	%f29, %f43;
	setp.leu.f32	%p2, %f29, 0f47CE4780;
	@%p2 bra 	BB0_10;

	mov.b32 	 %r2, %f43;
	shr.u32 	%r3, %r2, 23;
	bfe.u32 	%r32, %r2, 23, 8;
	add.s32 	%r33, %r32, -128;
	shl.b32 	%r34, %r2, 8;
	or.b32  	%r4, %r34, -2147483648;
	shr.u32 	%r35, %r33, 5;
	mov.u32 	%r36, 4;
	sub.s32 	%r5, %r36, %r35;
	mov.u32 	%r84, 0;
	mov.u32 	%r83, %r84;
	mov.u64 	%rd10, __cudart_i2opi_f;
	mov.u64 	%rd11, %rd7;

BB0_4:
	.pragma "nounroll";
	mov.u64 	%rd3, %rd11;
	ld.const.u32 	%r39, [%rd10];
	// inline asm
	{
	mad.lo.cc.u32   %r37, %r39, %r4, %r84;
	madc.hi.u32     %r38, %r39, %r4,  0;
	}
	// inline asm
	st.local.u32 	[%rd3], %r37;
	add.s64 	%rd4, %rd3, 4;
	add.s64 	%rd10, %rd10, 4;
	add.s32 	%r83, %r83, 1;
	setp.ne.s32	%p3, %r83, 6;
	mov.u32 	%r84, %r38;
	mov.u64 	%rd11, %rd4;
	@%p3 bra 	BB0_4;

	and.b32  	%r10, %r2, -2147483648;
	st.local.u32 	[%rd7+24], %r38;
	add.s32 	%r42, %r5, 2;
	mul.wide.s32 	%rd9, %r42, 4;
	add.s64 	%rd6, %rd7, %rd9;
	ld.local.u32 	%r85, [%rd6];
	ld.local.u32 	%r86, [%rd6+-4];
	and.b32  	%r13, %r3, 31;
	setp.eq.s32	%p4, %r13, 0;
	@%p4 bra 	BB0_7;

	mov.u32 	%r43, 32;
	sub.s32 	%r44, %r43, %r13;
	shr.u32 	%r45, %r86, %r44;
	shl.b32 	%r46, %r85, %r13;
	add.s32 	%r85, %r45, %r46;
	ld.local.u32 	%r47, [%rd6+-8];
	shr.u32 	%r48, %r47, %r44;
	shl.b32 	%r49, %r86, %r13;
	add.s32 	%r86, %r48, %r49;

BB0_7:
	shr.u32 	%r50, %r86, 30;
	shl.b32 	%r51, %r85, 2;
	add.s32 	%r87, %r50, %r51;
	shl.b32 	%r19, %r86, 2;
	shr.u32 	%r52, %r87, 31;
	shr.u32 	%r53, %r85, 30;
	add.s32 	%r20, %r52, %r53;
	setp.eq.s32	%p5, %r52, 0;
	mov.u32 	%r88, %r10;
	mov.u32 	%r89, %r19;
	@%p5 bra 	BB0_9;

	not.b32 	%r54, %r87;
	neg.s32 	%r21, %r19;
	setp.eq.s32	%p6, %r19, 0;
	selp.u32	%r55, 1, 0, %p6;
	add.s32 	%r87, %r55, %r54;
	xor.b32  	%r23, %r10, -2147483648;
	mov.u32 	%r88, %r23;
	mov.u32 	%r89, %r21;

BB0_9:
	mov.u32 	%r25, %r88;
	neg.s32 	%r56, %r20;
	setp.eq.s32	%p7, %r10, 0;
	selp.b32	%r90, %r20, %r56, %p7;
	clz.b32 	%r57, %r87;
	setp.eq.s32	%p8, %r57, 0;
	shl.b32 	%r58, %r87, %r57;
	mov.u32 	%r59, 32;
	sub.s32 	%r60, %r59, %r57;
	shr.u32 	%r61, %r89, %r60;
	add.s32 	%r62, %r61, %r58;
	selp.b32	%r63, %r87, %r62, %p8;
	mul.lo.s32 	%r64, %r63, -921707870;
	mov.u32 	%r65, -921707870;
	mul.hi.u32 	%r66, %r63, %r65;
	setp.gt.s32	%p9, %r66, 0;
	shl.b32 	%r67, %r66, 1;
	shr.u32 	%r68, %r64, 31;
	add.s32 	%r69, %r68, %r67;
	selp.b32	%r70, %r69, %r66, %p9;
	selp.b32	%r71, -1, 0, %p9;
	mov.u32 	%r72, 126;
	sub.s32 	%r73, %r72, %r57;
	add.s32 	%r74, %r73, %r71;
	shl.b32 	%r75, %r74, 23;
	add.s32 	%r76, %r70, 1;
	shr.u32 	%r77, %r76, 7;
	add.s32 	%r78, %r77, 1;
	shr.u32 	%r79, %r78, 1;
	add.s32 	%r80, %r79, %r75;
	or.b32  	%r81, %r80, %r25;
	mov.b32 	 %f44, %r81;

BB0_10:
	mul.rn.f32 	%f6, %f44, %f44;
	and.b32  	%r29, %r90, 1;
	setp.eq.s32	%p10, %r29, 0;
	@%p10 bra 	BB0_12;

	mov.f32 	%f30, 0fBAB6061A;
	mov.f32 	%f31, 0f37CCF5CE;
	fma.rn.f32 	%f45, %f31, %f6, %f30;
	bra.uni 	BB0_13;

BB0_12:
	mov.f32 	%f32, 0f3C08839E;
	mov.f32 	%f33, 0fB94CA1F9;
	fma.rn.f32 	%f45, %f33, %f6, %f32;

BB0_13:
	@%p10 bra 	BB0_15;

	mov.f32 	%f34, 0f3D2AAAA5;
	fma.rn.f32 	%f35, %f45, %f6, %f34;
	mov.f32 	%f36, 0fBF000000;
	fma.rn.f32 	%f46, %f35, %f6, %f36;
	bra.uni 	BB0_16;

BB0_15:
	mov.f32 	%f37, 0fBE2AAAA3;
	fma.rn.f32 	%f38, %f45, %f6, %f37;
	mov.f32 	%f39, 0f00000000;
	fma.rn.f32 	%f46, %f38, %f6, %f39;

BB0_16:
	fma.rn.f32 	%f47, %f46, %f44, %f44;
	@%p10 bra 	BB0_18;

	mov.f32 	%f40, 0f3F800000;
	fma.rn.f32 	%f47, %f46, %f6, %f40;

BB0_18:
	and.b32  	%r82, %r90, 2;
	setp.eq.s32	%p13, %r82, 0;
	@%p13 bra 	BB0_20;

	mov.f32 	%f41, 0f00000000;
	mov.f32 	%f42, 0fBF800000;
	fma.rn.f32 	%f47, %f47, %f42, %f41;

BB0_20:
	st.param.f32	[funj_retval0+0], %f47;
	ret;
}

.visible .func  (.param .b32 funj_retval0) ___sini(
	.param .b32 ___sini_param_0
)
{
	.local .align 4 .b8 	__local_depot1[28];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<14>;
	.reg .s32 	%r<93>;
	.reg .f32 	%f<48>;
	.reg .s64 	%rd<12>;


	mov.u64 	%SPL, __local_depot1;
	ld.param.u32 	%r30, [___sini_param_0];
	add.u64 	%rd7, %SPL, 0;
	cvt.rn.f32.s32	%f43, %r30;
	abs.f32 	%f19, %f43;
	setp.neu.f32	%p1, %f19, 0f7F800000;
	@%p1 bra 	BB1_2;

	mov.f32 	%f20, 0f00000000;
	mul.rn.f32 	%f43, %f43, %f20;

BB1_2:
	mul.f32 	%f21, %f43, 0f3F22F983;
	cvt.rni.s32.f32	%r92, %f21;
	cvt.rn.f32.s32	%f22, %r92;
	neg.f32 	%f23, %f22;
	mov.f32 	%f24, 0f3FC90FDA;
	fma.rn.f32 	%f25, %f23, %f24, %f43;
	mov.f32 	%f26, 0f33A22168;
	fma.rn.f32 	%f27, %f23, %f26, %f25;
	mov.f32 	%f28, 0f27C234C5;
	fma.rn.f32 	%f44, %f23, %f28, %f27;
	abs.f32 	%f29, %f43;
	setp.leu.f32	%p2, %f29, 0f47CE4780;
	@%p2 bra 	BB1_10;

	mov.b32 	 %r2, %f43;
	shr.u32 	%r3, %r2, 23;
	bfe.u32 	%r33, %r2, 23, 8;
	add.s32 	%r34, %r33, -128;
	shl.b32 	%r35, %r2, 8;
	or.b32  	%r4, %r35, -2147483648;
	shr.u32 	%r36, %r34, 5;
	mov.u32 	%r37, 4;
	sub.s32 	%r5, %r37, %r36;
	mov.u32 	%r86, 0;
	mov.u32 	%r85, %r86;
	mov.u64 	%rd10, __cudart_i2opi_f;
	mov.u64 	%rd11, %rd7;

BB1_4:
	.pragma "nounroll";
	mov.u64 	%rd3, %rd11;
	ld.const.u32 	%r40, [%rd10];
	// inline asm
	{
	mad.lo.cc.u32   %r38, %r40, %r4, %r86;
	madc.hi.u32     %r39, %r40, %r4,  0;
	}
	// inline asm
	st.local.u32 	[%rd3], %r38;
	add.s64 	%rd4, %rd3, 4;
	add.s64 	%rd10, %rd10, 4;
	add.s32 	%r85, %r85, 1;
	setp.ne.s32	%p3, %r85, 6;
	mov.u32 	%r86, %r39;
	mov.u64 	%rd11, %rd4;
	@%p3 bra 	BB1_4;

	and.b32  	%r10, %r2, -2147483648;
	st.local.u32 	[%rd7+24], %r39;
	add.s32 	%r43, %r5, 2;
	mul.wide.s32 	%rd9, %r43, 4;
	add.s64 	%rd6, %rd7, %rd9;
	ld.local.u32 	%r87, [%rd6];
	ld.local.u32 	%r88, [%rd6+-4];
	and.b32  	%r13, %r3, 31;
	setp.eq.s32	%p4, %r13, 0;
	@%p4 bra 	BB1_7;

	mov.u32 	%r44, 32;
	sub.s32 	%r45, %r44, %r13;
	shr.u32 	%r46, %r88, %r45;
	shl.b32 	%r47, %r87, %r13;
	add.s32 	%r87, %r46, %r47;
	ld.local.u32 	%r48, [%rd6+-8];
	shr.u32 	%r49, %r48, %r45;
	shl.b32 	%r50, %r88, %r13;
	add.s32 	%r88, %r49, %r50;

BB1_7:
	shr.u32 	%r51, %r88, 30;
	shl.b32 	%r52, %r87, 2;
	add.s32 	%r89, %r51, %r52;
	shl.b32 	%r19, %r88, 2;
	shr.u32 	%r53, %r89, 31;
	shr.u32 	%r54, %r87, 30;
	add.s32 	%r20, %r53, %r54;
	setp.eq.s32	%p5, %r53, 0;
	mov.u32 	%r90, %r10;
	mov.u32 	%r91, %r19;
	@%p5 bra 	BB1_9;

	not.b32 	%r55, %r89;
	neg.s32 	%r21, %r19;
	setp.eq.s32	%p6, %r19, 0;
	selp.u32	%r56, 1, 0, %p6;
	add.s32 	%r89, %r56, %r55;
	xor.b32  	%r23, %r10, -2147483648;
	mov.u32 	%r90, %r23;
	mov.u32 	%r91, %r21;

BB1_9:
	mov.u32 	%r25, %r90;
	neg.s32 	%r57, %r20;
	setp.eq.s32	%p7, %r10, 0;
	selp.b32	%r92, %r20, %r57, %p7;
	clz.b32 	%r58, %r89;
	setp.eq.s32	%p8, %r58, 0;
	shl.b32 	%r59, %r89, %r58;
	mov.u32 	%r60, 32;
	sub.s32 	%r61, %r60, %r58;
	shr.u32 	%r62, %r91, %r61;
	add.s32 	%r63, %r62, %r59;
	selp.b32	%r64, %r89, %r63, %p8;
	mul.lo.s32 	%r65, %r64, -921707870;
	mov.u32 	%r66, -921707870;
	mul.hi.u32 	%r67, %r64, %r66;
	setp.gt.s32	%p9, %r67, 0;
	shl.b32 	%r68, %r67, 1;
	shr.u32 	%r69, %r65, 31;
	add.s32 	%r70, %r69, %r68;
	selp.b32	%r71, %r70, %r67, %p9;
	selp.b32	%r72, -1, 0, %p9;
	mov.u32 	%r73, 126;
	sub.s32 	%r74, %r73, %r58;
	add.s32 	%r75, %r74, %r72;
	shl.b32 	%r76, %r75, 23;
	add.s32 	%r77, %r71, 1;
	shr.u32 	%r78, %r77, 7;
	add.s32 	%r79, %r78, 1;
	shr.u32 	%r80, %r79, 1;
	add.s32 	%r81, %r80, %r76;
	or.b32  	%r82, %r81, %r25;
	mov.b32 	 %f44, %r82;

BB1_10:
	mul.rn.f32 	%f7, %f44, %f44;
	and.b32  	%r29, %r92, 1;
	setp.eq.s32	%p10, %r29, 0;
	@%p10 bra 	BB1_12;

	mov.f32 	%f30, 0fBAB6061A;
	mov.f32 	%f31, 0f37CCF5CE;
	fma.rn.f32 	%f45, %f31, %f7, %f30;
	bra.uni 	BB1_13;

BB1_12:
	mov.f32 	%f32, 0f3C08839E;
	mov.f32 	%f33, 0fB94CA1F9;
	fma.rn.f32 	%f45, %f33, %f7, %f32;

BB1_13:
	@%p10 bra 	BB1_15;

	mov.f32 	%f34, 0f3D2AAAA5;
	fma.rn.f32 	%f35, %f45, %f7, %f34;
	mov.f32 	%f36, 0fBF000000;
	fma.rn.f32 	%f46, %f35, %f7, %f36;
	bra.uni 	BB1_16;

BB1_15:
	mov.f32 	%f37, 0fBE2AAAA3;
	fma.rn.f32 	%f38, %f45, %f7, %f37;
	mov.f32 	%f39, 0f00000000;
	fma.rn.f32 	%f46, %f38, %f7, %f39;

BB1_16:
	fma.rn.f32 	%f47, %f46, %f44, %f44;
	@%p10 bra 	BB1_18;

	mov.f32 	%f40, 0f3F800000;
	fma.rn.f32 	%f47, %f46, %f7, %f40;

BB1_18:
	and.b32  	%r83, %r92, 2;
	setp.eq.s32	%p13, %r83, 0;
	@%p13 bra 	BB1_20;

	mov.f32 	%f41, 0f00000000;
	mov.f32 	%f42, 0fBF800000;
	fma.rn.f32 	%f47, %f47, %f42, %f41;

BB1_20:
	cvt.rzi.s32.f32	%r84, %f47;
	st.param.b32	[funj_retval0+0], %r84;
	ret;
}

.visible .func  (.param .b32 funj_retval0) ___sinu(
	.param .b32 ___sinu_param_0
)
{
	.local .align 4 .b8 	__local_depot2[28];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<14>;
	.reg .s32 	%r<93>;
	.reg .f32 	%f<48>;
	.reg .s64 	%rd<12>;


	mov.u64 	%SPL, __local_depot2;
	ld.param.u32 	%r30, [___sinu_param_0];
	add.u64 	%rd7, %SPL, 0;
	cvt.rn.f32.u32	%f43, %r30;
	abs.f32 	%f19, %f43;
	setp.neu.f32	%p1, %f19, 0f7F800000;
	@%p1 bra 	BB2_2;

	mov.f32 	%f20, 0f00000000;
	mul.rn.f32 	%f43, %f43, %f20;

BB2_2:
	mul.f32 	%f21, %f43, 0f3F22F983;
	cvt.rni.s32.f32	%r92, %f21;
	cvt.rn.f32.s32	%f22, %r92;
	neg.f32 	%f23, %f22;
	mov.f32 	%f24, 0f3FC90FDA;
	fma.rn.f32 	%f25, %f23, %f24, %f43;
	mov.f32 	%f26, 0f33A22168;
	fma.rn.f32 	%f27, %f23, %f26, %f25;
	mov.f32 	%f28, 0f27C234C5;
	fma.rn.f32 	%f44, %f23, %f28, %f27;
	abs.f32 	%f29, %f43;
	setp.leu.f32	%p2, %f29, 0f47CE4780;
	@%p2 bra 	BB2_10;

	mov.b32 	 %r2, %f43;
	shr.u32 	%r3, %r2, 23;
	bfe.u32 	%r33, %r2, 23, 8;
	add.s32 	%r34, %r33, -128;
	shl.b32 	%r35, %r2, 8;
	or.b32  	%r4, %r35, -2147483648;
	shr.u32 	%r36, %r34, 5;
	mov.u32 	%r37, 4;
	sub.s32 	%r5, %r37, %r36;
	mov.u32 	%r86, 0;
	mov.u32 	%r85, %r86;
	mov.u64 	%rd10, __cudart_i2opi_f;
	mov.u64 	%rd11, %rd7;

BB2_4:
	.pragma "nounroll";
	mov.u64 	%rd3, %rd11;
	ld.const.u32 	%r40, [%rd10];
	// inline asm
	{
	mad.lo.cc.u32   %r38, %r40, %r4, %r86;
	madc.hi.u32     %r39, %r40, %r4,  0;
	}
	// inline asm
	st.local.u32 	[%rd3], %r38;
	add.s64 	%rd4, %rd3, 4;
	add.s64 	%rd10, %rd10, 4;
	add.s32 	%r85, %r85, 1;
	setp.ne.s32	%p3, %r85, 6;
	mov.u32 	%r86, %r39;
	mov.u64 	%rd11, %rd4;
	@%p3 bra 	BB2_4;

	and.b32  	%r10, %r2, -2147483648;
	st.local.u32 	[%rd7+24], %r39;
	add.s32 	%r43, %r5, 2;
	mul.wide.s32 	%rd9, %r43, 4;
	add.s64 	%rd6, %rd7, %rd9;
	ld.local.u32 	%r87, [%rd6];
	ld.local.u32 	%r88, [%rd6+-4];
	and.b32  	%r13, %r3, 31;
	setp.eq.s32	%p4, %r13, 0;
	@%p4 bra 	BB2_7;

	mov.u32 	%r44, 32;
	sub.s32 	%r45, %r44, %r13;
	shr.u32 	%r46, %r88, %r45;
	shl.b32 	%r47, %r87, %r13;
	add.s32 	%r87, %r46, %r47;
	ld.local.u32 	%r48, [%rd6+-8];
	shr.u32 	%r49, %r48, %r45;
	shl.b32 	%r50, %r88, %r13;
	add.s32 	%r88, %r49, %r50;

BB2_7:
	shr.u32 	%r51, %r88, 30;
	shl.b32 	%r52, %r87, 2;
	add.s32 	%r89, %r51, %r52;
	shl.b32 	%r19, %r88, 2;
	shr.u32 	%r53, %r89, 31;
	shr.u32 	%r54, %r87, 30;
	add.s32 	%r20, %r53, %r54;
	setp.eq.s32	%p5, %r53, 0;
	mov.u32 	%r90, %r10;
	mov.u32 	%r91, %r19;
	@%p5 bra 	BB2_9;

	not.b32 	%r55, %r89;
	neg.s32 	%r21, %r19;
	setp.eq.s32	%p6, %r19, 0;
	selp.u32	%r56, 1, 0, %p6;
	add.s32 	%r89, %r56, %r55;
	xor.b32  	%r23, %r10, -2147483648;
	mov.u32 	%r90, %r23;
	mov.u32 	%r91, %r21;

BB2_9:
	mov.u32 	%r25, %r90;
	neg.s32 	%r57, %r20;
	setp.eq.s32	%p7, %r10, 0;
	selp.b32	%r92, %r20, %r57, %p7;
	clz.b32 	%r58, %r89;
	setp.eq.s32	%p8, %r58, 0;
	shl.b32 	%r59, %r89, %r58;
	mov.u32 	%r60, 32;
	sub.s32 	%r61, %r60, %r58;
	shr.u32 	%r62, %r91, %r61;
	add.s32 	%r63, %r62, %r59;
	selp.b32	%r64, %r89, %r63, %p8;
	mul.lo.s32 	%r65, %r64, -921707870;
	mov.u32 	%r66, -921707870;
	mul.hi.u32 	%r67, %r64, %r66;
	setp.gt.s32	%p9, %r67, 0;
	shl.b32 	%r68, %r67, 1;
	shr.u32 	%r69, %r65, 31;
	add.s32 	%r70, %r69, %r68;
	selp.b32	%r71, %r70, %r67, %p9;
	selp.b32	%r72, -1, 0, %p9;
	mov.u32 	%r73, 126;
	sub.s32 	%r74, %r73, %r58;
	add.s32 	%r75, %r74, %r72;
	shl.b32 	%r76, %r75, 23;
	add.s32 	%r77, %r71, 1;
	shr.u32 	%r78, %r77, 7;
	add.s32 	%r79, %r78, 1;
	shr.u32 	%r80, %r79, 1;
	add.s32 	%r81, %r80, %r76;
	or.b32  	%r82, %r81, %r25;
	mov.b32 	 %f44, %r82;

BB2_10:
	mul.rn.f32 	%f7, %f44, %f44;
	and.b32  	%r29, %r92, 1;
	setp.eq.s32	%p10, %r29, 0;
	@%p10 bra 	BB2_12;

	mov.f32 	%f30, 0fBAB6061A;
	mov.f32 	%f31, 0f37CCF5CE;
	fma.rn.f32 	%f45, %f31, %f7, %f30;
	bra.uni 	BB2_13;

BB2_12:
	mov.f32 	%f32, 0f3C08839E;
	mov.f32 	%f33, 0fB94CA1F9;
	fma.rn.f32 	%f45, %f33, %f7, %f32;

BB2_13:
	@%p10 bra 	BB2_15;

	mov.f32 	%f34, 0f3D2AAAA5;
	fma.rn.f32 	%f35, %f45, %f7, %f34;
	mov.f32 	%f36, 0fBF000000;
	fma.rn.f32 	%f46, %f35, %f7, %f36;
	bra.uni 	BB2_16;

BB2_15:
	mov.f32 	%f37, 0fBE2AAAA3;
	fma.rn.f32 	%f38, %f45, %f7, %f37;
	mov.f32 	%f39, 0f00000000;
	fma.rn.f32 	%f46, %f38, %f7, %f39;

BB2_16:
	fma.rn.f32 	%f47, %f46, %f44, %f44;
	@%p10 bra 	BB2_18;

	mov.f32 	%f40, 0f3F800000;
	fma.rn.f32 	%f47, %f46, %f7, %f40;

BB2_18:
	and.b32  	%r83, %r92, 2;
	setp.eq.s32	%p13, %r83, 0;
	@%p13 bra 	BB2_20;

	mov.f32 	%f41, 0f00000000;
	mov.f32 	%f42, 0fBF800000;
	fma.rn.f32 	%f47, %f47, %f42, %f41;

BB2_20:
	cvt.rzi.u32.f32	%r84, %f47;
	st.param.b32	[funj_retval0+0], %r84;
	ret;
}

.visible .func  (.param .b32 funj_retval0) ___sinj(
	.param .b32 ___sinj_param_0
)
{
	.local .align 4 .b8 	__local_depot3[28];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<14>;
	.reg .s16 	%rs<2>;
	.reg .s32 	%r<93>;
	.reg .f32 	%f<48>;
	.reg .s64 	%rd<12>;


	mov.u64 	%SPL, __local_depot3;
	add.u64 	%rd7, %SPL, 0;
	ld.param.s8 	%rs1, [___sinj_param_0];
	cvt.rn.f32.s16	%f43, %rs1;
	abs.f32 	%f19, %f43;
	setp.neu.f32	%p1, %f19, 0f7F800000;
	@%p1 bra 	BB3_2;

	mov.f32 	%f20, 0f00000000;
	mul.rn.f32 	%f43, %f43, %f20;

BB3_2:
	mul.f32 	%f21, %f43, 0f3F22F983;
	cvt.rni.s32.f32	%r92, %f21;
	cvt.rn.f32.s32	%f22, %r92;
	neg.f32 	%f23, %f22;
	mov.f32 	%f24, 0f3FC90FDA;
	fma.rn.f32 	%f25, %f23, %f24, %f43;
	mov.f32 	%f26, 0f33A22168;
	fma.rn.f32 	%f27, %f23, %f26, %f25;
	mov.f32 	%f28, 0f27C234C5;
	fma.rn.f32 	%f44, %f23, %f28, %f27;
	abs.f32 	%f29, %f43;
	setp.leu.f32	%p2, %f29, 0f47CE4780;
	@%p2 bra 	BB3_10;

	mov.b32 	 %r2, %f43;
	shr.u32 	%r3, %r2, 23;
	bfe.u32 	%r32, %r2, 23, 8;
	add.s32 	%r33, %r32, -128;
	shl.b32 	%r34, %r2, 8;
	or.b32  	%r4, %r34, -2147483648;
	shr.u32 	%r35, %r33, 5;
	mov.u32 	%r36, 4;
	sub.s32 	%r5, %r36, %r35;
	mov.u32 	%r86, 0;
	mov.u32 	%r85, %r86;
	mov.u64 	%rd10, __cudart_i2opi_f;
	mov.u64 	%rd11, %rd7;

BB3_4:
	.pragma "nounroll";
	mov.u64 	%rd3, %rd11;
	ld.const.u32 	%r39, [%rd10];
	// inline asm
	{
	mad.lo.cc.u32   %r37, %r39, %r4, %r86;
	madc.hi.u32     %r38, %r39, %r4,  0;
	}
	// inline asm
	st.local.u32 	[%rd3], %r37;
	add.s64 	%rd4, %rd3, 4;
	add.s64 	%rd10, %rd10, 4;
	add.s32 	%r85, %r85, 1;
	setp.ne.s32	%p3, %r85, 6;
	mov.u32 	%r86, %r38;
	mov.u64 	%rd11, %rd4;
	@%p3 bra 	BB3_4;

	and.b32  	%r10, %r2, -2147483648;
	st.local.u32 	[%rd7+24], %r38;
	add.s32 	%r42, %r5, 2;
	mul.wide.s32 	%rd9, %r42, 4;
	add.s64 	%rd6, %rd7, %rd9;
	ld.local.u32 	%r87, [%rd6];
	ld.local.u32 	%r88, [%rd6+-4];
	and.b32  	%r13, %r3, 31;
	setp.eq.s32	%p4, %r13, 0;
	@%p4 bra 	BB3_7;

	mov.u32 	%r43, 32;
	sub.s32 	%r44, %r43, %r13;
	shr.u32 	%r45, %r88, %r44;
	shl.b32 	%r46, %r87, %r13;
	add.s32 	%r87, %r45, %r46;
	ld.local.u32 	%r47, [%rd6+-8];
	shr.u32 	%r48, %r47, %r44;
	shl.b32 	%r49, %r88, %r13;
	add.s32 	%r88, %r48, %r49;

BB3_7:
	shr.u32 	%r50, %r88, 30;
	shl.b32 	%r51, %r87, 2;
	add.s32 	%r89, %r50, %r51;
	shl.b32 	%r19, %r88, 2;
	shr.u32 	%r52, %r89, 31;
	shr.u32 	%r53, %r87, 30;
	add.s32 	%r20, %r52, %r53;
	setp.eq.s32	%p5, %r52, 0;
	mov.u32 	%r90, %r10;
	mov.u32 	%r91, %r19;
	@%p5 bra 	BB3_9;

	not.b32 	%r54, %r89;
	neg.s32 	%r21, %r19;
	setp.eq.s32	%p6, %r19, 0;
	selp.u32	%r55, 1, 0, %p6;
	add.s32 	%r89, %r55, %r54;
	xor.b32  	%r23, %r10, -2147483648;
	mov.u32 	%r90, %r23;
	mov.u32 	%r91, %r21;

BB3_9:
	mov.u32 	%r25, %r90;
	neg.s32 	%r56, %r20;
	setp.eq.s32	%p7, %r10, 0;
	selp.b32	%r92, %r20, %r56, %p7;
	clz.b32 	%r57, %r89;
	setp.eq.s32	%p8, %r57, 0;
	shl.b32 	%r58, %r89, %r57;
	mov.u32 	%r59, 32;
	sub.s32 	%r60, %r59, %r57;
	shr.u32 	%r61, %r91, %r60;
	add.s32 	%r62, %r61, %r58;
	selp.b32	%r63, %r89, %r62, %p8;
	mul.lo.s32 	%r64, %r63, -921707870;
	mov.u32 	%r65, -921707870;
	mul.hi.u32 	%r66, %r63, %r65;
	setp.gt.s32	%p9, %r66, 0;
	shl.b32 	%r67, %r66, 1;
	shr.u32 	%r68, %r64, 31;
	add.s32 	%r69, %r68, %r67;
	selp.b32	%r70, %r69, %r66, %p9;
	selp.b32	%r71, -1, 0, %p9;
	mov.u32 	%r72, 126;
	sub.s32 	%r73, %r72, %r57;
	add.s32 	%r74, %r73, %r71;
	shl.b32 	%r75, %r74, 23;
	add.s32 	%r76, %r70, 1;
	shr.u32 	%r77, %r76, 7;
	add.s32 	%r78, %r77, 1;
	shr.u32 	%r79, %r78, 1;
	add.s32 	%r80, %r79, %r75;
	or.b32  	%r81, %r80, %r25;
	mov.b32 	 %f44, %r81;

BB3_10:
	mul.rn.f32 	%f7, %f44, %f44;
	and.b32  	%r29, %r92, 1;
	setp.eq.s32	%p10, %r29, 0;
	@%p10 bra 	BB3_12;

	mov.f32 	%f30, 0fBAB6061A;
	mov.f32 	%f31, 0f37CCF5CE;
	fma.rn.f32 	%f45, %f31, %f7, %f30;
	bra.uni 	BB3_13;

BB3_12:
	mov.f32 	%f32, 0f3C08839E;
	mov.f32 	%f33, 0fB94CA1F9;
	fma.rn.f32 	%f45, %f33, %f7, %f32;

BB3_13:
	@%p10 bra 	BB3_15;

	mov.f32 	%f34, 0f3D2AAAA5;
	fma.rn.f32 	%f35, %f45, %f7, %f34;
	mov.f32 	%f36, 0fBF000000;
	fma.rn.f32 	%f46, %f35, %f7, %f36;
	bra.uni 	BB3_16;

BB3_15:
	mov.f32 	%f37, 0fBE2AAAA3;
	fma.rn.f32 	%f38, %f45, %f7, %f37;
	mov.f32 	%f39, 0f00000000;
	fma.rn.f32 	%f46, %f38, %f7, %f39;

BB3_16:
	fma.rn.f32 	%f47, %f46, %f44, %f44;
	@%p10 bra 	BB3_18;

	mov.f32 	%f40, 0f3F800000;
	fma.rn.f32 	%f47, %f46, %f7, %f40;

BB3_18:
	and.b32  	%r82, %r92, 2;
	setp.eq.s32	%p13, %r82, 0;
	@%p13 bra 	BB3_20;

	mov.f32 	%f41, 0f00000000;
	mov.f32 	%f42, 0fBF800000;
	fma.rn.f32 	%f47, %f47, %f42, %f41;

BB3_20:
	cvt.rzi.s32.f32	%r83, %f47;
	cvt.s32.s8 	%r84, %r83;
	st.param.b32	[funj_retval0+0], %r84;
	ret;
}

.visible .func  (.param .b32 funj_retval0) ___sinv(
	.param .b32 ___sinv_param_0
)
{
	.local .align 4 .b8 	__local_depot4[28];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<14>;
	.reg .s16 	%rs<2>;
	.reg .s32 	%r<93>;
	.reg .f32 	%f<48>;
	.reg .s64 	%rd<12>;


	mov.u64 	%SPL, __local_depot4;
	add.u64 	%rd7, %SPL, 0;
	ld.param.u8 	%rs1, [___sinv_param_0];
	cvt.rn.f32.u16	%f43, %rs1;
	abs.f32 	%f19, %f43;
	setp.neu.f32	%p1, %f19, 0f7F800000;
	@%p1 bra 	BB4_2;

	mov.f32 	%f20, 0f00000000;
	mul.rn.f32 	%f43, %f43, %f20;

BB4_2:
	mul.f32 	%f21, %f43, 0f3F22F983;
	cvt.rni.s32.f32	%r92, %f21;
	cvt.rn.f32.s32	%f22, %r92;
	neg.f32 	%f23, %f22;
	mov.f32 	%f24, 0f3FC90FDA;
	fma.rn.f32 	%f25, %f23, %f24, %f43;
	mov.f32 	%f26, 0f33A22168;
	fma.rn.f32 	%f27, %f23, %f26, %f25;
	mov.f32 	%f28, 0f27C234C5;
	fma.rn.f32 	%f44, %f23, %f28, %f27;
	abs.f32 	%f29, %f43;
	setp.leu.f32	%p2, %f29, 0f47CE4780;
	@%p2 bra 	BB4_10;

	mov.b32 	 %r2, %f43;
	shr.u32 	%r3, %r2, 23;
	bfe.u32 	%r32, %r2, 23, 8;
	add.s32 	%r33, %r32, -128;
	shl.b32 	%r34, %r2, 8;
	or.b32  	%r4, %r34, -2147483648;
	shr.u32 	%r35, %r33, 5;
	mov.u32 	%r36, 4;
	sub.s32 	%r5, %r36, %r35;
	mov.u32 	%r86, 0;
	mov.u32 	%r85, %r86;
	mov.u64 	%rd10, __cudart_i2opi_f;
	mov.u64 	%rd11, %rd7;

BB4_4:
	.pragma "nounroll";
	mov.u64 	%rd3, %rd11;
	ld.const.u32 	%r39, [%rd10];
	// inline asm
	{
	mad.lo.cc.u32   %r37, %r39, %r4, %r86;
	madc.hi.u32     %r38, %r39, %r4,  0;
	}
	// inline asm
	st.local.u32 	[%rd3], %r37;
	add.s64 	%rd4, %rd3, 4;
	add.s64 	%rd10, %rd10, 4;
	add.s32 	%r85, %r85, 1;
	setp.ne.s32	%p3, %r85, 6;
	mov.u32 	%r86, %r38;
	mov.u64 	%rd11, %rd4;
	@%p3 bra 	BB4_4;

	and.b32  	%r10, %r2, -2147483648;
	st.local.u32 	[%rd7+24], %r38;
	add.s32 	%r42, %r5, 2;
	mul.wide.s32 	%rd9, %r42, 4;
	add.s64 	%rd6, %rd7, %rd9;
	ld.local.u32 	%r87, [%rd6];
	ld.local.u32 	%r88, [%rd6+-4];
	and.b32  	%r13, %r3, 31;
	setp.eq.s32	%p4, %r13, 0;
	@%p4 bra 	BB4_7;

	mov.u32 	%r43, 32;
	sub.s32 	%r44, %r43, %r13;
	shr.u32 	%r45, %r88, %r44;
	shl.b32 	%r46, %r87, %r13;
	add.s32 	%r87, %r45, %r46;
	ld.local.u32 	%r47, [%rd6+-8];
	shr.u32 	%r48, %r47, %r44;
	shl.b32 	%r49, %r88, %r13;
	add.s32 	%r88, %r48, %r49;

BB4_7:
	shr.u32 	%r50, %r88, 30;
	shl.b32 	%r51, %r87, 2;
	add.s32 	%r89, %r50, %r51;
	shl.b32 	%r19, %r88, 2;
	shr.u32 	%r52, %r89, 31;
	shr.u32 	%r53, %r87, 30;
	add.s32 	%r20, %r52, %r53;
	setp.eq.s32	%p5, %r52, 0;
	mov.u32 	%r90, %r10;
	mov.u32 	%r91, %r19;
	@%p5 bra 	BB4_9;

	not.b32 	%r54, %r89;
	neg.s32 	%r21, %r19;
	setp.eq.s32	%p6, %r19, 0;
	selp.u32	%r55, 1, 0, %p6;
	add.s32 	%r89, %r55, %r54;
	xor.b32  	%r23, %r10, -2147483648;
	mov.u32 	%r90, %r23;
	mov.u32 	%r91, %r21;

BB4_9:
	mov.u32 	%r25, %r90;
	neg.s32 	%r56, %r20;
	setp.eq.s32	%p7, %r10, 0;
	selp.b32	%r92, %r20, %r56, %p7;
	clz.b32 	%r57, %r89;
	setp.eq.s32	%p8, %r57, 0;
	shl.b32 	%r58, %r89, %r57;
	mov.u32 	%r59, 32;
	sub.s32 	%r60, %r59, %r57;
	shr.u32 	%r61, %r91, %r60;
	add.s32 	%r62, %r61, %r58;
	selp.b32	%r63, %r89, %r62, %p8;
	mul.lo.s32 	%r64, %r63, -921707870;
	mov.u32 	%r65, -921707870;
	mul.hi.u32 	%r66, %r63, %r65;
	setp.gt.s32	%p9, %r66, 0;
	shl.b32 	%r67, %r66, 1;
	shr.u32 	%r68, %r64, 31;
	add.s32 	%r69, %r68, %r67;
	selp.b32	%r70, %r69, %r66, %p9;
	selp.b32	%r71, -1, 0, %p9;
	mov.u32 	%r72, 126;
	sub.s32 	%r73, %r72, %r57;
	add.s32 	%r74, %r73, %r71;
	shl.b32 	%r75, %r74, 23;
	add.s32 	%r76, %r70, 1;
	shr.u32 	%r77, %r76, 7;
	add.s32 	%r78, %r77, 1;
	shr.u32 	%r79, %r78, 1;
	add.s32 	%r80, %r79, %r75;
	or.b32  	%r81, %r80, %r25;
	mov.b32 	 %f44, %r81;

BB4_10:
	mul.rn.f32 	%f7, %f44, %f44;
	and.b32  	%r29, %r92, 1;
	setp.eq.s32	%p10, %r29, 0;
	@%p10 bra 	BB4_12;

	mov.f32 	%f30, 0fBAB6061A;
	mov.f32 	%f31, 0f37CCF5CE;
	fma.rn.f32 	%f45, %f31, %f7, %f30;
	bra.uni 	BB4_13;

BB4_12:
	mov.f32 	%f32, 0f3C08839E;
	mov.f32 	%f33, 0fB94CA1F9;
	fma.rn.f32 	%f45, %f33, %f7, %f32;

BB4_13:
	@%p10 bra 	BB4_15;

	mov.f32 	%f34, 0f3D2AAAA5;
	fma.rn.f32 	%f35, %f45, %f7, %f34;
	mov.f32 	%f36, 0fBF000000;
	fma.rn.f32 	%f46, %f35, %f7, %f36;
	bra.uni 	BB4_16;

BB4_15:
	mov.f32 	%f37, 0fBE2AAAA3;
	fma.rn.f32 	%f38, %f45, %f7, %f37;
	mov.f32 	%f39, 0f00000000;
	fma.rn.f32 	%f46, %f38, %f7, %f39;

BB4_16:
	fma.rn.f32 	%f47, %f46, %f44, %f44;
	@%p10 bra 	BB4_18;

	mov.f32 	%f40, 0f3F800000;
	fma.rn.f32 	%f47, %f46, %f7, %f40;

BB4_18:
	and.b32  	%r82, %r92, 2;
	setp.eq.s32	%p13, %r82, 0;
	@%p13 bra 	BB4_20;

	mov.f32 	%f41, 0f00000000;
	mov.f32 	%f42, 0fBF800000;
	fma.rn.f32 	%f47, %f47, %f42, %f41;

BB4_20:
	cvt.rzi.u32.f32	%r83, %f47;
	and.b32  	%r84, %r83, 255;
	st.param.b32	[funj_retval0+0], %r84;
	ret;
}

.visible .func  (.param .b64 funj_retval0) ___sind(
	.param .b64 ___sind_param_0
)
{
	.local .align 4 .b8 	__local_depot5[4];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<5>;
	.reg .s32 	%r<10>;
	.reg .s64 	%rd<7>;
	.reg .f64 	%fd<42>;


	mov.u64 	%SPL, __local_depot5;
	cvta.local.u64 	%SP, %SPL;
	ld.param.f64 	%fd39, [___sind_param_0];
	add.u64 	%rd2, %SP, 0;
	cvta.to.local.u64 	%rd1, %rd2;
	abs.f64 	%fd14, %fd39;
	setp.neu.f64	%p1, %fd14, 0d7FF0000000000000;
	@%p1 bra 	BB5_2;

	mov.f64 	%fd15, 0d0000000000000000;
	mul.rn.f64 	%fd39, %fd39, %fd15;

BB5_2:
	mul.f64 	%fd16, %fd39, 0d3FE45F306DC9C883;
	cvt.rni.s32.f64	%r9, %fd16;
	st.local.u32 	[%rd1], %r9;
	cvt.rn.f64.s32	%fd17, %r9;
	neg.f64 	%fd18, %fd17;
	mov.f64 	%fd19, 0d3FF921FB54442D18;
	fma.rn.f64 	%fd20, %fd18, %fd19, %fd39;
	mov.f64 	%fd21, 0d3C91A62633145C00;
	fma.rn.f64 	%fd22, %fd18, %fd21, %fd20;
	mov.f64 	%fd23, 0d397B839A252049C0;
	fma.rn.f64 	%fd40, %fd18, %fd23, %fd22;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r4}, %fd39;
	}
	and.b32  	%r5, %r4, 2145386496;
	setp.lt.u32	%p2, %r5, 1105199104;
	@%p2 bra 	BB5_4;

	// Callseq Start 0
	{
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.f64	[param0+0], %fd39;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd2;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_trig_reduction_slowpathd, 
	(
	param0, 
	param1
	);
	ld.param.f64	%fd40, [retval0+0];
	}
	// Callseq End 0
	ld.local.u32 	%r9, [%rd1];

BB5_4:
	and.b32  	%r6, %r9, 1;
	shl.b32 	%r7, %r6, 3;
	setp.eq.s32	%p3, %r6, 0;
	selp.f64	%fd24, 0d3DE5DB65F9785EBA, 0dBDA8FF8320FD8164, %p3;
	mul.wide.u32 	%rd4, %r7, 8;
	mov.u64 	%rd5, __cudart_sin_cos_coeffs;
	add.s64 	%rd6, %rd4, %rd5;
	ld.const.f64 	%fd25, [%rd6+8];
	mul.rn.f64 	%fd6, %fd40, %fd40;
	fma.rn.f64 	%fd26, %fd24, %fd6, %fd25;
	ld.const.f64 	%fd27, [%rd6+16];
	fma.rn.f64 	%fd28, %fd26, %fd6, %fd27;
	ld.const.f64 	%fd29, [%rd6+24];
	fma.rn.f64 	%fd30, %fd28, %fd6, %fd29;
	ld.const.f64 	%fd31, [%rd6+32];
	fma.rn.f64 	%fd32, %fd30, %fd6, %fd31;
	ld.const.f64 	%fd33, [%rd6+40];
	fma.rn.f64 	%fd34, %fd32, %fd6, %fd33;
	ld.const.f64 	%fd35, [%rd6+48];
	fma.rn.f64 	%fd7, %fd34, %fd6, %fd35;
	fma.rn.f64 	%fd41, %fd7, %fd40, %fd40;
	@%p3 bra 	BB5_6;

	mov.f64 	%fd36, 0d3FF0000000000000;
	fma.rn.f64 	%fd41, %fd7, %fd6, %fd36;

BB5_6:
	and.b32  	%r8, %r9, 2;
	setp.eq.s32	%p4, %r8, 0;
	@%p4 bra 	BB5_8;

	mov.f64 	%fd37, 0d0000000000000000;
	mov.f64 	%fd38, 0dBFF0000000000000;
	fma.rn.f64 	%fd41, %fd41, %fd38, %fd37;

BB5_8:
	st.param.f64	[funj_retval0+0], %fd41;
	ret;
}

.visible .func  (.param .b32 funj_retval0) ___coss(
	.param .b32 ___coss_param_0
)
{
	.local .align 4 .b8 	__local_depot6[28];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<14>;
	.reg .s32 	%r<92>;
	.reg .f32 	%f<48>;
	.reg .s64 	%rd<12>;


	mov.u64 	%SPL, __local_depot6;
	ld.param.f32 	%f43, [___coss_param_0];
	add.u64 	%rd7, %SPL, 0;
	abs.f32 	%f19, %f43;
	setp.neu.f32	%p1, %f19, 0f7F800000;
	@%p1 bra 	BB6_2;

	mov.f32 	%f20, 0f00000000;
	mul.rn.f32 	%f43, %f43, %f20;

BB6_2:
	mul.f32 	%f21, %f43, 0f3F22F983;
	cvt.rni.s32.f32	%r91, %f21;
	cvt.rn.f32.s32	%f22, %r91;
	neg.f32 	%f23, %f22;
	mov.f32 	%f24, 0f3FC90FDA;
	fma.rn.f32 	%f25, %f23, %f24, %f43;
	mov.f32 	%f26, 0f33A22168;
	fma.rn.f32 	%f27, %f23, %f26, %f25;
	mov.f32 	%f28, 0f27C234C5;
	fma.rn.f32 	%f44, %f23, %f28, %f27;
	abs.f32 	%f29, %f43;
	setp.leu.f32	%p2, %f29, 0f47CE4780;
	@%p2 bra 	BB6_10;

	mov.b32 	 %r2, %f43;
	shr.u32 	%r3, %r2, 23;
	bfe.u32 	%r33, %r2, 23, 8;
	add.s32 	%r34, %r33, -128;
	shl.b32 	%r35, %r2, 8;
	or.b32  	%r4, %r35, -2147483648;
	shr.u32 	%r36, %r34, 5;
	mov.u32 	%r37, 4;
	sub.s32 	%r5, %r37, %r36;
	mov.u32 	%r85, 0;
	mov.u32 	%r84, %r85;
	mov.u64 	%rd10, __cudart_i2opi_f;
	mov.u64 	%rd11, %rd7;

BB6_4:
	.pragma "nounroll";
	mov.u64 	%rd3, %rd11;
	ld.const.u32 	%r40, [%rd10];
	// inline asm
	{
	mad.lo.cc.u32   %r38, %r40, %r4, %r85;
	madc.hi.u32     %r39, %r40, %r4,  0;
	}
	// inline asm
	st.local.u32 	[%rd3], %r38;
	add.s64 	%rd4, %rd3, 4;
	add.s64 	%rd10, %rd10, 4;
	add.s32 	%r84, %r84, 1;
	setp.ne.s32	%p3, %r84, 6;
	mov.u32 	%r85, %r39;
	mov.u64 	%rd11, %rd4;
	@%p3 bra 	BB6_4;

	and.b32  	%r10, %r2, -2147483648;
	st.local.u32 	[%rd7+24], %r39;
	add.s32 	%r43, %r5, 2;
	mul.wide.s32 	%rd9, %r43, 4;
	add.s64 	%rd6, %rd7, %rd9;
	ld.local.u32 	%r86, [%rd6];
	ld.local.u32 	%r87, [%rd6+-4];
	and.b32  	%r13, %r3, 31;
	setp.eq.s32	%p4, %r13, 0;
	@%p4 bra 	BB6_7;

	mov.u32 	%r44, 32;
	sub.s32 	%r45, %r44, %r13;
	shr.u32 	%r46, %r87, %r45;
	shl.b32 	%r47, %r86, %r13;
	add.s32 	%r86, %r46, %r47;
	ld.local.u32 	%r48, [%rd6+-8];
	shr.u32 	%r49, %r48, %r45;
	shl.b32 	%r50, %r87, %r13;
	add.s32 	%r87, %r49, %r50;

BB6_7:
	shr.u32 	%r51, %r87, 30;
	shl.b32 	%r52, %r86, 2;
	add.s32 	%r88, %r51, %r52;
	shl.b32 	%r19, %r87, 2;
	shr.u32 	%r53, %r88, 31;
	shr.u32 	%r54, %r86, 30;
	add.s32 	%r20, %r53, %r54;
	setp.eq.s32	%p5, %r53, 0;
	mov.u32 	%r89, %r10;
	mov.u32 	%r90, %r19;
	@%p5 bra 	BB6_9;

	not.b32 	%r55, %r88;
	neg.s32 	%r21, %r19;
	setp.eq.s32	%p6, %r19, 0;
	selp.u32	%r56, 1, 0, %p6;
	add.s32 	%r88, %r56, %r55;
	xor.b32  	%r23, %r10, -2147483648;
	mov.u32 	%r89, %r23;
	mov.u32 	%r90, %r21;

BB6_9:
	mov.u32 	%r25, %r89;
	neg.s32 	%r57, %r20;
	setp.eq.s32	%p7, %r10, 0;
	selp.b32	%r91, %r20, %r57, %p7;
	clz.b32 	%r58, %r88;
	setp.eq.s32	%p8, %r58, 0;
	shl.b32 	%r59, %r88, %r58;
	mov.u32 	%r60, 32;
	sub.s32 	%r61, %r60, %r58;
	shr.u32 	%r62, %r90, %r61;
	add.s32 	%r63, %r62, %r59;
	selp.b32	%r64, %r88, %r63, %p8;
	mul.lo.s32 	%r65, %r64, -921707870;
	mov.u32 	%r66, -921707870;
	mul.hi.u32 	%r67, %r64, %r66;
	setp.gt.s32	%p9, %r67, 0;
	shl.b32 	%r68, %r67, 1;
	shr.u32 	%r69, %r65, 31;
	add.s32 	%r70, %r69, %r68;
	selp.b32	%r71, %r70, %r67, %p9;
	selp.b32	%r72, -1, 0, %p9;
	mov.u32 	%r73, 126;
	sub.s32 	%r74, %r73, %r58;
	add.s32 	%r75, %r74, %r72;
	shl.b32 	%r76, %r75, 23;
	add.s32 	%r77, %r71, 1;
	shr.u32 	%r78, %r77, 7;
	add.s32 	%r79, %r78, 1;
	shr.u32 	%r80, %r79, 1;
	add.s32 	%r81, %r80, %r76;
	or.b32  	%r82, %r81, %r25;
	mov.b32 	 %f44, %r82;

BB6_10:
	mul.rn.f32 	%f6, %f44, %f44;
	add.s32 	%r29, %r91, 1;
	and.b32  	%r30, %r29, 1;
	setp.eq.s32	%p10, %r30, 0;
	@%p10 bra 	BB6_12;

	mov.f32 	%f30, 0fBAB6061A;
	mov.f32 	%f31, 0f37CCF5CE;
	fma.rn.f32 	%f45, %f31, %f6, %f30;
	bra.uni 	BB6_13;

BB6_12:
	mov.f32 	%f32, 0f3C08839E;
	mov.f32 	%f33, 0fB94CA1F9;
	fma.rn.f32 	%f45, %f33, %f6, %f32;

BB6_13:
	@%p10 bra 	BB6_15;

	mov.f32 	%f34, 0f3D2AAAA5;
	fma.rn.f32 	%f35, %f45, %f6, %f34;
	mov.f32 	%f36, 0fBF000000;
	fma.rn.f32 	%f46, %f35, %f6, %f36;
	bra.uni 	BB6_16;

BB6_15:
	mov.f32 	%f37, 0fBE2AAAA3;
	fma.rn.f32 	%f38, %f45, %f6, %f37;
	mov.f32 	%f39, 0f00000000;
	fma.rn.f32 	%f46, %f38, %f6, %f39;

BB6_16:
	fma.rn.f32 	%f47, %f46, %f44, %f44;
	@%p10 bra 	BB6_18;

	mov.f32 	%f40, 0f3F800000;
	fma.rn.f32 	%f47, %f46, %f6, %f40;

BB6_18:
	and.b32  	%r83, %r29, 2;
	setp.eq.s32	%p13, %r83, 0;
	@%p13 bra 	BB6_20;

	mov.f32 	%f41, 0f00000000;
	mov.f32 	%f42, 0fBF800000;
	fma.rn.f32 	%f47, %f47, %f42, %f41;

BB6_20:
	st.param.f32	[funj_retval0+0], %f47;
	ret;
}

.visible .func  (.param .b32 funj_retval0) ___cosi(
	.param .b32 ___cosi_param_0
)
{
	.local .align 4 .b8 	__local_depot7[28];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<14>;
	.reg .s32 	%r<94>;
	.reg .f32 	%f<48>;
	.reg .s64 	%rd<12>;


	mov.u64 	%SPL, __local_depot7;
	ld.param.u32 	%r31, [___cosi_param_0];
	add.u64 	%rd7, %SPL, 0;
	cvt.rn.f32.s32	%f43, %r31;
	abs.f32 	%f19, %f43;
	setp.neu.f32	%p1, %f19, 0f7F800000;
	@%p1 bra 	BB7_2;

	mov.f32 	%f20, 0f00000000;
	mul.rn.f32 	%f43, %f43, %f20;

BB7_2:
	mul.f32 	%f21, %f43, 0f3F22F983;
	cvt.rni.s32.f32	%r93, %f21;
	cvt.rn.f32.s32	%f22, %r93;
	neg.f32 	%f23, %f22;
	mov.f32 	%f24, 0f3FC90FDA;
	fma.rn.f32 	%f25, %f23, %f24, %f43;
	mov.f32 	%f26, 0f33A22168;
	fma.rn.f32 	%f27, %f23, %f26, %f25;
	mov.f32 	%f28, 0f27C234C5;
	fma.rn.f32 	%f44, %f23, %f28, %f27;
	abs.f32 	%f29, %f43;
	setp.leu.f32	%p2, %f29, 0f47CE4780;
	@%p2 bra 	BB7_10;

	mov.b32 	 %r2, %f43;
	shr.u32 	%r3, %r2, 23;
	bfe.u32 	%r34, %r2, 23, 8;
	add.s32 	%r35, %r34, -128;
	shl.b32 	%r36, %r2, 8;
	or.b32  	%r4, %r36, -2147483648;
	shr.u32 	%r37, %r35, 5;
	mov.u32 	%r38, 4;
	sub.s32 	%r5, %r38, %r37;
	mov.u32 	%r87, 0;
	mov.u32 	%r86, %r87;
	mov.u64 	%rd10, __cudart_i2opi_f;
	mov.u64 	%rd11, %rd7;

BB7_4:
	.pragma "nounroll";
	mov.u64 	%rd3, %rd11;
	ld.const.u32 	%r41, [%rd10];
	// inline asm
	{
	mad.lo.cc.u32   %r39, %r41, %r4, %r87;
	madc.hi.u32     %r40, %r41, %r4,  0;
	}
	// inline asm
	st.local.u32 	[%rd3], %r39;
	add.s64 	%rd4, %rd3, 4;
	add.s64 	%rd10, %rd10, 4;
	add.s32 	%r86, %r86, 1;
	setp.ne.s32	%p3, %r86, 6;
	mov.u32 	%r87, %r40;
	mov.u64 	%rd11, %rd4;
	@%p3 bra 	BB7_4;

	and.b32  	%r10, %r2, -2147483648;
	st.local.u32 	[%rd7+24], %r40;
	add.s32 	%r44, %r5, 2;
	mul.wide.s32 	%rd9, %r44, 4;
	add.s64 	%rd6, %rd7, %rd9;
	ld.local.u32 	%r88, [%rd6];
	ld.local.u32 	%r89, [%rd6+-4];
	and.b32  	%r13, %r3, 31;
	setp.eq.s32	%p4, %r13, 0;
	@%p4 bra 	BB7_7;

	mov.u32 	%r45, 32;
	sub.s32 	%r46, %r45, %r13;
	shr.u32 	%r47, %r89, %r46;
	shl.b32 	%r48, %r88, %r13;
	add.s32 	%r88, %r47, %r48;
	ld.local.u32 	%r49, [%rd6+-8];
	shr.u32 	%r50, %r49, %r46;
	shl.b32 	%r51, %r89, %r13;
	add.s32 	%r89, %r50, %r51;

BB7_7:
	shr.u32 	%r52, %r89, 30;
	shl.b32 	%r53, %r88, 2;
	add.s32 	%r90, %r52, %r53;
	shl.b32 	%r19, %r89, 2;
	shr.u32 	%r54, %r90, 31;
	shr.u32 	%r55, %r88, 30;
	add.s32 	%r20, %r54, %r55;
	setp.eq.s32	%p5, %r54, 0;
	mov.u32 	%r91, %r10;
	mov.u32 	%r92, %r19;
	@%p5 bra 	BB7_9;

	not.b32 	%r56, %r90;
	neg.s32 	%r21, %r19;
	setp.eq.s32	%p6, %r19, 0;
	selp.u32	%r57, 1, 0, %p6;
	add.s32 	%r90, %r57, %r56;
	xor.b32  	%r23, %r10, -2147483648;
	mov.u32 	%r91, %r23;
	mov.u32 	%r92, %r21;

BB7_9:
	mov.u32 	%r25, %r91;
	neg.s32 	%r58, %r20;
	setp.eq.s32	%p7, %r10, 0;
	selp.b32	%r93, %r20, %r58, %p7;
	clz.b32 	%r59, %r90;
	setp.eq.s32	%p8, %r59, 0;
	shl.b32 	%r60, %r90, %r59;
	mov.u32 	%r61, 32;
	sub.s32 	%r62, %r61, %r59;
	shr.u32 	%r63, %r92, %r62;
	add.s32 	%r64, %r63, %r60;
	selp.b32	%r65, %r90, %r64, %p8;
	mul.lo.s32 	%r66, %r65, -921707870;
	mov.u32 	%r67, -921707870;
	mul.hi.u32 	%r68, %r65, %r67;
	setp.gt.s32	%p9, %r68, 0;
	shl.b32 	%r69, %r68, 1;
	shr.u32 	%r70, %r66, 31;
	add.s32 	%r71, %r70, %r69;
	selp.b32	%r72, %r71, %r68, %p9;
	selp.b32	%r73, -1, 0, %p9;
	mov.u32 	%r74, 126;
	sub.s32 	%r75, %r74, %r59;
	add.s32 	%r76, %r75, %r73;
	shl.b32 	%r77, %r76, 23;
	add.s32 	%r78, %r72, 1;
	shr.u32 	%r79, %r78, 7;
	add.s32 	%r80, %r79, 1;
	shr.u32 	%r81, %r80, 1;
	add.s32 	%r82, %r81, %r77;
	or.b32  	%r83, %r82, %r25;
	mov.b32 	 %f44, %r83;

BB7_10:
	mul.rn.f32 	%f7, %f44, %f44;
	add.s32 	%r29, %r93, 1;
	and.b32  	%r30, %r29, 1;
	setp.eq.s32	%p10, %r30, 0;
	@%p10 bra 	BB7_12;

	mov.f32 	%f30, 0fBAB6061A;
	mov.f32 	%f31, 0f37CCF5CE;
	fma.rn.f32 	%f45, %f31, %f7, %f30;
	bra.uni 	BB7_13;

BB7_12:
	mov.f32 	%f32, 0f3C08839E;
	mov.f32 	%f33, 0fB94CA1F9;
	fma.rn.f32 	%f45, %f33, %f7, %f32;

BB7_13:
	@%p10 bra 	BB7_15;

	mov.f32 	%f34, 0f3D2AAAA5;
	fma.rn.f32 	%f35, %f45, %f7, %f34;
	mov.f32 	%f36, 0fBF000000;
	fma.rn.f32 	%f46, %f35, %f7, %f36;
	bra.uni 	BB7_16;

BB7_15:
	mov.f32 	%f37, 0fBE2AAAA3;
	fma.rn.f32 	%f38, %f45, %f7, %f37;
	mov.f32 	%f39, 0f00000000;
	fma.rn.f32 	%f46, %f38, %f7, %f39;

BB7_16:
	fma.rn.f32 	%f47, %f46, %f44, %f44;
	@%p10 bra 	BB7_18;

	mov.f32 	%f40, 0f3F800000;
	fma.rn.f32 	%f47, %f46, %f7, %f40;

BB7_18:
	and.b32  	%r84, %r29, 2;
	setp.eq.s32	%p13, %r84, 0;
	@%p13 bra 	BB7_20;

	mov.f32 	%f41, 0f00000000;
	mov.f32 	%f42, 0fBF800000;
	fma.rn.f32 	%f47, %f47, %f42, %f41;

BB7_20:
	cvt.rzi.s32.f32	%r85, %f47;
	st.param.b32	[funj_retval0+0], %r85;
	ret;
}

.visible .func  (.param .b32 funj_retval0) ___cosu(
	.param .b32 ___cosu_param_0
)
{
	.local .align 4 .b8 	__local_depot8[28];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<14>;
	.reg .s32 	%r<94>;
	.reg .f32 	%f<48>;
	.reg .s64 	%rd<12>;


	mov.u64 	%SPL, __local_depot8;
	ld.param.u32 	%r31, [___cosu_param_0];
	add.u64 	%rd7, %SPL, 0;
	cvt.rn.f32.u32	%f43, %r31;
	abs.f32 	%f19, %f43;
	setp.neu.f32	%p1, %f19, 0f7F800000;
	@%p1 bra 	BB8_2;

	mov.f32 	%f20, 0f00000000;
	mul.rn.f32 	%f43, %f43, %f20;

BB8_2:
	mul.f32 	%f21, %f43, 0f3F22F983;
	cvt.rni.s32.f32	%r93, %f21;
	cvt.rn.f32.s32	%f22, %r93;
	neg.f32 	%f23, %f22;
	mov.f32 	%f24, 0f3FC90FDA;
	fma.rn.f32 	%f25, %f23, %f24, %f43;
	mov.f32 	%f26, 0f33A22168;
	fma.rn.f32 	%f27, %f23, %f26, %f25;
	mov.f32 	%f28, 0f27C234C5;
	fma.rn.f32 	%f44, %f23, %f28, %f27;
	abs.f32 	%f29, %f43;
	setp.leu.f32	%p2, %f29, 0f47CE4780;
	@%p2 bra 	BB8_10;

	mov.b32 	 %r2, %f43;
	shr.u32 	%r3, %r2, 23;
	bfe.u32 	%r34, %r2, 23, 8;
	add.s32 	%r35, %r34, -128;
	shl.b32 	%r36, %r2, 8;
	or.b32  	%r4, %r36, -2147483648;
	shr.u32 	%r37, %r35, 5;
	mov.u32 	%r38, 4;
	sub.s32 	%r5, %r38, %r37;
	mov.u32 	%r87, 0;
	mov.u32 	%r86, %r87;
	mov.u64 	%rd10, __cudart_i2opi_f;
	mov.u64 	%rd11, %rd7;

BB8_4:
	.pragma "nounroll";
	mov.u64 	%rd3, %rd11;
	ld.const.u32 	%r41, [%rd10];
	// inline asm
	{
	mad.lo.cc.u32   %r39, %r41, %r4, %r87;
	madc.hi.u32     %r40, %r41, %r4,  0;
	}
	// inline asm
	st.local.u32 	[%rd3], %r39;
	add.s64 	%rd4, %rd3, 4;
	add.s64 	%rd10, %rd10, 4;
	add.s32 	%r86, %r86, 1;
	setp.ne.s32	%p3, %r86, 6;
	mov.u32 	%r87, %r40;
	mov.u64 	%rd11, %rd4;
	@%p3 bra 	BB8_4;

	and.b32  	%r10, %r2, -2147483648;
	st.local.u32 	[%rd7+24], %r40;
	add.s32 	%r44, %r5, 2;
	mul.wide.s32 	%rd9, %r44, 4;
	add.s64 	%rd6, %rd7, %rd9;
	ld.local.u32 	%r88, [%rd6];
	ld.local.u32 	%r89, [%rd6+-4];
	and.b32  	%r13, %r3, 31;
	setp.eq.s32	%p4, %r13, 0;
	@%p4 bra 	BB8_7;

	mov.u32 	%r45, 32;
	sub.s32 	%r46, %r45, %r13;
	shr.u32 	%r47, %r89, %r46;
	shl.b32 	%r48, %r88, %r13;
	add.s32 	%r88, %r47, %r48;
	ld.local.u32 	%r49, [%rd6+-8];
	shr.u32 	%r50, %r49, %r46;
	shl.b32 	%r51, %r89, %r13;
	add.s32 	%r89, %r50, %r51;

BB8_7:
	shr.u32 	%r52, %r89, 30;
	shl.b32 	%r53, %r88, 2;
	add.s32 	%r90, %r52, %r53;
	shl.b32 	%r19, %r89, 2;
	shr.u32 	%r54, %r90, 31;
	shr.u32 	%r55, %r88, 30;
	add.s32 	%r20, %r54, %r55;
	setp.eq.s32	%p5, %r54, 0;
	mov.u32 	%r91, %r10;
	mov.u32 	%r92, %r19;
	@%p5 bra 	BB8_9;

	not.b32 	%r56, %r90;
	neg.s32 	%r21, %r19;
	setp.eq.s32	%p6, %r19, 0;
	selp.u32	%r57, 1, 0, %p6;
	add.s32 	%r90, %r57, %r56;
	xor.b32  	%r23, %r10, -2147483648;
	mov.u32 	%r91, %r23;
	mov.u32 	%r92, %r21;

BB8_9:
	mov.u32 	%r25, %r91;
	neg.s32 	%r58, %r20;
	setp.eq.s32	%p7, %r10, 0;
	selp.b32	%r93, %r20, %r58, %p7;
	clz.b32 	%r59, %r90;
	setp.eq.s32	%p8, %r59, 0;
	shl.b32 	%r60, %r90, %r59;
	mov.u32 	%r61, 32;
	sub.s32 	%r62, %r61, %r59;
	shr.u32 	%r63, %r92, %r62;
	add.s32 	%r64, %r63, %r60;
	selp.b32	%r65, %r90, %r64, %p8;
	mul.lo.s32 	%r66, %r65, -921707870;
	mov.u32 	%r67, -921707870;
	mul.hi.u32 	%r68, %r65, %r67;
	setp.gt.s32	%p9, %r68, 0;
	shl.b32 	%r69, %r68, 1;
	shr.u32 	%r70, %r66, 31;
	add.s32 	%r71, %r70, %r69;
	selp.b32	%r72, %r71, %r68, %p9;
	selp.b32	%r73, -1, 0, %p9;
	mov.u32 	%r74, 126;
	sub.s32 	%r75, %r74, %r59;
	add.s32 	%r76, %r75, %r73;
	shl.b32 	%r77, %r76, 23;
	add.s32 	%r78, %r72, 1;
	shr.u32 	%r79, %r78, 7;
	add.s32 	%r80, %r79, 1;
	shr.u32 	%r81, %r80, 1;
	add.s32 	%r82, %r81, %r77;
	or.b32  	%r83, %r82, %r25;
	mov.b32 	 %f44, %r83;

BB8_10:
	mul.rn.f32 	%f7, %f44, %f44;
	add.s32 	%r29, %r93, 1;
	and.b32  	%r30, %r29, 1;
	setp.eq.s32	%p10, %r30, 0;
	@%p10 bra 	BB8_12;

	mov.f32 	%f30, 0fBAB6061A;
	mov.f32 	%f31, 0f37CCF5CE;
	fma.rn.f32 	%f45, %f31, %f7, %f30;
	bra.uni 	BB8_13;

BB8_12:
	mov.f32 	%f32, 0f3C08839E;
	mov.f32 	%f33, 0fB94CA1F9;
	fma.rn.f32 	%f45, %f33, %f7, %f32;

BB8_13:
	@%p10 bra 	BB8_15;

	mov.f32 	%f34, 0f3D2AAAA5;
	fma.rn.f32 	%f35, %f45, %f7, %f34;
	mov.f32 	%f36, 0fBF000000;
	fma.rn.f32 	%f46, %f35, %f7, %f36;
	bra.uni 	BB8_16;

BB8_15:
	mov.f32 	%f37, 0fBE2AAAA3;
	fma.rn.f32 	%f38, %f45, %f7, %f37;
	mov.f32 	%f39, 0f00000000;
	fma.rn.f32 	%f46, %f38, %f7, %f39;

BB8_16:
	fma.rn.f32 	%f47, %f46, %f44, %f44;
	@%p10 bra 	BB8_18;

	mov.f32 	%f40, 0f3F800000;
	fma.rn.f32 	%f47, %f46, %f7, %f40;

BB8_18:
	and.b32  	%r84, %r29, 2;
	setp.eq.s32	%p13, %r84, 0;
	@%p13 bra 	BB8_20;

	mov.f32 	%f41, 0f00000000;
	mov.f32 	%f42, 0fBF800000;
	fma.rn.f32 	%f47, %f47, %f42, %f41;

BB8_20:
	cvt.rzi.u32.f32	%r85, %f47;
	st.param.b32	[funj_retval0+0], %r85;
	ret;
}

.visible .func  (.param .b32 funj_retval0) ___cosj(
	.param .b32 ___cosj_param_0
)
{
	.local .align 4 .b8 	__local_depot9[28];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<14>;
	.reg .s16 	%rs<2>;
	.reg .s32 	%r<94>;
	.reg .f32 	%f<48>;
	.reg .s64 	%rd<12>;


	mov.u64 	%SPL, __local_depot9;
	add.u64 	%rd7, %SPL, 0;
	ld.param.s8 	%rs1, [___cosj_param_0];
	cvt.rn.f32.s16	%f43, %rs1;
	abs.f32 	%f19, %f43;
	setp.neu.f32	%p1, %f19, 0f7F800000;
	@%p1 bra 	BB9_2;

	mov.f32 	%f20, 0f00000000;
	mul.rn.f32 	%f43, %f43, %f20;

BB9_2:
	mul.f32 	%f21, %f43, 0f3F22F983;
	cvt.rni.s32.f32	%r93, %f21;
	cvt.rn.f32.s32	%f22, %r93;
	neg.f32 	%f23, %f22;
	mov.f32 	%f24, 0f3FC90FDA;
	fma.rn.f32 	%f25, %f23, %f24, %f43;
	mov.f32 	%f26, 0f33A22168;
	fma.rn.f32 	%f27, %f23, %f26, %f25;
	mov.f32 	%f28, 0f27C234C5;
	fma.rn.f32 	%f44, %f23, %f28, %f27;
	abs.f32 	%f29, %f43;
	setp.leu.f32	%p2, %f29, 0f47CE4780;
	@%p2 bra 	BB9_10;

	mov.b32 	 %r2, %f43;
	shr.u32 	%r3, %r2, 23;
	bfe.u32 	%r33, %r2, 23, 8;
	add.s32 	%r34, %r33, -128;
	shl.b32 	%r35, %r2, 8;
	or.b32  	%r4, %r35, -2147483648;
	shr.u32 	%r36, %r34, 5;
	mov.u32 	%r37, 4;
	sub.s32 	%r5, %r37, %r36;
	mov.u32 	%r87, 0;
	mov.u32 	%r86, %r87;
	mov.u64 	%rd10, __cudart_i2opi_f;
	mov.u64 	%rd11, %rd7;

BB9_4:
	.pragma "nounroll";
	mov.u64 	%rd3, %rd11;
	ld.const.u32 	%r40, [%rd10];
	// inline asm
	{
	mad.lo.cc.u32   %r38, %r40, %r4, %r87;
	madc.hi.u32     %r39, %r40, %r4,  0;
	}
	// inline asm
	st.local.u32 	[%rd3], %r38;
	add.s64 	%rd4, %rd3, 4;
	add.s64 	%rd10, %rd10, 4;
	add.s32 	%r86, %r86, 1;
	setp.ne.s32	%p3, %r86, 6;
	mov.u32 	%r87, %r39;
	mov.u64 	%rd11, %rd4;
	@%p3 bra 	BB9_4;

	and.b32  	%r10, %r2, -2147483648;
	st.local.u32 	[%rd7+24], %r39;
	add.s32 	%r43, %r5, 2;
	mul.wide.s32 	%rd9, %r43, 4;
	add.s64 	%rd6, %rd7, %rd9;
	ld.local.u32 	%r88, [%rd6];
	ld.local.u32 	%r89, [%rd6+-4];
	and.b32  	%r13, %r3, 31;
	setp.eq.s32	%p4, %r13, 0;
	@%p4 bra 	BB9_7;

	mov.u32 	%r44, 32;
	sub.s32 	%r45, %r44, %r13;
	shr.u32 	%r46, %r89, %r45;
	shl.b32 	%r47, %r88, %r13;
	add.s32 	%r88, %r46, %r47;
	ld.local.u32 	%r48, [%rd6+-8];
	shr.u32 	%r49, %r48, %r45;
	shl.b32 	%r50, %r89, %r13;
	add.s32 	%r89, %r49, %r50;

BB9_7:
	shr.u32 	%r51, %r89, 30;
	shl.b32 	%r52, %r88, 2;
	add.s32 	%r90, %r51, %r52;
	shl.b32 	%r19, %r89, 2;
	shr.u32 	%r53, %r90, 31;
	shr.u32 	%r54, %r88, 30;
	add.s32 	%r20, %r53, %r54;
	setp.eq.s32	%p5, %r53, 0;
	mov.u32 	%r91, %r10;
	mov.u32 	%r92, %r19;
	@%p5 bra 	BB9_9;

	not.b32 	%r55, %r90;
	neg.s32 	%r21, %r19;
	setp.eq.s32	%p6, %r19, 0;
	selp.u32	%r56, 1, 0, %p6;
	add.s32 	%r90, %r56, %r55;
	xor.b32  	%r23, %r10, -2147483648;
	mov.u32 	%r91, %r23;
	mov.u32 	%r92, %r21;

BB9_9:
	mov.u32 	%r25, %r91;
	neg.s32 	%r57, %r20;
	setp.eq.s32	%p7, %r10, 0;
	selp.b32	%r93, %r20, %r57, %p7;
	clz.b32 	%r58, %r90;
	setp.eq.s32	%p8, %r58, 0;
	shl.b32 	%r59, %r90, %r58;
	mov.u32 	%r60, 32;
	sub.s32 	%r61, %r60, %r58;
	shr.u32 	%r62, %r92, %r61;
	add.s32 	%r63, %r62, %r59;
	selp.b32	%r64, %r90, %r63, %p8;
	mul.lo.s32 	%r65, %r64, -921707870;
	mov.u32 	%r66, -921707870;
	mul.hi.u32 	%r67, %r64, %r66;
	setp.gt.s32	%p9, %r67, 0;
	shl.b32 	%r68, %r67, 1;
	shr.u32 	%r69, %r65, 31;
	add.s32 	%r70, %r69, %r68;
	selp.b32	%r71, %r70, %r67, %p9;
	selp.b32	%r72, -1, 0, %p9;
	mov.u32 	%r73, 126;
	sub.s32 	%r74, %r73, %r58;
	add.s32 	%r75, %r74, %r72;
	shl.b32 	%r76, %r75, 23;
	add.s32 	%r77, %r71, 1;
	shr.u32 	%r78, %r77, 7;
	add.s32 	%r79, %r78, 1;
	shr.u32 	%r80, %r79, 1;
	add.s32 	%r81, %r80, %r76;
	or.b32  	%r82, %r81, %r25;
	mov.b32 	 %f44, %r82;

BB9_10:
	mul.rn.f32 	%f7, %f44, %f44;
	add.s32 	%r29, %r93, 1;
	and.b32  	%r30, %r29, 1;
	setp.eq.s32	%p10, %r30, 0;
	@%p10 bra 	BB9_12;

	mov.f32 	%f30, 0fBAB6061A;
	mov.f32 	%f31, 0f37CCF5CE;
	fma.rn.f32 	%f45, %f31, %f7, %f30;
	bra.uni 	BB9_13;

BB9_12:
	mov.f32 	%f32, 0f3C08839E;
	mov.f32 	%f33, 0fB94CA1F9;
	fma.rn.f32 	%f45, %f33, %f7, %f32;

BB9_13:
	@%p10 bra 	BB9_15;

	mov.f32 	%f34, 0f3D2AAAA5;
	fma.rn.f32 	%f35, %f45, %f7, %f34;
	mov.f32 	%f36, 0fBF000000;
	fma.rn.f32 	%f46, %f35, %f7, %f36;
	bra.uni 	BB9_16;

BB9_15:
	mov.f32 	%f37, 0fBE2AAAA3;
	fma.rn.f32 	%f38, %f45, %f7, %f37;
	mov.f32 	%f39, 0f00000000;
	fma.rn.f32 	%f46, %f38, %f7, %f39;

BB9_16:
	fma.rn.f32 	%f47, %f46, %f44, %f44;
	@%p10 bra 	BB9_18;

	mov.f32 	%f40, 0f3F800000;
	fma.rn.f32 	%f47, %f46, %f7, %f40;

BB9_18:
	and.b32  	%r83, %r29, 2;
	setp.eq.s32	%p13, %r83, 0;
	@%p13 bra 	BB9_20;

	mov.f32 	%f41, 0f00000000;
	mov.f32 	%f42, 0fBF800000;
	fma.rn.f32 	%f47, %f47, %f42, %f41;

BB9_20:
	cvt.rzi.s32.f32	%r84, %f47;
	cvt.s32.s8 	%r85, %r84;
	st.param.b32	[funj_retval0+0], %r85;
	ret;
}

.visible .func  (.param .b32 funj_retval0) ___cosv(
	.param .b32 ___cosv_param_0
)
{
	.local .align 4 .b8 	__local_depot10[28];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<14>;
	.reg .s16 	%rs<2>;
	.reg .s32 	%r<94>;
	.reg .f32 	%f<48>;
	.reg .s64 	%rd<12>;


	mov.u64 	%SPL, __local_depot10;
	add.u64 	%rd7, %SPL, 0;
	ld.param.u8 	%rs1, [___cosv_param_0];
	cvt.rn.f32.u16	%f43, %rs1;
	abs.f32 	%f19, %f43;
	setp.neu.f32	%p1, %f19, 0f7F800000;
	@%p1 bra 	BB10_2;

	mov.f32 	%f20, 0f00000000;
	mul.rn.f32 	%f43, %f43, %f20;

BB10_2:
	mul.f32 	%f21, %f43, 0f3F22F983;
	cvt.rni.s32.f32	%r93, %f21;
	cvt.rn.f32.s32	%f22, %r93;
	neg.f32 	%f23, %f22;
	mov.f32 	%f24, 0f3FC90FDA;
	fma.rn.f32 	%f25, %f23, %f24, %f43;
	mov.f32 	%f26, 0f33A22168;
	fma.rn.f32 	%f27, %f23, %f26, %f25;
	mov.f32 	%f28, 0f27C234C5;
	fma.rn.f32 	%f44, %f23, %f28, %f27;
	abs.f32 	%f29, %f43;
	setp.leu.f32	%p2, %f29, 0f47CE4780;
	@%p2 bra 	BB10_10;

	mov.b32 	 %r2, %f43;
	shr.u32 	%r3, %r2, 23;
	bfe.u32 	%r33, %r2, 23, 8;
	add.s32 	%r34, %r33, -128;
	shl.b32 	%r35, %r2, 8;
	or.b32  	%r4, %r35, -2147483648;
	shr.u32 	%r36, %r34, 5;
	mov.u32 	%r37, 4;
	sub.s32 	%r5, %r37, %r36;
	mov.u32 	%r87, 0;
	mov.u32 	%r86, %r87;
	mov.u64 	%rd10, __cudart_i2opi_f;
	mov.u64 	%rd11, %rd7;

BB10_4:
	.pragma "nounroll";
	mov.u64 	%rd3, %rd11;
	ld.const.u32 	%r40, [%rd10];
	// inline asm
	{
	mad.lo.cc.u32   %r38, %r40, %r4, %r87;
	madc.hi.u32     %r39, %r40, %r4,  0;
	}
	// inline asm
	st.local.u32 	[%rd3], %r38;
	add.s64 	%rd4, %rd3, 4;
	add.s64 	%rd10, %rd10, 4;
	add.s32 	%r86, %r86, 1;
	setp.ne.s32	%p3, %r86, 6;
	mov.u32 	%r87, %r39;
	mov.u64 	%rd11, %rd4;
	@%p3 bra 	BB10_4;

	and.b32  	%r10, %r2, -2147483648;
	st.local.u32 	[%rd7+24], %r39;
	add.s32 	%r43, %r5, 2;
	mul.wide.s32 	%rd9, %r43, 4;
	add.s64 	%rd6, %rd7, %rd9;
	ld.local.u32 	%r88, [%rd6];
	ld.local.u32 	%r89, [%rd6+-4];
	and.b32  	%r13, %r3, 31;
	setp.eq.s32	%p4, %r13, 0;
	@%p4 bra 	BB10_7;

	mov.u32 	%r44, 32;
	sub.s32 	%r45, %r44, %r13;
	shr.u32 	%r46, %r89, %r45;
	shl.b32 	%r47, %r88, %r13;
	add.s32 	%r88, %r46, %r47;
	ld.local.u32 	%r48, [%rd6+-8];
	shr.u32 	%r49, %r48, %r45;
	shl.b32 	%r50, %r89, %r13;
	add.s32 	%r89, %r49, %r50;

BB10_7:
	shr.u32 	%r51, %r89, 30;
	shl.b32 	%r52, %r88, 2;
	add.s32 	%r90, %r51, %r52;
	shl.b32 	%r19, %r89, 2;
	shr.u32 	%r53, %r90, 31;
	shr.u32 	%r54, %r88, 30;
	add.s32 	%r20, %r53, %r54;
	setp.eq.s32	%p5, %r53, 0;
	mov.u32 	%r91, %r10;
	mov.u32 	%r92, %r19;
	@%p5 bra 	BB10_9;

	not.b32 	%r55, %r90;
	neg.s32 	%r21, %r19;
	setp.eq.s32	%p6, %r19, 0;
	selp.u32	%r56, 1, 0, %p6;
	add.s32 	%r90, %r56, %r55;
	xor.b32  	%r23, %r10, -2147483648;
	mov.u32 	%r91, %r23;
	mov.u32 	%r92, %r21;

BB10_9:
	mov.u32 	%r25, %r91;
	neg.s32 	%r57, %r20;
	setp.eq.s32	%p7, %r10, 0;
	selp.b32	%r93, %r20, %r57, %p7;
	clz.b32 	%r58, %r90;
	setp.eq.s32	%p8, %r58, 0;
	shl.b32 	%r59, %r90, %r58;
	mov.u32 	%r60, 32;
	sub.s32 	%r61, %r60, %r58;
	shr.u32 	%r62, %r92, %r61;
	add.s32 	%r63, %r62, %r59;
	selp.b32	%r64, %r90, %r63, %p8;
	mul.lo.s32 	%r65, %r64, -921707870;
	mov.u32 	%r66, -921707870;
	mul.hi.u32 	%r67, %r64, %r66;
	setp.gt.s32	%p9, %r67, 0;
	shl.b32 	%r68, %r67, 1;
	shr.u32 	%r69, %r65, 31;
	add.s32 	%r70, %r69, %r68;
	selp.b32	%r71, %r70, %r67, %p9;
	selp.b32	%r72, -1, 0, %p9;
	mov.u32 	%r73, 126;
	sub.s32 	%r74, %r73, %r58;
	add.s32 	%r75, %r74, %r72;
	shl.b32 	%r76, %r75, 23;
	add.s32 	%r77, %r71, 1;
	shr.u32 	%r78, %r77, 7;
	add.s32 	%r79, %r78, 1;
	shr.u32 	%r80, %r79, 1;
	add.s32 	%r81, %r80, %r76;
	or.b32  	%r82, %r81, %r25;
	mov.b32 	 %f44, %r82;

BB10_10:
	mul.rn.f32 	%f7, %f44, %f44;
	add.s32 	%r29, %r93, 1;
	and.b32  	%r30, %r29, 1;
	setp.eq.s32	%p10, %r30, 0;
	@%p10 bra 	BB10_12;

	mov.f32 	%f30, 0fBAB6061A;
	mov.f32 	%f31, 0f37CCF5CE;
	fma.rn.f32 	%f45, %f31, %f7, %f30;
	bra.uni 	BB10_13;

BB10_12:
	mov.f32 	%f32, 0f3C08839E;
	mov.f32 	%f33, 0fB94CA1F9;
	fma.rn.f32 	%f45, %f33, %f7, %f32;

BB10_13:
	@%p10 bra 	BB10_15;

	mov.f32 	%f34, 0f3D2AAAA5;
	fma.rn.f32 	%f35, %f45, %f7, %f34;
	mov.f32 	%f36, 0fBF000000;
	fma.rn.f32 	%f46, %f35, %f7, %f36;
	bra.uni 	BB10_16;

BB10_15:
	mov.f32 	%f37, 0fBE2AAAA3;
	fma.rn.f32 	%f38, %f45, %f7, %f37;
	mov.f32 	%f39, 0f00000000;
	fma.rn.f32 	%f46, %f38, %f7, %f39;

BB10_16:
	fma.rn.f32 	%f47, %f46, %f44, %f44;
	@%p10 bra 	BB10_18;

	mov.f32 	%f40, 0f3F800000;
	fma.rn.f32 	%f47, %f46, %f7, %f40;

BB10_18:
	and.b32  	%r83, %r29, 2;
	setp.eq.s32	%p13, %r83, 0;
	@%p13 bra 	BB10_20;

	mov.f32 	%f41, 0f00000000;
	mov.f32 	%f42, 0fBF800000;
	fma.rn.f32 	%f47, %f47, %f42, %f41;

BB10_20:
	cvt.rzi.u32.f32	%r84, %f47;
	and.b32  	%r85, %r84, 255;
	st.param.b32	[funj_retval0+0], %r85;
	ret;
}

.visible .func  (.param .b64 funj_retval0) ___cosd(
	.param .b64 ___cosd_param_0
)
{
	.local .align 4 .b8 	__local_depot11[4];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<5>;
	.reg .s32 	%r<11>;
	.reg .s64 	%rd<7>;
	.reg .f64 	%fd<42>;


	mov.u64 	%SPL, __local_depot11;
	cvta.local.u64 	%SP, %SPL;
	ld.param.f64 	%fd39, [___cosd_param_0];
	add.u64 	%rd2, %SP, 0;
	cvta.to.local.u64 	%rd1, %rd2;
	abs.f64 	%fd14, %fd39;
	setp.neu.f64	%p1, %fd14, 0d7FF0000000000000;
	@%p1 bra 	BB11_2;

	mov.f64 	%fd15, 0d0000000000000000;
	mul.rn.f64 	%fd39, %fd39, %fd15;

BB11_2:
	mul.f64 	%fd16, %fd39, 0d3FE45F306DC9C883;
	cvt.rni.s32.f64	%r10, %fd16;
	st.local.u32 	[%rd1], %r10;
	cvt.rn.f64.s32	%fd17, %r10;
	neg.f64 	%fd18, %fd17;
	mov.f64 	%fd19, 0d3FF921FB54442D18;
	fma.rn.f64 	%fd20, %fd18, %fd19, %fd39;
	mov.f64 	%fd21, 0d3C91A62633145C00;
	fma.rn.f64 	%fd22, %fd18, %fd21, %fd20;
	mov.f64 	%fd23, 0d397B839A252049C0;
	fma.rn.f64 	%fd40, %fd18, %fd23, %fd22;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r5}, %fd39;
	}
	and.b32  	%r6, %r5, 2145386496;
	setp.lt.u32	%p2, %r6, 1105199104;
	@%p2 bra 	BB11_4;

	// Callseq Start 1
	{
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.f64	[param0+0], %fd39;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd2;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_trig_reduction_slowpathd, 
	(
	param0, 
	param1
	);
	ld.param.f64	%fd40, [retval0+0];
	}
	// Callseq End 1
	ld.local.u32 	%r10, [%rd1];

BB11_4:
	add.s32 	%r4, %r10, 1;
	and.b32  	%r7, %r4, 1;
	shl.b32 	%r8, %r7, 3;
	setp.eq.s32	%p3, %r7, 0;
	selp.f64	%fd24, 0d3DE5DB65F9785EBA, 0dBDA8FF8320FD8164, %p3;
	mul.wide.u32 	%rd4, %r8, 8;
	mov.u64 	%rd5, __cudart_sin_cos_coeffs;
	add.s64 	%rd6, %rd4, %rd5;
	ld.const.f64 	%fd25, [%rd6+8];
	mul.rn.f64 	%fd6, %fd40, %fd40;
	fma.rn.f64 	%fd26, %fd24, %fd6, %fd25;
	ld.const.f64 	%fd27, [%rd6+16];
	fma.rn.f64 	%fd28, %fd26, %fd6, %fd27;
	ld.const.f64 	%fd29, [%rd6+24];
	fma.rn.f64 	%fd30, %fd28, %fd6, %fd29;
	ld.const.f64 	%fd31, [%rd6+32];
	fma.rn.f64 	%fd32, %fd30, %fd6, %fd31;
	ld.const.f64 	%fd33, [%rd6+40];
	fma.rn.f64 	%fd34, %fd32, %fd6, %fd33;
	ld.const.f64 	%fd35, [%rd6+48];
	fma.rn.f64 	%fd7, %fd34, %fd6, %fd35;
	fma.rn.f64 	%fd41, %fd7, %fd40, %fd40;
	@%p3 bra 	BB11_6;

	mov.f64 	%fd36, 0d3FF0000000000000;
	fma.rn.f64 	%fd41, %fd7, %fd6, %fd36;

BB11_6:
	and.b32  	%r9, %r4, 2;
	setp.eq.s32	%p4, %r9, 0;
	@%p4 bra 	BB11_8;

	mov.f64 	%fd37, 0d0000000000000000;
	mov.f64 	%fd38, 0dBFF0000000000000;
	fma.rn.f64 	%fd41, %fd41, %fd38, %fd37;

BB11_8:
	st.param.f64	[funj_retval0+0], %fd41;
	ret;
}

.visible .func  (.param .b32 funj_retval0) ___tans(
	.param .b32 ___tans_param_0
)
{
	.local .align 4 .b8 	__local_depot12[28];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<11>;
	.reg .s32 	%r<90>;
	.reg .f32 	%f<33>;
	.reg .s64 	%rd<12>;


	mov.u64 	%SPL, __local_depot12;
	ld.param.f32 	%f30, [___tans_param_0];
	add.u64 	%rd7, %SPL, 0;
	abs.f32 	%f10, %f30;
	setp.neu.f32	%p1, %f10, 0f7F800000;
	@%p1 bra 	BB12_2;

	mov.f32 	%f11, 0f00000000;
	mul.rn.f32 	%f30, %f30, %f11;

BB12_2:
	mul.f32 	%f12, %f30, 0f3F22F983;
	cvt.rni.s32.f32	%r89, %f12;
	cvt.rn.f32.s32	%f13, %r89;
	neg.f32 	%f14, %f13;
	mov.f32 	%f15, 0f3FC90FDA;
	fma.rn.f32 	%f16, %f14, %f15, %f30;
	mov.f32 	%f17, 0f33A22168;
	fma.rn.f32 	%f18, %f14, %f17, %f16;
	mov.f32 	%f19, 0f27C234C5;
	fma.rn.f32 	%f31, %f14, %f19, %f18;
	abs.f32 	%f20, %f30;
	setp.leu.f32	%p2, %f20, 0f47CE4780;
	@%p2 bra 	BB12_10;

	mov.b32 	 %r2, %f30;
	shr.u32 	%r3, %r2, 23;
	bfe.u32 	%r31, %r2, 23, 8;
	add.s32 	%r32, %r31, -128;
	shl.b32 	%r33, %r2, 8;
	or.b32  	%r4, %r33, -2147483648;
	shr.u32 	%r34, %r32, 5;
	mov.u32 	%r35, 4;
	sub.s32 	%r5, %r35, %r34;
	mov.u32 	%r83, 0;
	mov.u32 	%r82, %r83;
	mov.u64 	%rd10, __cudart_i2opi_f;
	mov.u64 	%rd11, %rd7;

BB12_4:
	.pragma "nounroll";
	mov.u64 	%rd3, %rd11;
	ld.const.u32 	%r38, [%rd10];
	// inline asm
	{
	mad.lo.cc.u32   %r36, %r38, %r4, %r83;
	madc.hi.u32     %r37, %r38, %r4,  0;
	}
	// inline asm
	st.local.u32 	[%rd3], %r36;
	add.s64 	%rd4, %rd3, 4;
	add.s64 	%rd10, %rd10, 4;
	add.s32 	%r82, %r82, 1;
	setp.ne.s32	%p3, %r82, 6;
	mov.u32 	%r83, %r37;
	mov.u64 	%rd11, %rd4;
	@%p3 bra 	BB12_4;

	and.b32  	%r10, %r2, -2147483648;
	st.local.u32 	[%rd7+24], %r37;
	add.s32 	%r41, %r5, 2;
	mul.wide.s32 	%rd9, %r41, 4;
	add.s64 	%rd6, %rd7, %rd9;
	ld.local.u32 	%r84, [%rd6];
	ld.local.u32 	%r85, [%rd6+-4];
	and.b32  	%r13, %r3, 31;
	setp.eq.s32	%p4, %r13, 0;
	@%p4 bra 	BB12_7;

	mov.u32 	%r42, 32;
	sub.s32 	%r43, %r42, %r13;
	shr.u32 	%r44, %r85, %r43;
	shl.b32 	%r45, %r84, %r13;
	add.s32 	%r84, %r44, %r45;
	ld.local.u32 	%r46, [%rd6+-8];
	shr.u32 	%r47, %r46, %r43;
	shl.b32 	%r48, %r85, %r13;
	add.s32 	%r85, %r47, %r48;

BB12_7:
	shr.u32 	%r49, %r85, 30;
	shl.b32 	%r50, %r84, 2;
	add.s32 	%r86, %r49, %r50;
	shl.b32 	%r19, %r85, 2;
	shr.u32 	%r51, %r86, 31;
	shr.u32 	%r52, %r84, 30;
	add.s32 	%r20, %r51, %r52;
	setp.eq.s32	%p5, %r51, 0;
	mov.u32 	%r87, %r10;
	mov.u32 	%r88, %r19;
	@%p5 bra 	BB12_9;

	not.b32 	%r53, %r86;
	neg.s32 	%r21, %r19;
	setp.eq.s32	%p6, %r19, 0;
	selp.u32	%r54, 1, 0, %p6;
	add.s32 	%r86, %r54, %r53;
	xor.b32  	%r23, %r10, -2147483648;
	mov.u32 	%r87, %r23;
	mov.u32 	%r88, %r21;

BB12_9:
	mov.u32 	%r25, %r87;
	neg.s32 	%r55, %r20;
	setp.eq.s32	%p7, %r10, 0;
	selp.b32	%r89, %r20, %r55, %p7;
	clz.b32 	%r56, %r86;
	setp.eq.s32	%p8, %r56, 0;
	shl.b32 	%r57, %r86, %r56;
	mov.u32 	%r58, 32;
	sub.s32 	%r59, %r58, %r56;
	shr.u32 	%r60, %r88, %r59;
	add.s32 	%r61, %r60, %r57;
	selp.b32	%r62, %r86, %r61, %p8;
	mul.lo.s32 	%r63, %r62, -921707870;
	mov.u32 	%r64, -921707870;
	mul.hi.u32 	%r65, %r62, %r64;
	setp.gt.s32	%p9, %r65, 0;
	shl.b32 	%r66, %r65, 1;
	shr.u32 	%r67, %r63, 31;
	add.s32 	%r68, %r67, %r66;
	selp.b32	%r69, %r68, %r65, %p9;
	selp.b32	%r70, -1, 0, %p9;
	mov.u32 	%r71, 126;
	sub.s32 	%r72, %r71, %r56;
	add.s32 	%r73, %r72, %r70;
	shl.b32 	%r74, %r73, 23;
	add.s32 	%r75, %r69, 1;
	shr.u32 	%r76, %r75, 7;
	add.s32 	%r77, %r76, 1;
	shr.u32 	%r78, %r77, 1;
	add.s32 	%r79, %r78, %r74;
	or.b32  	%r80, %r79, %r25;
	mov.b32 	 %f31, %r80;

BB12_10:
	mul.f32 	%f21, %f31, %f31;
	mov.f32 	%f22, 0fBF52B7F4;
	mov.f32 	%f23, 0f3B86D46D;
	fma.rn.f32 	%f24, %f23, %f21, %f22;
	add.f32 	%f25, %f21, 0fC01E09D0;
	rcp.rn.f32 	%f26, %f25;
	mul.f32 	%f27, %f24, %f26;
	mul.f32 	%f28, %f27, %f21;
	fma.rn.f32 	%f32, %f28, %f31, %f31;
	and.b32  	%r81, %r89, 1;
	setp.eq.b32	%p10, %r81, 1;
	@!%p10 bra 	BB12_12;
	bra.uni 	BB12_11;

BB12_11:
	mov.f32 	%f29, 0fBF800000;
	div.rn.f32 	%f32, %f29, %f32;

BB12_12:
	st.param.f32	[funj_retval0+0], %f32;
	ret;
}

.visible .func  (.param .b32 funj_retval0) ___tani(
	.param .b32 ___tani_param_0
)
{
	.local .align 4 .b8 	__local_depot13[28];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<11>;
	.reg .s32 	%r<92>;
	.reg .f32 	%f<33>;
	.reg .s64 	%rd<12>;


	mov.u64 	%SPL, __local_depot13;
	ld.param.u32 	%r29, [___tani_param_0];
	add.u64 	%rd7, %SPL, 0;
	cvt.rn.f32.s32	%f30, %r29;
	abs.f32 	%f10, %f30;
	setp.neu.f32	%p1, %f10, 0f7F800000;
	@%p1 bra 	BB13_2;

	mov.f32 	%f11, 0f00000000;
	mul.rn.f32 	%f30, %f30, %f11;

BB13_2:
	mul.f32 	%f12, %f30, 0f3F22F983;
	cvt.rni.s32.f32	%r91, %f12;
	cvt.rn.f32.s32	%f13, %r91;
	neg.f32 	%f14, %f13;
	mov.f32 	%f15, 0f3FC90FDA;
	fma.rn.f32 	%f16, %f14, %f15, %f30;
	mov.f32 	%f17, 0f33A22168;
	fma.rn.f32 	%f18, %f14, %f17, %f16;
	mov.f32 	%f19, 0f27C234C5;
	fma.rn.f32 	%f31, %f14, %f19, %f18;
	abs.f32 	%f20, %f30;
	setp.leu.f32	%p2, %f20, 0f47CE4780;
	@%p2 bra 	BB13_10;

	mov.b32 	 %r2, %f30;
	shr.u32 	%r3, %r2, 23;
	bfe.u32 	%r32, %r2, 23, 8;
	add.s32 	%r33, %r32, -128;
	shl.b32 	%r34, %r2, 8;
	or.b32  	%r4, %r34, -2147483648;
	shr.u32 	%r35, %r33, 5;
	mov.u32 	%r36, 4;
	sub.s32 	%r5, %r36, %r35;
	mov.u32 	%r85, 0;
	mov.u32 	%r84, %r85;
	mov.u64 	%rd10, __cudart_i2opi_f;
	mov.u64 	%rd11, %rd7;

BB13_4:
	.pragma "nounroll";
	mov.u64 	%rd3, %rd11;
	ld.const.u32 	%r39, [%rd10];
	// inline asm
	{
	mad.lo.cc.u32   %r37, %r39, %r4, %r85;
	madc.hi.u32     %r38, %r39, %r4,  0;
	}
	// inline asm
	st.local.u32 	[%rd3], %r37;
	add.s64 	%rd4, %rd3, 4;
	add.s64 	%rd10, %rd10, 4;
	add.s32 	%r84, %r84, 1;
	setp.ne.s32	%p3, %r84, 6;
	mov.u32 	%r85, %r38;
	mov.u64 	%rd11, %rd4;
	@%p3 bra 	BB13_4;

	and.b32  	%r10, %r2, -2147483648;
	st.local.u32 	[%rd7+24], %r38;
	add.s32 	%r42, %r5, 2;
	mul.wide.s32 	%rd9, %r42, 4;
	add.s64 	%rd6, %rd7, %rd9;
	ld.local.u32 	%r86, [%rd6];
	ld.local.u32 	%r87, [%rd6+-4];
	and.b32  	%r13, %r3, 31;
	setp.eq.s32	%p4, %r13, 0;
	@%p4 bra 	BB13_7;

	mov.u32 	%r43, 32;
	sub.s32 	%r44, %r43, %r13;
	shr.u32 	%r45, %r87, %r44;
	shl.b32 	%r46, %r86, %r13;
	add.s32 	%r86, %r45, %r46;
	ld.local.u32 	%r47, [%rd6+-8];
	shr.u32 	%r48, %r47, %r44;
	shl.b32 	%r49, %r87, %r13;
	add.s32 	%r87, %r48, %r49;

BB13_7:
	shr.u32 	%r50, %r87, 30;
	shl.b32 	%r51, %r86, 2;
	add.s32 	%r88, %r50, %r51;
	shl.b32 	%r19, %r87, 2;
	shr.u32 	%r52, %r88, 31;
	shr.u32 	%r53, %r86, 30;
	add.s32 	%r20, %r52, %r53;
	setp.eq.s32	%p5, %r52, 0;
	mov.u32 	%r89, %r10;
	mov.u32 	%r90, %r19;
	@%p5 bra 	BB13_9;

	not.b32 	%r54, %r88;
	neg.s32 	%r21, %r19;
	setp.eq.s32	%p6, %r19, 0;
	selp.u32	%r55, 1, 0, %p6;
	add.s32 	%r88, %r55, %r54;
	xor.b32  	%r23, %r10, -2147483648;
	mov.u32 	%r89, %r23;
	mov.u32 	%r90, %r21;

BB13_9:
	mov.u32 	%r25, %r89;
	neg.s32 	%r56, %r20;
	setp.eq.s32	%p7, %r10, 0;
	selp.b32	%r91, %r20, %r56, %p7;
	clz.b32 	%r57, %r88;
	setp.eq.s32	%p8, %r57, 0;
	shl.b32 	%r58, %r88, %r57;
	mov.u32 	%r59, 32;
	sub.s32 	%r60, %r59, %r57;
	shr.u32 	%r61, %r90, %r60;
	add.s32 	%r62, %r61, %r58;
	selp.b32	%r63, %r88, %r62, %p8;
	mul.lo.s32 	%r64, %r63, -921707870;
	mov.u32 	%r65, -921707870;
	mul.hi.u32 	%r66, %r63, %r65;
	setp.gt.s32	%p9, %r66, 0;
	shl.b32 	%r67, %r66, 1;
	shr.u32 	%r68, %r64, 31;
	add.s32 	%r69, %r68, %r67;
	selp.b32	%r70, %r69, %r66, %p9;
	selp.b32	%r71, -1, 0, %p9;
	mov.u32 	%r72, 126;
	sub.s32 	%r73, %r72, %r57;
	add.s32 	%r74, %r73, %r71;
	shl.b32 	%r75, %r74, 23;
	add.s32 	%r76, %r70, 1;
	shr.u32 	%r77, %r76, 7;
	add.s32 	%r78, %r77, 1;
	shr.u32 	%r79, %r78, 1;
	add.s32 	%r80, %r79, %r75;
	or.b32  	%r81, %r80, %r25;
	mov.b32 	 %f31, %r81;

BB13_10:
	mul.f32 	%f21, %f31, %f31;
	mov.f32 	%f22, 0fBF52B7F4;
	mov.f32 	%f23, 0f3B86D46D;
	fma.rn.f32 	%f24, %f23, %f21, %f22;
	add.f32 	%f25, %f21, 0fC01E09D0;
	rcp.rn.f32 	%f26, %f25;
	mul.f32 	%f27, %f24, %f26;
	mul.f32 	%f28, %f27, %f21;
	fma.rn.f32 	%f32, %f28, %f31, %f31;
	and.b32  	%r82, %r91, 1;
	setp.eq.b32	%p10, %r82, 1;
	@!%p10 bra 	BB13_12;
	bra.uni 	BB13_11;

BB13_11:
	mov.f32 	%f29, 0fBF800000;
	div.rn.f32 	%f32, %f29, %f32;

BB13_12:
	cvt.rzi.s32.f32	%r83, %f32;
	st.param.b32	[funj_retval0+0], %r83;
	ret;
}

.visible .func  (.param .b32 funj_retval0) ___tanu(
	.param .b32 ___tanu_param_0
)
{
	.local .align 4 .b8 	__local_depot14[28];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<11>;
	.reg .s32 	%r<92>;
	.reg .f32 	%f<33>;
	.reg .s64 	%rd<12>;


	mov.u64 	%SPL, __local_depot14;
	ld.param.u32 	%r29, [___tanu_param_0];
	add.u64 	%rd7, %SPL, 0;
	cvt.rn.f32.u32	%f30, %r29;
	abs.f32 	%f10, %f30;
	setp.neu.f32	%p1, %f10, 0f7F800000;
	@%p1 bra 	BB14_2;

	mov.f32 	%f11, 0f00000000;
	mul.rn.f32 	%f30, %f30, %f11;

BB14_2:
	mul.f32 	%f12, %f30, 0f3F22F983;
	cvt.rni.s32.f32	%r91, %f12;
	cvt.rn.f32.s32	%f13, %r91;
	neg.f32 	%f14, %f13;
	mov.f32 	%f15, 0f3FC90FDA;
	fma.rn.f32 	%f16, %f14, %f15, %f30;
	mov.f32 	%f17, 0f33A22168;
	fma.rn.f32 	%f18, %f14, %f17, %f16;
	mov.f32 	%f19, 0f27C234C5;
	fma.rn.f32 	%f31, %f14, %f19, %f18;
	abs.f32 	%f20, %f30;
	setp.leu.f32	%p2, %f20, 0f47CE4780;
	@%p2 bra 	BB14_10;

	mov.b32 	 %r2, %f30;
	shr.u32 	%r3, %r2, 23;
	bfe.u32 	%r32, %r2, 23, 8;
	add.s32 	%r33, %r32, -128;
	shl.b32 	%r34, %r2, 8;
	or.b32  	%r4, %r34, -2147483648;
	shr.u32 	%r35, %r33, 5;
	mov.u32 	%r36, 4;
	sub.s32 	%r5, %r36, %r35;
	mov.u32 	%r85, 0;
	mov.u32 	%r84, %r85;
	mov.u64 	%rd10, __cudart_i2opi_f;
	mov.u64 	%rd11, %rd7;

BB14_4:
	.pragma "nounroll";
	mov.u64 	%rd3, %rd11;
	ld.const.u32 	%r39, [%rd10];
	// inline asm
	{
	mad.lo.cc.u32   %r37, %r39, %r4, %r85;
	madc.hi.u32     %r38, %r39, %r4,  0;
	}
	// inline asm
	st.local.u32 	[%rd3], %r37;
	add.s64 	%rd4, %rd3, 4;
	add.s64 	%rd10, %rd10, 4;
	add.s32 	%r84, %r84, 1;
	setp.ne.s32	%p3, %r84, 6;
	mov.u32 	%r85, %r38;
	mov.u64 	%rd11, %rd4;
	@%p3 bra 	BB14_4;

	and.b32  	%r10, %r2, -2147483648;
	st.local.u32 	[%rd7+24], %r38;
	add.s32 	%r42, %r5, 2;
	mul.wide.s32 	%rd9, %r42, 4;
	add.s64 	%rd6, %rd7, %rd9;
	ld.local.u32 	%r86, [%rd6];
	ld.local.u32 	%r87, [%rd6+-4];
	and.b32  	%r13, %r3, 31;
	setp.eq.s32	%p4, %r13, 0;
	@%p4 bra 	BB14_7;

	mov.u32 	%r43, 32;
	sub.s32 	%r44, %r43, %r13;
	shr.u32 	%r45, %r87, %r44;
	shl.b32 	%r46, %r86, %r13;
	add.s32 	%r86, %r45, %r46;
	ld.local.u32 	%r47, [%rd6+-8];
	shr.u32 	%r48, %r47, %r44;
	shl.b32 	%r49, %r87, %r13;
	add.s32 	%r87, %r48, %r49;

BB14_7:
	shr.u32 	%r50, %r87, 30;
	shl.b32 	%r51, %r86, 2;
	add.s32 	%r88, %r50, %r51;
	shl.b32 	%r19, %r87, 2;
	shr.u32 	%r52, %r88, 31;
	shr.u32 	%r53, %r86, 30;
	add.s32 	%r20, %r52, %r53;
	setp.eq.s32	%p5, %r52, 0;
	mov.u32 	%r89, %r10;
	mov.u32 	%r90, %r19;
	@%p5 bra 	BB14_9;

	not.b32 	%r54, %r88;
	neg.s32 	%r21, %r19;
	setp.eq.s32	%p6, %r19, 0;
	selp.u32	%r55, 1, 0, %p6;
	add.s32 	%r88, %r55, %r54;
	xor.b32  	%r23, %r10, -2147483648;
	mov.u32 	%r89, %r23;
	mov.u32 	%r90, %r21;

BB14_9:
	mov.u32 	%r25, %r89;
	neg.s32 	%r56, %r20;
	setp.eq.s32	%p7, %r10, 0;
	selp.b32	%r91, %r20, %r56, %p7;
	clz.b32 	%r57, %r88;
	setp.eq.s32	%p8, %r57, 0;
	shl.b32 	%r58, %r88, %r57;
	mov.u32 	%r59, 32;
	sub.s32 	%r60, %r59, %r57;
	shr.u32 	%r61, %r90, %r60;
	add.s32 	%r62, %r61, %r58;
	selp.b32	%r63, %r88, %r62, %p8;
	mul.lo.s32 	%r64, %r63, -921707870;
	mov.u32 	%r65, -921707870;
	mul.hi.u32 	%r66, %r63, %r65;
	setp.gt.s32	%p9, %r66, 0;
	shl.b32 	%r67, %r66, 1;
	shr.u32 	%r68, %r64, 31;
	add.s32 	%r69, %r68, %r67;
	selp.b32	%r70, %r69, %r66, %p9;
	selp.b32	%r71, -1, 0, %p9;
	mov.u32 	%r72, 126;
	sub.s32 	%r73, %r72, %r57;
	add.s32 	%r74, %r73, %r71;
	shl.b32 	%r75, %r74, 23;
	add.s32 	%r76, %r70, 1;
	shr.u32 	%r77, %r76, 7;
	add.s32 	%r78, %r77, 1;
	shr.u32 	%r79, %r78, 1;
	add.s32 	%r80, %r79, %r75;
	or.b32  	%r81, %r80, %r25;
	mov.b32 	 %f31, %r81;

BB14_10:
	mul.f32 	%f21, %f31, %f31;
	mov.f32 	%f22, 0fBF52B7F4;
	mov.f32 	%f23, 0f3B86D46D;
	fma.rn.f32 	%f24, %f23, %f21, %f22;
	add.f32 	%f25, %f21, 0fC01E09D0;
	rcp.rn.f32 	%f26, %f25;
	mul.f32 	%f27, %f24, %f26;
	mul.f32 	%f28, %f27, %f21;
	fma.rn.f32 	%f32, %f28, %f31, %f31;
	and.b32  	%r82, %r91, 1;
	setp.eq.b32	%p10, %r82, 1;
	@!%p10 bra 	BB14_12;
	bra.uni 	BB14_11;

BB14_11:
	mov.f32 	%f29, 0fBF800000;
	div.rn.f32 	%f32, %f29, %f32;

BB14_12:
	cvt.rzi.u32.f32	%r83, %f32;
	st.param.b32	[funj_retval0+0], %r83;
	ret;
}

.visible .func  (.param .b32 funj_retval0) ___tanj(
	.param .b32 ___tanj_param_0
)
{
	.local .align 4 .b8 	__local_depot15[28];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<11>;
	.reg .s16 	%rs<2>;
	.reg .s32 	%r<92>;
	.reg .f32 	%f<33>;
	.reg .s64 	%rd<12>;


	mov.u64 	%SPL, __local_depot15;
	add.u64 	%rd7, %SPL, 0;
	ld.param.s8 	%rs1, [___tanj_param_0];
	cvt.rn.f32.s16	%f30, %rs1;
	abs.f32 	%f10, %f30;
	setp.neu.f32	%p1, %f10, 0f7F800000;
	@%p1 bra 	BB15_2;

	mov.f32 	%f11, 0f00000000;
	mul.rn.f32 	%f30, %f30, %f11;

BB15_2:
	mul.f32 	%f12, %f30, 0f3F22F983;
	cvt.rni.s32.f32	%r91, %f12;
	cvt.rn.f32.s32	%f13, %r91;
	neg.f32 	%f14, %f13;
	mov.f32 	%f15, 0f3FC90FDA;
	fma.rn.f32 	%f16, %f14, %f15, %f30;
	mov.f32 	%f17, 0f33A22168;
	fma.rn.f32 	%f18, %f14, %f17, %f16;
	mov.f32 	%f19, 0f27C234C5;
	fma.rn.f32 	%f31, %f14, %f19, %f18;
	abs.f32 	%f20, %f30;
	setp.leu.f32	%p2, %f20, 0f47CE4780;
	@%p2 bra 	BB15_10;

	mov.b32 	 %r2, %f30;
	shr.u32 	%r3, %r2, 23;
	bfe.u32 	%r31, %r2, 23, 8;
	add.s32 	%r32, %r31, -128;
	shl.b32 	%r33, %r2, 8;
	or.b32  	%r4, %r33, -2147483648;
	shr.u32 	%r34, %r32, 5;
	mov.u32 	%r35, 4;
	sub.s32 	%r5, %r35, %r34;
	mov.u32 	%r85, 0;
	mov.u32 	%r84, %r85;
	mov.u64 	%rd10, __cudart_i2opi_f;
	mov.u64 	%rd11, %rd7;

BB15_4:
	.pragma "nounroll";
	mov.u64 	%rd3, %rd11;
	ld.const.u32 	%r38, [%rd10];
	// inline asm
	{
	mad.lo.cc.u32   %r36, %r38, %r4, %r85;
	madc.hi.u32     %r37, %r38, %r4,  0;
	}
	// inline asm
	st.local.u32 	[%rd3], %r36;
	add.s64 	%rd4, %rd3, 4;
	add.s64 	%rd10, %rd10, 4;
	add.s32 	%r84, %r84, 1;
	setp.ne.s32	%p3, %r84, 6;
	mov.u32 	%r85, %r37;
	mov.u64 	%rd11, %rd4;
	@%p3 bra 	BB15_4;

	and.b32  	%r10, %r2, -2147483648;
	st.local.u32 	[%rd7+24], %r37;
	add.s32 	%r41, %r5, 2;
	mul.wide.s32 	%rd9, %r41, 4;
	add.s64 	%rd6, %rd7, %rd9;
	ld.local.u32 	%r86, [%rd6];
	ld.local.u32 	%r87, [%rd6+-4];
	and.b32  	%r13, %r3, 31;
	setp.eq.s32	%p4, %r13, 0;
	@%p4 bra 	BB15_7;

	mov.u32 	%r42, 32;
	sub.s32 	%r43, %r42, %r13;
	shr.u32 	%r44, %r87, %r43;
	shl.b32 	%r45, %r86, %r13;
	add.s32 	%r86, %r44, %r45;
	ld.local.u32 	%r46, [%rd6+-8];
	shr.u32 	%r47, %r46, %r43;
	shl.b32 	%r48, %r87, %r13;
	add.s32 	%r87, %r47, %r48;

BB15_7:
	shr.u32 	%r49, %r87, 30;
	shl.b32 	%r50, %r86, 2;
	add.s32 	%r88, %r49, %r50;
	shl.b32 	%r19, %r87, 2;
	shr.u32 	%r51, %r88, 31;
	shr.u32 	%r52, %r86, 30;
	add.s32 	%r20, %r51, %r52;
	setp.eq.s32	%p5, %r51, 0;
	mov.u32 	%r89, %r10;
	mov.u32 	%r90, %r19;
	@%p5 bra 	BB15_9;

	not.b32 	%r53, %r88;
	neg.s32 	%r21, %r19;
	setp.eq.s32	%p6, %r19, 0;
	selp.u32	%r54, 1, 0, %p6;
	add.s32 	%r88, %r54, %r53;
	xor.b32  	%r23, %r10, -2147483648;
	mov.u32 	%r89, %r23;
	mov.u32 	%r90, %r21;

BB15_9:
	mov.u32 	%r25, %r89;
	neg.s32 	%r55, %r20;
	setp.eq.s32	%p7, %r10, 0;
	selp.b32	%r91, %r20, %r55, %p7;
	clz.b32 	%r56, %r88;
	setp.eq.s32	%p8, %r56, 0;
	shl.b32 	%r57, %r88, %r56;
	mov.u32 	%r58, 32;
	sub.s32 	%r59, %r58, %r56;
	shr.u32 	%r60, %r90, %r59;
	add.s32 	%r61, %r60, %r57;
	selp.b32	%r62, %r88, %r61, %p8;
	mul.lo.s32 	%r63, %r62, -921707870;
	mov.u32 	%r64, -921707870;
	mul.hi.u32 	%r65, %r62, %r64;
	setp.gt.s32	%p9, %r65, 0;
	shl.b32 	%r66, %r65, 1;
	shr.u32 	%r67, %r63, 31;
	add.s32 	%r68, %r67, %r66;
	selp.b32	%r69, %r68, %r65, %p9;
	selp.b32	%r70, -1, 0, %p9;
	mov.u32 	%r71, 126;
	sub.s32 	%r72, %r71, %r56;
	add.s32 	%r73, %r72, %r70;
	shl.b32 	%r74, %r73, 23;
	add.s32 	%r75, %r69, 1;
	shr.u32 	%r76, %r75, 7;
	add.s32 	%r77, %r76, 1;
	shr.u32 	%r78, %r77, 1;
	add.s32 	%r79, %r78, %r74;
	or.b32  	%r80, %r79, %r25;
	mov.b32 	 %f31, %r80;

BB15_10:
	mul.f32 	%f21, %f31, %f31;
	mov.f32 	%f22, 0fBF52B7F4;
	mov.f32 	%f23, 0f3B86D46D;
	fma.rn.f32 	%f24, %f23, %f21, %f22;
	add.f32 	%f25, %f21, 0fC01E09D0;
	rcp.rn.f32 	%f26, %f25;
	mul.f32 	%f27, %f24, %f26;
	mul.f32 	%f28, %f27, %f21;
	fma.rn.f32 	%f32, %f28, %f31, %f31;
	and.b32  	%r81, %r91, 1;
	setp.eq.b32	%p10, %r81, 1;
	@!%p10 bra 	BB15_12;
	bra.uni 	BB15_11;

BB15_11:
	mov.f32 	%f29, 0fBF800000;
	div.rn.f32 	%f32, %f29, %f32;

BB15_12:
	cvt.rzi.s32.f32	%r82, %f32;
	cvt.s32.s8 	%r83, %r82;
	st.param.b32	[funj_retval0+0], %r83;
	ret;
}

.visible .func  (.param .b32 funj_retval0) ___tanv(
	.param .b32 ___tanv_param_0
)
{
	.local .align 4 .b8 	__local_depot16[28];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<11>;
	.reg .s16 	%rs<2>;
	.reg .s32 	%r<92>;
	.reg .f32 	%f<33>;
	.reg .s64 	%rd<12>;


	mov.u64 	%SPL, __local_depot16;
	add.u64 	%rd7, %SPL, 0;
	ld.param.u8 	%rs1, [___tanv_param_0];
	cvt.rn.f32.u16	%f30, %rs1;
	abs.f32 	%f10, %f30;
	setp.neu.f32	%p1, %f10, 0f7F800000;
	@%p1 bra 	BB16_2;

	mov.f32 	%f11, 0f00000000;
	mul.rn.f32 	%f30, %f30, %f11;

BB16_2:
	mul.f32 	%f12, %f30, 0f3F22F983;
	cvt.rni.s32.f32	%r91, %f12;
	cvt.rn.f32.s32	%f13, %r91;
	neg.f32 	%f14, %f13;
	mov.f32 	%f15, 0f3FC90FDA;
	fma.rn.f32 	%f16, %f14, %f15, %f30;
	mov.f32 	%f17, 0f33A22168;
	fma.rn.f32 	%f18, %f14, %f17, %f16;
	mov.f32 	%f19, 0f27C234C5;
	fma.rn.f32 	%f31, %f14, %f19, %f18;
	abs.f32 	%f20, %f30;
	setp.leu.f32	%p2, %f20, 0f47CE4780;
	@%p2 bra 	BB16_10;

	mov.b32 	 %r2, %f30;
	shr.u32 	%r3, %r2, 23;
	bfe.u32 	%r31, %r2, 23, 8;
	add.s32 	%r32, %r31, -128;
	shl.b32 	%r33, %r2, 8;
	or.b32  	%r4, %r33, -2147483648;
	shr.u32 	%r34, %r32, 5;
	mov.u32 	%r35, 4;
	sub.s32 	%r5, %r35, %r34;
	mov.u32 	%r85, 0;
	mov.u32 	%r84, %r85;
	mov.u64 	%rd10, __cudart_i2opi_f;
	mov.u64 	%rd11, %rd7;

BB16_4:
	.pragma "nounroll";
	mov.u64 	%rd3, %rd11;
	ld.const.u32 	%r38, [%rd10];
	// inline asm
	{
	mad.lo.cc.u32   %r36, %r38, %r4, %r85;
	madc.hi.u32     %r37, %r38, %r4,  0;
	}
	// inline asm
	st.local.u32 	[%rd3], %r36;
	add.s64 	%rd4, %rd3, 4;
	add.s64 	%rd10, %rd10, 4;
	add.s32 	%r84, %r84, 1;
	setp.ne.s32	%p3, %r84, 6;
	mov.u32 	%r85, %r37;
	mov.u64 	%rd11, %rd4;
	@%p3 bra 	BB16_4;

	and.b32  	%r10, %r2, -2147483648;
	st.local.u32 	[%rd7+24], %r37;
	add.s32 	%r41, %r5, 2;
	mul.wide.s32 	%rd9, %r41, 4;
	add.s64 	%rd6, %rd7, %rd9;
	ld.local.u32 	%r86, [%rd6];
	ld.local.u32 	%r87, [%rd6+-4];
	and.b32  	%r13, %r3, 31;
	setp.eq.s32	%p4, %r13, 0;
	@%p4 bra 	BB16_7;

	mov.u32 	%r42, 32;
	sub.s32 	%r43, %r42, %r13;
	shr.u32 	%r44, %r87, %r43;
	shl.b32 	%r45, %r86, %r13;
	add.s32 	%r86, %r44, %r45;
	ld.local.u32 	%r46, [%rd6+-8];
	shr.u32 	%r47, %r46, %r43;
	shl.b32 	%r48, %r87, %r13;
	add.s32 	%r87, %r47, %r48;

BB16_7:
	shr.u32 	%r49, %r87, 30;
	shl.b32 	%r50, %r86, 2;
	add.s32 	%r88, %r49, %r50;
	shl.b32 	%r19, %r87, 2;
	shr.u32 	%r51, %r88, 31;
	shr.u32 	%r52, %r86, 30;
	add.s32 	%r20, %r51, %r52;
	setp.eq.s32	%p5, %r51, 0;
	mov.u32 	%r89, %r10;
	mov.u32 	%r90, %r19;
	@%p5 bra 	BB16_9;

	not.b32 	%r53, %r88;
	neg.s32 	%r21, %r19;
	setp.eq.s32	%p6, %r19, 0;
	selp.u32	%r54, 1, 0, %p6;
	add.s32 	%r88, %r54, %r53;
	xor.b32  	%r23, %r10, -2147483648;
	mov.u32 	%r89, %r23;
	mov.u32 	%r90, %r21;

BB16_9:
	mov.u32 	%r25, %r89;
	neg.s32 	%r55, %r20;
	setp.eq.s32	%p7, %r10, 0;
	selp.b32	%r91, %r20, %r55, %p7;
	clz.b32 	%r56, %r88;
	setp.eq.s32	%p8, %r56, 0;
	shl.b32 	%r57, %r88, %r56;
	mov.u32 	%r58, 32;
	sub.s32 	%r59, %r58, %r56;
	shr.u32 	%r60, %r90, %r59;
	add.s32 	%r61, %r60, %r57;
	selp.b32	%r62, %r88, %r61, %p8;
	mul.lo.s32 	%r63, %r62, -921707870;
	mov.u32 	%r64, -921707870;
	mul.hi.u32 	%r65, %r62, %r64;
	setp.gt.s32	%p9, %r65, 0;
	shl.b32 	%r66, %r65, 1;
	shr.u32 	%r67, %r63, 31;
	add.s32 	%r68, %r67, %r66;
	selp.b32	%r69, %r68, %r65, %p9;
	selp.b32	%r70, -1, 0, %p9;
	mov.u32 	%r71, 126;
	sub.s32 	%r72, %r71, %r56;
	add.s32 	%r73, %r72, %r70;
	shl.b32 	%r74, %r73, 23;
	add.s32 	%r75, %r69, 1;
	shr.u32 	%r76, %r75, 7;
	add.s32 	%r77, %r76, 1;
	shr.u32 	%r78, %r77, 1;
	add.s32 	%r79, %r78, %r74;
	or.b32  	%r80, %r79, %r25;
	mov.b32 	 %f31, %r80;

BB16_10:
	mul.f32 	%f21, %f31, %f31;
	mov.f32 	%f22, 0fBF52B7F4;
	mov.f32 	%f23, 0f3B86D46D;
	fma.rn.f32 	%f24, %f23, %f21, %f22;
	add.f32 	%f25, %f21, 0fC01E09D0;
	rcp.rn.f32 	%f26, %f25;
	mul.f32 	%f27, %f24, %f26;
	mul.f32 	%f28, %f27, %f21;
	fma.rn.f32 	%f32, %f28, %f31, %f31;
	and.b32  	%r81, %r91, 1;
	setp.eq.b32	%p10, %r81, 1;
	@!%p10 bra 	BB16_12;
	bra.uni 	BB16_11;

BB16_11:
	mov.f32 	%f29, 0fBF800000;
	div.rn.f32 	%f32, %f29, %f32;

BB16_12:
	cvt.rzi.u32.f32	%r82, %f32;
	and.b32  	%r83, %r82, 255;
	st.param.b32	[funj_retval0+0], %r83;
	ret;
}

.visible .func  (.param .b64 funj_retval0) ___tand(
	.param .b64 ___tand_param_0
)
{
	.local .align 4 .b8 	__local_depot17[4];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<4>;
	.reg .s32 	%r<8>;
	.reg .s64 	%rd<4>;
	.reg .f64 	%fd<67>;


	mov.u64 	%SPL, __local_depot17;
	cvta.local.u64 	%SP, %SPL;
	ld.param.f64 	%fd64, [___tand_param_0];
	add.u64 	%rd2, %SP, 0;
	cvta.to.local.u64 	%rd1, %rd2;
	abs.f64 	%fd11, %fd64;
	setp.neu.f64	%p1, %fd11, 0d7FF0000000000000;
	@%p1 bra 	BB17_2;

	mov.f64 	%fd12, 0d0000000000000000;
	mul.rn.f64 	%fd64, %fd64, %fd12;

BB17_2:
	mul.f64 	%fd13, %fd64, 0d3FE45F306DC9C883;
	cvt.rni.s32.f64	%r7, %fd13;
	st.local.u32 	[%rd1], %r7;
	cvt.rn.f64.s32	%fd14, %r7;
	neg.f64 	%fd15, %fd14;
	mov.f64 	%fd16, 0d3FF921FB54442D18;
	fma.rn.f64 	%fd17, %fd15, %fd16, %fd64;
	mov.f64 	%fd18, 0d3C91A62633145C00;
	fma.rn.f64 	%fd19, %fd15, %fd18, %fd17;
	mov.f64 	%fd20, 0d397B839A252049C0;
	fma.rn.f64 	%fd65, %fd15, %fd20, %fd19;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r4}, %fd64;
	}
	and.b32  	%r5, %r4, 2145386496;
	setp.lt.u32	%p2, %r5, 1105199104;
	@%p2 bra 	BB17_4;

	// Callseq Start 2
	{
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.f64	[param0+0], %fd64;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd2;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_trig_reduction_slowpathd, 
	(
	param0, 
	param1
	);
	ld.param.f64	%fd65, [retval0+0];
	}
	// Callseq End 2
	ld.local.u32 	%r7, [%rd1];

BB17_4:
	mul.f64 	%fd21, %fd65, %fd65;
	mov.f64 	%fd22, 0dBEF9757C5B27EBB1;
	mov.f64 	%fd23, 0d3EE48DAC2799BCB9;
	fma.rn.f64 	%fd24, %fd23, %fd21, %fd22;
	mov.f64 	%fd25, 0d3F0980E90FD91E04;
	fma.rn.f64 	%fd26, %fd24, %fd21, %fd25;
	mov.f64 	%fd27, 0dBEFAE2B0417D7E1D;
	fma.rn.f64 	%fd28, %fd26, %fd21, %fd27;
	mov.f64 	%fd29, 0d3F119F5341BFBA57;
	fma.rn.f64 	%fd30, %fd28, %fd21, %fd29;
	mov.f64 	%fd31, 0d3F15E791A00F6919;
	fma.rn.f64 	%fd32, %fd30, %fd21, %fd31;
	mov.f64 	%fd33, 0d3F2FF2E7FADEC73A;
	fma.rn.f64 	%fd34, %fd32, %fd21, %fd33;
	mov.f64 	%fd35, 0d3F434BC1B206DA62;
	fma.rn.f64 	%fd36, %fd34, %fd21, %fd35;
	mov.f64 	%fd37, 0d3F57DB18EF2F83F9;
	fma.rn.f64 	%fd38, %fd36, %fd21, %fd37;
	mov.f64 	%fd39, 0d3F6D6D2E7AE49FBC;
	fma.rn.f64 	%fd40, %fd38, %fd21, %fd39;
	mov.f64 	%fd41, 0d3F8226E3A816A776;
	fma.rn.f64 	%fd42, %fd40, %fd21, %fd41;
	mov.f64 	%fd43, 0d3F9664F485D25660;
	fma.rn.f64 	%fd44, %fd42, %fd21, %fd43;
	mov.f64 	%fd45, 0d3FABA1BA1BABF31D;
	fma.rn.f64 	%fd46, %fd44, %fd21, %fd45;
	mov.f64 	%fd47, 0d3FC11111111105D2;
	fma.rn.f64 	%fd48, %fd46, %fd21, %fd47;
	mov.f64 	%fd49, 0d3FD555555555555E;
	fma.rn.f64 	%fd50, %fd48, %fd21, %fd49;
	mul.f64 	%fd6, %fd50, %fd21;
	fma.rn.f64 	%fd66, %fd6, %fd65, %fd65;
	and.b32  	%r6, %r7, 1;
	setp.eq.b32	%p3, %r6, 1;
	@!%p3 bra 	BB17_6;
	bra.uni 	BB17_5;

BB17_5:
	sub.f64 	%fd53, %fd66, %fd65;
	neg.f64 	%fd54, %fd53;
	fma.rn.f64 	%fd55, %fd6, %fd65, %fd54;
	// inline asm
	rcp.approx.ftz.f64 %fd51,%fd66;
	// inline asm
	neg.f64 	%fd56, %fd66;
	mov.f64 	%fd57, 0d3FF0000000000000;
	fma.rn.f64 	%fd58, %fd56, %fd51, %fd57;
	fma.rn.f64 	%fd59, %fd58, %fd58, %fd58;
	fma.rn.f64 	%fd60, %fd59, %fd51, %fd51;
	neg.f64 	%fd61, %fd60;
	fma.rn.f64 	%fd62, %fd66, %fd61, %fd57;
	fma.rn.f64 	%fd63, %fd61, %fd55, %fd62;
	fma.rn.f64 	%fd66, %fd63, %fd61, %fd61;

BB17_6:
	st.param.f64	[funj_retval0+0], %fd66;
	ret;
}

.visible .func  (.param .b32 funj_retval0) ___asins(
	.param .b32 ___asins_param_0
)
{
	.reg .pred 	%p<3>;
	.reg .s32 	%r<5>;
	.reg .f32 	%f<26>;


	ld.param.f32 	%f1, [___asins_param_0];
	abs.f32 	%f2, %f1;
	mov.f32 	%f3, 0f3F800000;
	sub.f32 	%f4, %f3, %f2;
	mul.f32 	%f5, %f4, 0f3F000000;
	sqrt.rn.f32 	%f6, %f5;
	setp.gt.f32	%p1, %f2, 0f3F11EB85;
	selp.f32	%f7, %f6, %f2, %p1;
	mul.f32 	%f8, %f7, %f7;
	mov.f32 	%f9, 0f3C94D2E9;
	mov.f32 	%f10, 0f3D53F941;
	fma.rn.f32 	%f11, %f10, %f8, %f9;
	mov.f32 	%f12, 0f3D3F841F;
	fma.rn.f32 	%f13, %f11, %f8, %f12;
	mov.f32 	%f14, 0f3D994929;
	fma.rn.f32 	%f15, %f13, %f8, %f14;
	mov.f32 	%f16, 0f3E2AAB94;
	fma.rn.f32 	%f17, %f15, %f8, %f16;
	mul.f32 	%f18, %f17, %f8;
	fma.rn.f32 	%f19, %f18, %f7, %f7;
	mov.f32 	%f20, 0f3FC90FDB;
	mov.f32 	%f21, 0fC0000000;
	fma.rn.f32 	%f22, %f21, %f19, %f20;
	selp.f32	%f23, %f22, %f19, %p1;
	setp.gtu.f32	%p2, %f23, 0f7F800000;
	mov.b32 	 %r1, %f23;
	mov.b32 	 %r2, %f1;
	and.b32  	%r3, %r2, -2147483648;
	or.b32  	%r4, %r1, %r3;
	mov.b32 	 %f24, %r4;
	selp.f32	%f25, %f23, %f24, %p2;
	st.param.f32	[funj_retval0+0], %f25;
	ret;
}

.visible .func  (.param .b32 funj_retval0) ___asini(
	.param .b32 ___asini_param_0
)
{
	.reg .pred 	%p<3>;
	.reg .s32 	%r<7>;
	.reg .f32 	%f<26>;


	ld.param.u32 	%r1, [___asini_param_0];
	cvt.rn.f32.s32	%f1, %r1;
	abs.f32 	%f2, %f1;
	mov.f32 	%f3, 0f3F800000;
	sub.f32 	%f4, %f3, %f2;
	mul.f32 	%f5, %f4, 0f3F000000;
	sqrt.rn.f32 	%f6, %f5;
	setp.gt.f32	%p1, %f2, 0f3F11EB85;
	selp.f32	%f7, %f6, %f2, %p1;
	mul.f32 	%f8, %f7, %f7;
	mov.f32 	%f9, 0f3C94D2E9;
	mov.f32 	%f10, 0f3D53F941;
	fma.rn.f32 	%f11, %f10, %f8, %f9;
	mov.f32 	%f12, 0f3D3F841F;
	fma.rn.f32 	%f13, %f11, %f8, %f12;
	mov.f32 	%f14, 0f3D994929;
	fma.rn.f32 	%f15, %f13, %f8, %f14;
	mov.f32 	%f16, 0f3E2AAB94;
	fma.rn.f32 	%f17, %f15, %f8, %f16;
	mul.f32 	%f18, %f17, %f8;
	fma.rn.f32 	%f19, %f18, %f7, %f7;
	mov.f32 	%f20, 0f3FC90FDB;
	mov.f32 	%f21, 0fC0000000;
	fma.rn.f32 	%f22, %f21, %f19, %f20;
	selp.f32	%f23, %f22, %f19, %p1;
	setp.gtu.f32	%p2, %f23, 0f7F800000;
	mov.b32 	 %r2, %f23;
	mov.b32 	 %r3, %f1;
	and.b32  	%r4, %r3, -2147483648;
	or.b32  	%r5, %r2, %r4;
	mov.b32 	 %f24, %r5;
	selp.f32	%f25, %f23, %f24, %p2;
	cvt.rzi.s32.f32	%r6, %f25;
	st.param.b32	[funj_retval0+0], %r6;
	ret;
}

.visible .func  (.param .b32 funj_retval0) ___asinu(
	.param .b32 ___asinu_param_0
)
{
	.reg .pred 	%p<3>;
	.reg .s32 	%r<7>;
	.reg .f32 	%f<26>;


	ld.param.u32 	%r1, [___asinu_param_0];
	cvt.rn.f32.u32	%f1, %r1;
	abs.f32 	%f2, %f1;
	mov.f32 	%f3, 0f3F800000;
	sub.f32 	%f4, %f3, %f2;
	mul.f32 	%f5, %f4, 0f3F000000;
	sqrt.rn.f32 	%f6, %f5;
	setp.gt.f32	%p1, %f2, 0f3F11EB85;
	selp.f32	%f7, %f6, %f2, %p1;
	mul.f32 	%f8, %f7, %f7;
	mov.f32 	%f9, 0f3C94D2E9;
	mov.f32 	%f10, 0f3D53F941;
	fma.rn.f32 	%f11, %f10, %f8, %f9;
	mov.f32 	%f12, 0f3D3F841F;
	fma.rn.f32 	%f13, %f11, %f8, %f12;
	mov.f32 	%f14, 0f3D994929;
	fma.rn.f32 	%f15, %f13, %f8, %f14;
	mov.f32 	%f16, 0f3E2AAB94;
	fma.rn.f32 	%f17, %f15, %f8, %f16;
	mul.f32 	%f18, %f17, %f8;
	fma.rn.f32 	%f19, %f18, %f7, %f7;
	mov.f32 	%f20, 0f3FC90FDB;
	mov.f32 	%f21, 0fC0000000;
	fma.rn.f32 	%f22, %f21, %f19, %f20;
	selp.f32	%f23, %f22, %f19, %p1;
	setp.gtu.f32	%p2, %f23, 0f7F800000;
	mov.b32 	 %r2, %f23;
	mov.b32 	 %r3, %f1;
	and.b32  	%r4, %r3, -2147483648;
	or.b32  	%r5, %r2, %r4;
	mov.b32 	 %f24, %r5;
	selp.f32	%f25, %f23, %f24, %p2;
	cvt.rzi.u32.f32	%r6, %f25;
	st.param.b32	[funj_retval0+0], %r6;
	ret;
}

.visible .func  (.param .b32 funj_retval0) ___asinj(
	.param .b32 ___asinj_param_0
)
{
	.reg .pred 	%p<3>;
	.reg .s16 	%rs<2>;
	.reg .s32 	%r<7>;
	.reg .f32 	%f<26>;


	ld.param.s8 	%rs1, [___asinj_param_0];
	cvt.rn.f32.s16	%f1, %rs1;
	abs.f32 	%f2, %f1;
	mov.f32 	%f3, 0f3F800000;
	sub.f32 	%f4, %f3, %f2;
	mul.f32 	%f5, %f4, 0f3F000000;
	sqrt.rn.f32 	%f6, %f5;
	setp.gt.f32	%p1, %f2, 0f3F11EB85;
	selp.f32	%f7, %f6, %f2, %p1;
	mul.f32 	%f8, %f7, %f7;
	mov.f32 	%f9, 0f3C94D2E9;
	mov.f32 	%f10, 0f3D53F941;
	fma.rn.f32 	%f11, %f10, %f8, %f9;
	mov.f32 	%f12, 0f3D3F841F;
	fma.rn.f32 	%f13, %f11, %f8, %f12;
	mov.f32 	%f14, 0f3D994929;
	fma.rn.f32 	%f15, %f13, %f8, %f14;
	mov.f32 	%f16, 0f3E2AAB94;
	fma.rn.f32 	%f17, %f15, %f8, %f16;
	mul.f32 	%f18, %f17, %f8;
	fma.rn.f32 	%f19, %f18, %f7, %f7;
	mov.f32 	%f20, 0f3FC90FDB;
	mov.f32 	%f21, 0fC0000000;
	fma.rn.f32 	%f22, %f21, %f19, %f20;
	selp.f32	%f23, %f22, %f19, %p1;
	setp.gtu.f32	%p2, %f23, 0f7F800000;
	mov.b32 	 %r1, %f23;
	mov.b32 	 %r2, %f1;
	and.b32  	%r3, %r2, -2147483648;
	or.b32  	%r4, %r1, %r3;
	mov.b32 	 %f24, %r4;
	selp.f32	%f25, %f23, %f24, %p2;
	cvt.rzi.s32.f32	%r5, %f25;
	cvt.s32.s8 	%r6, %r5;
	st.param.b32	[funj_retval0+0], %r6;
	ret;
}

.visible .func  (.param .b32 funj_retval0) ___asinv(
	.param .b32 ___asinv_param_0
)
{
	.reg .pred 	%p<3>;
	.reg .s16 	%rs<2>;
	.reg .s32 	%r<7>;
	.reg .f32 	%f<26>;


	ld.param.u8 	%rs1, [___asinv_param_0];
	cvt.rn.f32.u16	%f1, %rs1;
	abs.f32 	%f2, %f1;
	mov.f32 	%f3, 0f3F800000;
	sub.f32 	%f4, %f3, %f2;
	mul.f32 	%f5, %f4, 0f3F000000;
	sqrt.rn.f32 	%f6, %f5;
	setp.gt.f32	%p1, %f2, 0f3F11EB85;
	selp.f32	%f7, %f6, %f2, %p1;
	mul.f32 	%f8, %f7, %f7;
	mov.f32 	%f9, 0f3C94D2E9;
	mov.f32 	%f10, 0f3D53F941;
	fma.rn.f32 	%f11, %f10, %f8, %f9;
	mov.f32 	%f12, 0f3D3F841F;
	fma.rn.f32 	%f13, %f11, %f8, %f12;
	mov.f32 	%f14, 0f3D994929;
	fma.rn.f32 	%f15, %f13, %f8, %f14;
	mov.f32 	%f16, 0f3E2AAB94;
	fma.rn.f32 	%f17, %f15, %f8, %f16;
	mul.f32 	%f18, %f17, %f8;
	fma.rn.f32 	%f19, %f18, %f7, %f7;
	mov.f32 	%f20, 0f3FC90FDB;
	mov.f32 	%f21, 0fC0000000;
	fma.rn.f32 	%f22, %f21, %f19, %f20;
	selp.f32	%f23, %f22, %f19, %p1;
	setp.gtu.f32	%p2, %f23, 0f7F800000;
	mov.b32 	 %r1, %f23;
	mov.b32 	 %r2, %f1;
	and.b32  	%r3, %r2, -2147483648;
	or.b32  	%r4, %r1, %r3;
	mov.b32 	 %f24, %r4;
	selp.f32	%f25, %f23, %f24, %p2;
	cvt.rzi.u32.f32	%r5, %f25;
	and.b32  	%r6, %r5, 255;
	st.param.b32	[funj_retval0+0], %r6;
	ret;
}

.visible .func  (.param .b64 funj_retval0) ___asind(
	.param .b64 ___asind_param_0
)
{
	.reg .pred 	%p<5>;
	.reg .s32 	%r<16>;
	.reg .f64 	%fd<84>;


	ld.param.f64 	%fd6, [___asind_param_0];
	abs.f64 	%fd1, %fd6;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r1}, %fd1;
	}
	setp.lt.s32	%p1, %r1, 1071801958;
	@%p1 bra 	BB23_3;

	mov.f64 	%fd9, 0d3FE0000000000000;
	mov.f64 	%fd10, 0dBFE0000000000000;
	fma.rn.f64 	%fd8, %fd10, %fd1, %fd9;
	// inline asm
	rsqrt.approx.ftz.f64 %fd7, %fd8;
	// inline asm
	{
	.reg .b32 %temp; 
	mov.b64 	{%r2, %temp}, %fd7;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r3}, %fd7;
	}
	add.s32 	%r4, %r3, -1048576;
	mov.b64 	%fd11, {%r2, %r4};
	mul.f64 	%fd12, %fd8, %fd7;
	neg.f64 	%fd13, %fd12;
	fma.rn.f64 	%fd14, %fd12, %fd13, %fd8;
	fma.rn.f64 	%fd15, %fd14, %fd11, %fd12;
	neg.f64 	%fd16, %fd15;
	mov.f64 	%fd17, 0d3FF0000000000000;
	fma.rn.f64 	%fd18, %fd7, %fd16, %fd17;
	fma.rn.f64 	%fd19, %fd18, %fd11, %fd11;
	fma.rn.f64 	%fd20, %fd15, %fd16, %fd8;
	fma.rn.f64 	%fd21, %fd20, %fd19, %fd15;
	setp.gt.s32	%p2, %r1, 1072693247;
	selp.f64	%fd22, 0dFFF8000000000000, %fd21, %p2;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r5}, %fd8;
	}
	setp.eq.s32	%p3, %r5, 0;
	selp.f64	%fd23, %fd8, %fd22, %p3;
	mov.f64 	%fd24, 0dBFB3823B180754AF;
	mov.f64 	%fd25, 0d3FB0066BDC1895E9;
	fma.rn.f64 	%fd26, %fd25, %fd8, %fd24;
	mov.f64 	%fd27, 0d3FB11E52CC2F79AE;
	fma.rn.f64 	%fd28, %fd26, %fd8, %fd27;
	mov.f64 	%fd29, 0dBF924EAF3526861B;
	fma.rn.f64 	%fd30, %fd28, %fd8, %fd29;
	mov.f64 	%fd31, 0d3F91DF02A31E6CB7;
	fma.rn.f64 	%fd32, %fd30, %fd8, %fd31;
	mov.f64 	%fd33, 0d3F847D18B0EEC6CC;
	fma.rn.f64 	%fd34, %fd32, %fd8, %fd33;
	mov.f64 	%fd35, 0d3F8D0AF961BA53B0;
	fma.rn.f64 	%fd36, %fd34, %fd8, %fd35;
	mov.f64 	%fd37, 0d3F91BF7734CF1C48;
	fma.rn.f64 	%fd38, %fd36, %fd8, %fd37;
	mov.f64 	%fd39, 0d3F96E91483144EF7;
	fma.rn.f64 	%fd40, %fd38, %fd8, %fd39;
	mov.f64 	%fd41, 0d3F9F1C6E0A4F9F81;
	fma.rn.f64 	%fd42, %fd40, %fd8, %fd41;
	mov.f64 	%fd43, 0d3FA6DB6DC27FA92B;
	fma.rn.f64 	%fd44, %fd42, %fd8, %fd43;
	mov.f64 	%fd45, 0d3FB333333320F91B;
	fma.rn.f64 	%fd46, %fd44, %fd8, %fd45;
	mov.f64 	%fd47, 0d3FC5555555555F4D;
	fma.rn.f64 	%fd48, %fd46, %fd8, %fd47;
	mul.f64 	%fd49, %fd48, %fd8;
	mul.f64 	%fd50, %fd23, 0dC000000000000000;
	mov.f64 	%fd51, 0d3C91A62633145C07;
	fma.rn.f64 	%fd52, %fd50, %fd49, %fd51;
	add.f64 	%fd53, %fd50, 0d3FE921FB54442D18;
	add.f64 	%fd54, %fd53, %fd52;
	add.f64 	%fd83, %fd54, 0d3FE921FB54442D18;
	setp.gt.s32	%p4, %r1, 1072693248;
	@%p4 bra 	BB23_4;

	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r6}, %fd6;
	}
	and.b32  	%r7, %r6, -2147483648;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r8}, %fd83;
	}
	or.b32  	%r9, %r8, %r7;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r10, %temp}, %fd83;
	}
	mov.b64 	%fd83, {%r10, %r9};
	bra.uni 	BB23_4;

BB23_3:
	mul.f64 	%fd55, %fd1, %fd1;
	mov.f64 	%fd56, 0dBFB3823B180754AF;
	mov.f64 	%fd57, 0d3FB0066BDC1895E9;
	fma.rn.f64 	%fd58, %fd57, %fd55, %fd56;
	mov.f64 	%fd59, 0d3FB11E52CC2F79AE;
	fma.rn.f64 	%fd60, %fd58, %fd55, %fd59;
	mov.f64 	%fd61, 0dBF924EAF3526861B;
	fma.rn.f64 	%fd62, %fd60, %fd55, %fd61;
	mov.f64 	%fd63, 0d3F91DF02A31E6CB7;
	fma.rn.f64 	%fd64, %fd62, %fd55, %fd63;
	mov.f64 	%fd65, 0d3F847D18B0EEC6CC;
	fma.rn.f64 	%fd66, %fd64, %fd55, %fd65;
	mov.f64 	%fd67, 0d3F8D0AF961BA53B0;
	fma.rn.f64 	%fd68, %fd66, %fd55, %fd67;
	mov.f64 	%fd69, 0d3F91BF7734CF1C48;
	fma.rn.f64 	%fd70, %fd68, %fd55, %fd69;
	mov.f64 	%fd71, 0d3F96E91483144EF7;
	fma.rn.f64 	%fd72, %fd70, %fd55, %fd71;
	mov.f64 	%fd73, 0d3F9F1C6E0A4F9F81;
	fma.rn.f64 	%fd74, %fd72, %fd55, %fd73;
	mov.f64 	%fd75, 0d3FA6DB6DC27FA92B;
	fma.rn.f64 	%fd76, %fd74, %fd55, %fd75;
	mov.f64 	%fd77, 0d3FB333333320F91B;
	fma.rn.f64 	%fd78, %fd76, %fd55, %fd77;
	mov.f64 	%fd79, 0d3FC5555555555F4D;
	fma.rn.f64 	%fd80, %fd78, %fd55, %fd79;
	mul.f64 	%fd81, %fd80, %fd55;
	fma.rn.f64 	%fd82, %fd81, %fd1, %fd1;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r11, %temp}, %fd82;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r12}, %fd82;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r13}, %fd6;
	}
	and.b32  	%r14, %r13, -2147483648;
	or.b32  	%r15, %r12, %r14;
	mov.b64 	%fd83, {%r11, %r15};

BB23_4:
	st.param.f64	[funj_retval0+0], %fd83;
	ret;
}

.visible .func  (.param .b32 funj_retval0) ___acoss(
	.param .b32 ___acoss_param_0
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<27>;


	ld.param.f32 	%f1, [___acoss_param_0];
	abs.f32 	%f2, %f1;
	mov.f32 	%f3, 0f3F800000;
	sub.f32 	%f4, %f3, %f2;
	mul.f32 	%f5, %f4, 0f3F000000;
	sqrt.rn.f32 	%f6, %f5;
	setp.gt.f32	%p1, %f2, 0f3F11EB85;
	selp.f32	%f7, %f6, %f2, %p1;
	mul.f32 	%f8, %f7, %f7;
	mov.f32 	%f9, 0f3C94D2E9;
	mov.f32 	%f10, 0f3D53F941;
	fma.rn.f32 	%f11, %f10, %f8, %f9;
	mov.f32 	%f12, 0f3D3F841F;
	fma.rn.f32 	%f13, %f11, %f8, %f12;
	mov.f32 	%f14, 0f3D994929;
	fma.rn.f32 	%f15, %f13, %f8, %f14;
	mov.f32 	%f16, 0f3E2AAB94;
	fma.rn.f32 	%f17, %f15, %f8, %f16;
	mul.f32 	%f18, %f17, %f8;
	fma.rn.f32 	%f19, %f18, %f7, %f7;
	add.f32 	%f20, %f19, %f19;
	mov.f32 	%f21, 0f3FC90FDB;
	sub.f32 	%f22, %f21, %f19;
	selp.f32	%f23, %f20, %f22, %p1;
	setp.lt.f32	%p2, %f1, 0f00000000;
	mov.f32 	%f24, 0f40490FDB;
	sub.f32 	%f25, %f24, %f23;
	selp.f32	%f26, %f25, %f23, %p2;
	st.param.f32	[funj_retval0+0], %f26;
	ret;
}

.visible .func  (.param .b32 funj_retval0) ___acosi(
	.param .b32 ___acosi_param_0
)
{
	.reg .pred 	%p<3>;
	.reg .s32 	%r<3>;
	.reg .f32 	%f<27>;


	ld.param.u32 	%r1, [___acosi_param_0];
	cvt.rn.f32.s32	%f1, %r1;
	abs.f32 	%f2, %f1;
	mov.f32 	%f3, 0f3F800000;
	sub.f32 	%f4, %f3, %f2;
	mul.f32 	%f5, %f4, 0f3F000000;
	sqrt.rn.f32 	%f6, %f5;
	setp.gt.f32	%p1, %f2, 0f3F11EB85;
	selp.f32	%f7, %f6, %f2, %p1;
	mul.f32 	%f8, %f7, %f7;
	mov.f32 	%f9, 0f3C94D2E9;
	mov.f32 	%f10, 0f3D53F941;
	fma.rn.f32 	%f11, %f10, %f8, %f9;
	mov.f32 	%f12, 0f3D3F841F;
	fma.rn.f32 	%f13, %f11, %f8, %f12;
	mov.f32 	%f14, 0f3D994929;
	fma.rn.f32 	%f15, %f13, %f8, %f14;
	mov.f32 	%f16, 0f3E2AAB94;
	fma.rn.f32 	%f17, %f15, %f8, %f16;
	mul.f32 	%f18, %f17, %f8;
	fma.rn.f32 	%f19, %f18, %f7, %f7;
	add.f32 	%f20, %f19, %f19;
	mov.f32 	%f21, 0f3FC90FDB;
	sub.f32 	%f22, %f21, %f19;
	selp.f32	%f23, %f20, %f22, %p1;
	setp.lt.f32	%p2, %f1, 0f00000000;
	mov.f32 	%f24, 0f40490FDB;
	sub.f32 	%f25, %f24, %f23;
	selp.f32	%f26, %f25, %f23, %p2;
	cvt.rzi.s32.f32	%r2, %f26;
	st.param.b32	[funj_retval0+0], %r2;
	ret;
}

.visible .func  (.param .b32 funj_retval0) ___acosu(
	.param .b32 ___acosu_param_0
)
{
	.reg .pred 	%p<3>;
	.reg .s32 	%r<3>;
	.reg .f32 	%f<27>;


	ld.param.u32 	%r1, [___acosu_param_0];
	cvt.rn.f32.u32	%f1, %r1;
	abs.f32 	%f2, %f1;
	mov.f32 	%f3, 0f3F800000;
	sub.f32 	%f4, %f3, %f2;
	mul.f32 	%f5, %f4, 0f3F000000;
	sqrt.rn.f32 	%f6, %f5;
	setp.gt.f32	%p1, %f2, 0f3F11EB85;
	selp.f32	%f7, %f6, %f2, %p1;
	mul.f32 	%f8, %f7, %f7;
	mov.f32 	%f9, 0f3C94D2E9;
	mov.f32 	%f10, 0f3D53F941;
	fma.rn.f32 	%f11, %f10, %f8, %f9;
	mov.f32 	%f12, 0f3D3F841F;
	fma.rn.f32 	%f13, %f11, %f8, %f12;
	mov.f32 	%f14, 0f3D994929;
	fma.rn.f32 	%f15, %f13, %f8, %f14;
	mov.f32 	%f16, 0f3E2AAB94;
	fma.rn.f32 	%f17, %f15, %f8, %f16;
	mul.f32 	%f18, %f17, %f8;
	fma.rn.f32 	%f19, %f18, %f7, %f7;
	add.f32 	%f20, %f19, %f19;
	mov.f32 	%f21, 0f3FC90FDB;
	sub.f32 	%f22, %f21, %f19;
	selp.f32	%f23, %f20, %f22, %p1;
	setp.lt.f32	%p2, %f1, 0f00000000;
	mov.f32 	%f24, 0f40490FDB;
	sub.f32 	%f25, %f24, %f23;
	selp.f32	%f26, %f25, %f23, %p2;
	cvt.rzi.u32.f32	%r2, %f26;
	st.param.b32	[funj_retval0+0], %r2;
	ret;
}

.visible .func  (.param .b32 funj_retval0) ___acosj(
	.param .b32 ___acosj_param_0
)
{
	.reg .pred 	%p<3>;
	.reg .s16 	%rs<2>;
	.reg .s32 	%r<3>;
	.reg .f32 	%f<27>;


	ld.param.s8 	%rs1, [___acosj_param_0];
	cvt.rn.f32.s16	%f1, %rs1;
	abs.f32 	%f2, %f1;
	mov.f32 	%f3, 0f3F800000;
	sub.f32 	%f4, %f3, %f2;
	mul.f32 	%f5, %f4, 0f3F000000;
	sqrt.rn.f32 	%f6, %f5;
	setp.gt.f32	%p1, %f2, 0f3F11EB85;
	selp.f32	%f7, %f6, %f2, %p1;
	mul.f32 	%f8, %f7, %f7;
	mov.f32 	%f9, 0f3C94D2E9;
	mov.f32 	%f10, 0f3D53F941;
	fma.rn.f32 	%f11, %f10, %f8, %f9;
	mov.f32 	%f12, 0f3D3F841F;
	fma.rn.f32 	%f13, %f11, %f8, %f12;
	mov.f32 	%f14, 0f3D994929;
	fma.rn.f32 	%f15, %f13, %f8, %f14;
	mov.f32 	%f16, 0f3E2AAB94;
	fma.rn.f32 	%f17, %f15, %f8, %f16;
	mul.f32 	%f18, %f17, %f8;
	fma.rn.f32 	%f19, %f18, %f7, %f7;
	add.f32 	%f20, %f19, %f19;
	mov.f32 	%f21, 0f3FC90FDB;
	sub.f32 	%f22, %f21, %f19;
	selp.f32	%f23, %f20, %f22, %p1;
	setp.lt.s16	%p2, %rs1, 0;
	mov.f32 	%f24, 0f40490FDB;
	sub.f32 	%f25, %f24, %f23;
	selp.f32	%f26, %f25, %f23, %p2;
	cvt.rzi.s32.f32	%r1, %f26;
	cvt.s32.s8 	%r2, %r1;
	st.param.b32	[funj_retval0+0], %r2;
	ret;
}

.visible .func  (.param .b32 funj_retval0) ___acosv(
	.param .b32 ___acosv_param_0
)
{
	.reg .pred 	%p<2>;
	.reg .s16 	%rs<2>;
	.reg .s32 	%r<3>;
	.reg .f32 	%f<24>;


	ld.param.u8 	%rs1, [___acosv_param_0];
	cvt.rn.f32.u16	%f1, %rs1;
	abs.f32 	%f2, %f1;
	mov.f32 	%f3, 0f3F800000;
	sub.f32 	%f4, %f3, %f2;
	mul.f32 	%f5, %f4, 0f3F000000;
	sqrt.rn.f32 	%f6, %f5;
	setp.gt.f32	%p1, %f2, 0f3F11EB85;
	selp.f32	%f7, %f6, %f2, %p1;
	mul.f32 	%f8, %f7, %f7;
	mov.f32 	%f9, 0f3C94D2E9;
	mov.f32 	%f10, 0f3D53F941;
	fma.rn.f32 	%f11, %f10, %f8, %f9;
	mov.f32 	%f12, 0f3D3F841F;
	fma.rn.f32 	%f13, %f11, %f8, %f12;
	mov.f32 	%f14, 0f3D994929;
	fma.rn.f32 	%f15, %f13, %f8, %f14;
	mov.f32 	%f16, 0f3E2AAB94;
	fma.rn.f32 	%f17, %f15, %f8, %f16;
	mul.f32 	%f18, %f17, %f8;
	fma.rn.f32 	%f19, %f18, %f7, %f7;
	add.f32 	%f20, %f19, %f19;
	mov.f32 	%f21, 0f3FC90FDB;
	sub.f32 	%f22, %f21, %f19;
	selp.f32	%f23, %f20, %f22, %p1;
	cvt.rzi.u32.f32	%r1, %f23;
	and.b32  	%r2, %r1, 255;
	st.param.b32	[funj_retval0+0], %r2;
	ret;
}

.visible .func  (.param .b64 funj_retval0) ___acosd(
	.param .b64 ___acosd_param_0
)
{
	.reg .pred 	%p<6>;
	.reg .s32 	%r<12>;
	.reg .f64 	%fd<95>;


	ld.param.f64 	%fd14, [___acosd_param_0];
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r1}, %fd14;
	}
	abs.f64 	%fd1, %fd14;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r3}, %fd1;
	}
	setp.lt.s32	%p1, %r3, 1071801958;
	@%p1 bra 	BB29_8;

	mov.f64 	%fd17, 0d3FF0000000000000;
	sub.f64 	%fd2, %fd17, %fd1;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r4, %temp}, %fd2;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2}, %fd2;
	}
	add.s32 	%r5, %r2, -1048576;
	mov.b64 	%fd16, {%r4, %r5};
	// inline asm
	rsqrt.approx.ftz.f64 %fd15, %fd16;
	// inline asm
	{
	.reg .b32 %temp; 
	mov.b64 	{%r6, %temp}, %fd15;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r7}, %fd15;
	}
	add.s32 	%r8, %r7, -1048576;
	mov.b64 	%fd18, {%r6, %r8};
	mul.f64 	%fd19, %fd16, %fd15;
	neg.f64 	%fd20, %fd19;
	fma.rn.f64 	%fd21, %fd19, %fd20, %fd16;
	fma.rn.f64 	%fd22, %fd21, %fd18, %fd19;
	neg.f64 	%fd23, %fd22;
	fma.rn.f64 	%fd24, %fd15, %fd23, %fd17;
	fma.rn.f64 	%fd25, %fd24, %fd18, %fd18;
	fma.rn.f64 	%fd26, %fd22, %fd23, %fd16;
	fma.rn.f64 	%fd3, %fd26, %fd25, %fd22;
	setp.lt.s32	%p2, %r2, 1;
	@%p2 bra 	BB29_3;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r9, %temp}, %fd3;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r10}, %fd3;
	}
	add.s32 	%r11, %r10, 1048576;
	mov.b64 	%fd27, {%r9, %r11};
	mov.f64 	%fd28, 0dBEBAC2FE66FAAC4B;
	mov.f64 	%fd29, 0d3EC715B371155F70;
	fma.rn.f64 	%fd30, %fd29, %fd2, %fd28;
	mov.f64 	%fd31, 0d3ED9A9B88EFCD9B8;
	fma.rn.f64 	%fd32, %fd30, %fd2, %fd31;
	mov.f64 	%fd33, 0d3EDD0F40A8A0C4C3;
	fma.rn.f64 	%fd34, %fd32, %fd2, %fd33;
	mov.f64 	%fd35, 0d3EF46D4CFA9E0E1F;
	fma.rn.f64 	%fd36, %fd34, %fd2, %fd35;
	mov.f64 	%fd37, 0d3F079C168D1E2422;
	fma.rn.f64 	%fd38, %fd36, %fd2, %fd37;
	mov.f64 	%fd39, 0d3F1C9A88C3BCA540;
	fma.rn.f64 	%fd40, %fd38, %fd2, %fd39;
	mov.f64 	%fd41, 0d3F31C4E64BD476DF;
	fma.rn.f64 	%fd42, %fd40, %fd2, %fd41;
	mov.f64 	%fd43, 0d3F46E8BA60009C8F;
	fma.rn.f64 	%fd44, %fd42, %fd2, %fd43;
	mov.f64 	%fd45, 0d3F5F1C71C62B05A2;
	fma.rn.f64 	%fd46, %fd44, %fd2, %fd45;
	mov.f64 	%fd47, 0d3F76DB6DB6DC9F2C;
	fma.rn.f64 	%fd48, %fd46, %fd2, %fd47;
	mov.f64 	%fd49, 0d3F9333333333329C;
	fma.rn.f64 	%fd50, %fd48, %fd2, %fd49;
	mov.f64 	%fd51, 0d3FB5555555555555;
	fma.rn.f64 	%fd52, %fd50, %fd2, %fd51;
	mul.f64 	%fd53, %fd52, %fd2;
	fma.rn.f64 	%fd94, %fd53, %fd27, %fd27;
	bra.uni 	BB29_4;

BB29_3:
	mov.f64 	%fd54, 0d0000000000000000;
	mul.rn.f64 	%fd94, %fd1, %fd54;

BB29_4:
	setp.gt.s32	%p3, %r2, -1;
	@%p3 bra 	BB29_6;

	mov.f64 	%fd55, 0d7FF0000000000000;
	mul.rn.f64 	%fd94, %fd94, %fd55;

BB29_6:
	setp.gt.s32	%p4, %r1, -1;
	@%p4 bra 	BB29_11;

	mov.f64 	%fd56, 0dBCA1A62633145C07;
	add.rn.f64 	%fd57, %fd94, %fd56;
	neg.f64 	%fd58, %fd57;
	mov.f64 	%fd59, 0d400921FB54442D18;
	add.rn.f64 	%fd94, %fd59, %fd58;
	bra.uni 	BB29_11;

BB29_8:
	mul.f64 	%fd60, %fd1, %fd1;
	mov.f64 	%fd61, 0dBFB3823B180754AF;
	mov.f64 	%fd62, 0d3FB0066BDC1895E9;
	fma.rn.f64 	%fd63, %fd62, %fd60, %fd61;
	mov.f64 	%fd64, 0d3FB11E52CC2F79AE;
	fma.rn.f64 	%fd65, %fd63, %fd60, %fd64;
	mov.f64 	%fd66, 0dBF924EAF3526861B;
	fma.rn.f64 	%fd67, %fd65, %fd60, %fd66;
	mov.f64 	%fd68, 0d3F91DF02A31E6CB7;
	fma.rn.f64 	%fd69, %fd67, %fd60, %fd68;
	mov.f64 	%fd70, 0d3F847D18B0EEC6CC;
	fma.rn.f64 	%fd71, %fd69, %fd60, %fd70;
	mov.f64 	%fd72, 0d3F8D0AF961BA53B0;
	fma.rn.f64 	%fd73, %fd71, %fd60, %fd72;
	mov.f64 	%fd74, 0d3F91BF7734CF1C48;
	fma.rn.f64 	%fd75, %fd73, %fd60, %fd74;
	mov.f64 	%fd76, 0d3F96E91483144EF7;
	fma.rn.f64 	%fd77, %fd75, %fd60, %fd76;
	mov.f64 	%fd78, 0d3F9F1C6E0A4F9F81;
	fma.rn.f64 	%fd79, %fd77, %fd60, %fd78;
	mov.f64 	%fd80, 0d3FA6DB6DC27FA92B;
	fma.rn.f64 	%fd81, %fd79, %fd60, %fd80;
	mov.f64 	%fd82, 0d3FB333333320F91B;
	fma.rn.f64 	%fd83, %fd81, %fd60, %fd82;
	mov.f64 	%fd84, 0d3FC5555555555F4D;
	fma.rn.f64 	%fd85, %fd83, %fd60, %fd84;
	mul.f64 	%fd86, %fd85, %fd60;
	fma.rn.f64 	%fd10, %fd86, %fd1, %fd1;
	setp.lt.s32	%p5, %r1, 0;
	@%p5 bra 	BB29_10;

	mov.f64 	%fd87, 0dBC91A62633145C07;
	add.rn.f64 	%fd88, %fd10, %fd87;
	neg.f64 	%fd89, %fd88;
	mov.f64 	%fd90, 0d3FF921FB54442D18;
	add.rn.f64 	%fd94, %fd90, %fd89;
	bra.uni 	BB29_11;

BB29_10:
	mov.f64 	%fd91, 0d3C91A62633145C07;
	add.rn.f64 	%fd92, %fd10, %fd91;
	mov.f64 	%fd93, 0d3FF921FB54442D18;
	add.rn.f64 	%fd94, %fd93, %fd92;

BB29_11:
	st.param.f64	[funj_retval0+0], %fd94;
	ret;
}

.visible .func  (.param .b32 funj_retval0) ___atans(
	.param .b32 ___atans_param_0
)
{
	.reg .pred 	%p<4>;
	.reg .s32 	%r<5>;
	.reg .f32 	%f<26>;


	ld.param.f32 	%f4, [___atans_param_0];
	abs.f32 	%f1, %f4;
	setp.leu.f32	%p1, %f1, 0f3F800000;
	mov.f32 	%f25, %f1;
	@%p1 bra 	BB30_2;

	rcp.rn.f32 	%f2, %f1;
	mov.f32 	%f25, %f2;

BB30_2:
	mov.f32 	%f3, %f25;
	mul.rn.f32 	%f5, %f3, %f3;
	mov.f32 	%f6, 0fC0B59883;
	mov.f32 	%f7, 0fBF52C7EA;
	fma.rn.f32 	%f8, %f5, %f7, %f6;
	mov.f32 	%f9, 0fC0D21907;
	fma.rn.f32 	%f10, %f8, %f5, %f9;
	mul.f32 	%f11, %f10, %f5;
	mul.f32 	%f12, %f11, %f3;
	add.f32 	%f13, %f5, 0f41355DC0;
	mov.f32 	%f14, 0f41E6BD60;
	fma.rn.f32 	%f15, %f13, %f5, %f14;
	mov.f32 	%f16, 0f419D92C8;
	fma.rn.f32 	%f17, %f15, %f5, %f16;
	rcp.rn.f32 	%f18, %f17;
	fma.rn.f32 	%f19, %f12, %f18, %f3;
	mov.f32 	%f20, 0f3FC90FDB;
	sub.f32 	%f21, %f20, %f19;
	setp.gt.f32	%p2, %f1, 0f3F800000;
	selp.f32	%f22, %f21, %f19, %p2;
	mov.b32 	 %r1, %f22;
	mov.b32 	 %r2, %f4;
	and.b32  	%r3, %r2, -2147483648;
	or.b32  	%r4, %r1, %r3;
	mov.b32 	 %f23, %r4;
	setp.gtu.f32	%p3, %f1, 0f7F800000;
	selp.f32	%f24, %f22, %f23, %p3;
	st.param.f32	[funj_retval0+0], %f24;
	ret;
}

.visible .func  (.param .b32 funj_retval0) ___atani(
	.param .b32 ___atani_param_0
)
{
	.reg .pred 	%p<4>;
	.reg .s32 	%r<7>;
	.reg .f32 	%f<26>;


	ld.param.u32 	%r1, [___atani_param_0];
	cvt.rn.f32.s32	%f1, %r1;
	abs.f32 	%f2, %f1;
	setp.leu.f32	%p1, %f2, 0f3F800000;
	mov.f32 	%f25, %f2;
	@%p1 bra 	BB31_2;

	rcp.rn.f32 	%f3, %f2;
	mov.f32 	%f25, %f3;

BB31_2:
	mov.f32 	%f4, %f25;
	mul.rn.f32 	%f5, %f4, %f4;
	mov.f32 	%f6, 0fC0B59883;
	mov.f32 	%f7, 0fBF52C7EA;
	fma.rn.f32 	%f8, %f5, %f7, %f6;
	mov.f32 	%f9, 0fC0D21907;
	fma.rn.f32 	%f10, %f8, %f5, %f9;
	mul.f32 	%f11, %f10, %f5;
	mul.f32 	%f12, %f11, %f4;
	add.f32 	%f13, %f5, 0f41355DC0;
	mov.f32 	%f14, 0f41E6BD60;
	fma.rn.f32 	%f15, %f13, %f5, %f14;
	mov.f32 	%f16, 0f419D92C8;
	fma.rn.f32 	%f17, %f15, %f5, %f16;
	rcp.rn.f32 	%f18, %f17;
	fma.rn.f32 	%f19, %f12, %f18, %f4;
	mov.f32 	%f20, 0f3FC90FDB;
	sub.f32 	%f21, %f20, %f19;
	setp.gt.f32	%p2, %f2, 0f3F800000;
	selp.f32	%f22, %f21, %f19, %p2;
	mov.b32 	 %r2, %f22;
	mov.b32 	 %r3, %f1;
	and.b32  	%r4, %r3, -2147483648;
	or.b32  	%r5, %r2, %r4;
	mov.b32 	 %f23, %r5;
	setp.gtu.f32	%p3, %f2, 0f7F800000;
	selp.f32	%f24, %f22, %f23, %p3;
	cvt.rzi.s32.f32	%r6, %f24;
	st.param.b32	[funj_retval0+0], %r6;
	ret;
}

.visible .func  (.param .b32 funj_retval0) ___atanu(
	.param .b32 ___atanu_param_0
)
{
	.reg .pred 	%p<4>;
	.reg .s32 	%r<7>;
	.reg .f32 	%f<26>;


	ld.param.u32 	%r1, [___atanu_param_0];
	cvt.rn.f32.u32	%f1, %r1;
	abs.f32 	%f2, %f1;
	setp.leu.f32	%p1, %f2, 0f3F800000;
	mov.f32 	%f25, %f2;
	@%p1 bra 	BB32_2;

	rcp.rn.f32 	%f3, %f2;
	mov.f32 	%f25, %f3;

BB32_2:
	mov.f32 	%f4, %f25;
	mul.rn.f32 	%f5, %f4, %f4;
	mov.f32 	%f6, 0fC0B59883;
	mov.f32 	%f7, 0fBF52C7EA;
	fma.rn.f32 	%f8, %f5, %f7, %f6;
	mov.f32 	%f9, 0fC0D21907;
	fma.rn.f32 	%f10, %f8, %f5, %f9;
	mul.f32 	%f11, %f10, %f5;
	mul.f32 	%f12, %f11, %f4;
	add.f32 	%f13, %f5, 0f41355DC0;
	mov.f32 	%f14, 0f41E6BD60;
	fma.rn.f32 	%f15, %f13, %f5, %f14;
	mov.f32 	%f16, 0f419D92C8;
	fma.rn.f32 	%f17, %f15, %f5, %f16;
	rcp.rn.f32 	%f18, %f17;
	fma.rn.f32 	%f19, %f12, %f18, %f4;
	mov.f32 	%f20, 0f3FC90FDB;
	sub.f32 	%f21, %f20, %f19;
	setp.gt.f32	%p2, %f2, 0f3F800000;
	selp.f32	%f22, %f21, %f19, %p2;
	mov.b32 	 %r2, %f22;
	mov.b32 	 %r3, %f1;
	and.b32  	%r4, %r3, -2147483648;
	or.b32  	%r5, %r2, %r4;
	mov.b32 	 %f23, %r5;
	setp.gtu.f32	%p3, %f2, 0f7F800000;
	selp.f32	%f24, %f22, %f23, %p3;
	cvt.rzi.u32.f32	%r6, %f24;
	st.param.b32	[funj_retval0+0], %r6;
	ret;
}

.visible .func  (.param .b32 funj_retval0) ___atanj(
	.param .b32 ___atanj_param_0
)
{
	.reg .pred 	%p<4>;
	.reg .s16 	%rs<2>;
	.reg .s32 	%r<7>;
	.reg .f32 	%f<26>;


	ld.param.s8 	%rs1, [___atanj_param_0];
	cvt.rn.f32.s16	%f1, %rs1;
	abs.f32 	%f2, %f1;
	setp.leu.f32	%p1, %f2, 0f3F800000;
	mov.f32 	%f25, %f2;
	@%p1 bra 	BB33_2;

	rcp.rn.f32 	%f3, %f2;
	mov.f32 	%f25, %f3;

BB33_2:
	mov.f32 	%f4, %f25;
	mul.rn.f32 	%f5, %f4, %f4;
	mov.f32 	%f6, 0fC0B59883;
	mov.f32 	%f7, 0fBF52C7EA;
	fma.rn.f32 	%f8, %f5, %f7, %f6;
	mov.f32 	%f9, 0fC0D21907;
	fma.rn.f32 	%f10, %f8, %f5, %f9;
	mul.f32 	%f11, %f10, %f5;
	mul.f32 	%f12, %f11, %f4;
	add.f32 	%f13, %f5, 0f41355DC0;
	mov.f32 	%f14, 0f41E6BD60;
	fma.rn.f32 	%f15, %f13, %f5, %f14;
	mov.f32 	%f16, 0f419D92C8;
	fma.rn.f32 	%f17, %f15, %f5, %f16;
	rcp.rn.f32 	%f18, %f17;
	fma.rn.f32 	%f19, %f12, %f18, %f4;
	mov.f32 	%f20, 0f3FC90FDB;
	sub.f32 	%f21, %f20, %f19;
	setp.gt.f32	%p2, %f2, 0f3F800000;
	selp.f32	%f22, %f21, %f19, %p2;
	mov.b32 	 %r1, %f22;
	mov.b32 	 %r2, %f1;
	and.b32  	%r3, %r2, -2147483648;
	or.b32  	%r4, %r1, %r3;
	mov.b32 	 %f23, %r4;
	setp.gtu.f32	%p3, %f2, 0f7F800000;
	selp.f32	%f24, %f22, %f23, %p3;
	cvt.rzi.s32.f32	%r5, %f24;
	cvt.s32.s8 	%r6, %r5;
	st.param.b32	[funj_retval0+0], %r6;
	ret;
}

.visible .func  (.param .b32 funj_retval0) ___atanv(
	.param .b32 ___atanv_param_0
)
{
	.reg .pred 	%p<4>;
	.reg .s16 	%rs<2>;
	.reg .s32 	%r<7>;
	.reg .f32 	%f<26>;


	ld.param.u8 	%rs1, [___atanv_param_0];
	cvt.rn.f32.u16	%f1, %rs1;
	abs.f32 	%f2, %f1;
	setp.leu.f32	%p1, %f2, 0f3F800000;
	mov.f32 	%f25, %f2;
	@%p1 bra 	BB34_2;

	rcp.rn.f32 	%f3, %f2;
	mov.f32 	%f25, %f3;

BB34_2:
	mov.f32 	%f4, %f25;
	mul.rn.f32 	%f5, %f4, %f4;
	mov.f32 	%f6, 0fC0B59883;
	mov.f32 	%f7, 0fBF52C7EA;
	fma.rn.f32 	%f8, %f5, %f7, %f6;
	mov.f32 	%f9, 0fC0D21907;
	fma.rn.f32 	%f10, %f8, %f5, %f9;
	mul.f32 	%f11, %f10, %f5;
	mul.f32 	%f12, %f11, %f4;
	add.f32 	%f13, %f5, 0f41355DC0;
	mov.f32 	%f14, 0f41E6BD60;
	fma.rn.f32 	%f15, %f13, %f5, %f14;
	mov.f32 	%f16, 0f419D92C8;
	fma.rn.f32 	%f17, %f15, %f5, %f16;
	rcp.rn.f32 	%f18, %f17;
	fma.rn.f32 	%f19, %f12, %f18, %f4;
	mov.f32 	%f20, 0f3FC90FDB;
	sub.f32 	%f21, %f20, %f19;
	setp.gt.f32	%p2, %f2, 0f3F800000;
	selp.f32	%f22, %f21, %f19, %p2;
	mov.b32 	 %r1, %f22;
	mov.b32 	 %r2, %f1;
	and.b32  	%r3, %r2, -2147483648;
	or.b32  	%r4, %r1, %r3;
	mov.b32 	 %f23, %r4;
	setp.gtu.f32	%p3, %f2, 0f7F800000;
	selp.f32	%f24, %f22, %f23, %p3;
	cvt.rzi.u32.f32	%r5, %f24;
	and.b32  	%r6, %r5, 255;
	st.param.b32	[funj_retval0+0], %r6;
	ret;
}

.visible .func  (.param .b64 funj_retval0) ___atand(
	.param .b64 ___atand_param_0
)
{
	.reg .pred 	%p<4>;
	.reg .s32 	%r<6>;
	.reg .f64 	%fd<57>;


	ld.param.f64 	%fd4, [___atand_param_0];
	abs.f64 	%fd1, %fd4;
	setp.leu.f64	%p1, %fd1, 0d3FF0000000000000;
	mov.f64 	%fd56, %fd1;
	@%p1 bra 	BB35_2;

	// inline asm
	rcp.approx.ftz.f64 %fd5,%fd1;
	// inline asm
	neg.f64 	%fd7, %fd1;
	mov.f64 	%fd8, 0d3FF0000000000000;
	fma.rn.f64 	%fd9, %fd7, %fd5, %fd8;
	fma.rn.f64 	%fd10, %fd9, %fd9, %fd9;
	fma.rn.f64 	%fd11, %fd10, %fd5, %fd5;
	setp.eq.f64	%p2, %fd1, 0d7FF0000000000000;
	selp.f64	%fd2, 0d0000000000000000, %fd11, %p2;
	mov.f64 	%fd56, %fd2;

BB35_2:
	mov.f64 	%fd3, %fd56;
	mul.f64 	%fd12, %fd3, %fd3;
	mov.f64 	%fd13, 0d3F2D3B63DBB65B49;
	mov.f64 	%fd14, 0dBEF53E1D2A25FF7E;
	fma.rn.f64 	%fd15, %fd14, %fd12, %fd13;
	mov.f64 	%fd16, 0dBF5312788DDE082E;
	fma.rn.f64 	%fd17, %fd15, %fd12, %fd16;
	mov.f64 	%fd18, 0d3F6F9690C8249315;
	fma.rn.f64 	%fd19, %fd17, %fd12, %fd18;
	mov.f64 	%fd20, 0dBF82CF5AABC7CF0D;
	fma.rn.f64 	%fd21, %fd19, %fd12, %fd20;
	mov.f64 	%fd22, 0d3F9162B0B2A3BFDE;
	fma.rn.f64 	%fd23, %fd21, %fd12, %fd22;
	mov.f64 	%fd24, 0dBF9A7256FEB6FC6B;
	fma.rn.f64 	%fd25, %fd23, %fd12, %fd24;
	mov.f64 	%fd26, 0d3FA171560CE4A489;
	fma.rn.f64 	%fd27, %fd25, %fd12, %fd26;
	mov.f64 	%fd28, 0dBFA4F44D841450E4;
	fma.rn.f64 	%fd29, %fd27, %fd12, %fd28;
	mov.f64 	%fd30, 0d3FA7EE3D3F36BB95;
	fma.rn.f64 	%fd31, %fd29, %fd12, %fd30;
	mov.f64 	%fd32, 0dBFAAD32AE04A9FD1;
	fma.rn.f64 	%fd33, %fd31, %fd12, %fd32;
	mov.f64 	%fd34, 0d3FAE17813D66954F;
	fma.rn.f64 	%fd35, %fd33, %fd12, %fd34;
	mov.f64 	%fd36, 0dBFB11089CA9A5BCD;
	fma.rn.f64 	%fd37, %fd35, %fd12, %fd36;
	mov.f64 	%fd38, 0d3FB3B12B2DB51738;
	fma.rn.f64 	%fd39, %fd37, %fd12, %fd38;
	mov.f64 	%fd40, 0dBFB745D022F8DC5C;
	fma.rn.f64 	%fd41, %fd39, %fd12, %fd40;
	mov.f64 	%fd42, 0d3FBC71C709DFE927;
	fma.rn.f64 	%fd43, %fd41, %fd12, %fd42;
	mov.f64 	%fd44, 0dBFC2492491FA1744;
	fma.rn.f64 	%fd45, %fd43, %fd12, %fd44;
	mov.f64 	%fd46, 0d3FC99999999840D2;
	fma.rn.f64 	%fd47, %fd45, %fd12, %fd46;
	mov.f64 	%fd48, 0dBFD555555555544C;
	fma.rn.f64 	%fd49, %fd47, %fd12, %fd48;
	mul.f64 	%fd50, %fd49, %fd12;
	fma.rn.f64 	%fd51, %fd50, %fd3, %fd3;
	mov.f64 	%fd52, 0d3FF921FB54442D18;
	sub.f64 	%fd53, %fd52, %fd51;
	setp.gt.f64	%p3, %fd1, 0d3FF0000000000000;
	selp.f64	%fd54, %fd53, %fd51, %p3;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r1, %temp}, %fd54;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2}, %fd54;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r3}, %fd4;
	}
	and.b32  	%r4, %r3, -2147483648;
	or.b32  	%r5, %r2, %r4;
	mov.b64 	%fd55, {%r1, %r5};
	st.param.f64	[funj_retval0+0], %fd55;
	ret;
}

.visible .func  (.param .b32 funj_retval0) ___atan2ss(
	.param .b32 ___atan2ss_param_0,
	.param .b32 ___atan2ss_param_1
)
{
	.reg .pred 	%p<10>;
	.reg .s32 	%r<13>;
	.reg .f32 	%f<36>;


	ld.param.f32 	%f7, [___atan2ss_param_0];
	ld.param.f32 	%f8, [___atan2ss_param_1];
	abs.f32 	%f1, %f8;
	setp.eq.f32	%p1, %f1, 0f00000000;
	abs.f32 	%f2, %f7;
	setp.eq.f32	%p2, %f2, 0f00000000;
	and.pred  	%p3, %p1, %p2;
	mov.b32 	 %r1, %f8;
	mov.b32 	 %r3, %f7;
	and.b32  	%r2, %r3, -2147483648;
	@%p3 bra 	BB36_4;

	setp.eq.f32	%p4, %f1, 0f7F800000;
	setp.eq.f32	%p5, %f2, 0f7F800000;
	and.pred  	%p6, %p4, %p5;
	@%p6 bra 	BB36_3;

	max.f32 	%f9, %f2, %f1;
	min.f32 	%f10, %f2, %f1;
	div.rn.f32 	%f11, %f10, %f9;
	mul.rn.f32 	%f12, %f11, %f11;
	mov.f32 	%f13, 0fC0B59883;
	mov.f32 	%f14, 0fBF52C7EA;
	fma.rn.f32 	%f15, %f12, %f14, %f13;
	mov.f32 	%f16, 0fC0D21907;
	fma.rn.f32 	%f17, %f15, %f12, %f16;
	mul.f32 	%f18, %f17, %f12;
	mul.f32 	%f19, %f18, %f11;
	add.f32 	%f20, %f12, 0f41355DC0;
	mov.f32 	%f21, 0f41E6BD60;
	fma.rn.f32 	%f22, %f20, %f12, %f21;
	mov.f32 	%f23, 0f419D92C8;
	fma.rn.f32 	%f24, %f22, %f12, %f23;
	rcp.rn.f32 	%f25, %f24;
	fma.rn.f32 	%f26, %f19, %f25, %f11;
	mov.f32 	%f27, 0f3FC90FDB;
	sub.f32 	%f28, %f27, %f26;
	setp.gt.f32	%p7, %f2, %f1;
	selp.f32	%f29, %f28, %f26, %p7;
	mov.f32 	%f30, 0f40490FDB;
	sub.f32 	%f31, %f30, %f29;
	setp.lt.s32	%p8, %r1, 0;
	selp.f32	%f32, %f31, %f29, %p8;
	mov.b32 	 %r4, %f32;
	or.b32  	%r5, %r4, %r2;
	mov.b32 	 %f33, %r5;
	add.f32 	%f34, %f1, %f2;
	setp.gtu.f32	%p9, %f34, 0f7F800000;
	selp.f32	%f35, %f34, %f33, %p9;
	bra.uni 	BB36_5;

BB36_3:
	shr.s32 	%r6, %r1, 31;
	and.b32  	%r7, %r6, 13483017;
	add.s32 	%r8, %r7, 1061752795;
	or.b32  	%r9, %r8, %r2;
	mov.b32 	 %f35, %r9;
	bra.uni 	BB36_5;

BB36_4:
	shr.s32 	%r10, %r1, 31;
	and.b32  	%r11, %r10, 1078530011;
	or.b32  	%r12, %r11, %r2;
	mov.b32 	 %f35, %r12;

BB36_5:
	st.param.f32	[funj_retval0+0], %f35;
	ret;
}

.visible .func  (.param .b32 funj_retval0) ___atan2ii(
	.param .b32 ___atan2ii_param_0,
	.param .b32 ___atan2ii_param_1
)
{
	.reg .pred 	%p<10>;
	.reg .s32 	%r<16>;
	.reg .f32 	%f<36>;


	ld.param.u32 	%r3, [___atan2ii_param_0];
	ld.param.u32 	%r4, [___atan2ii_param_1];
	cvt.rn.f32.s32	%f7, %r3;
	cvt.rn.f32.s32	%f8, %r4;
	abs.f32 	%f1, %f8;
	abs.f32 	%f2, %f7;
	setp.eq.f32	%p1, %f1, 0f00000000;
	setp.eq.f32	%p2, %f2, 0f00000000;
	and.pred  	%p3, %p1, %p2;
	mov.b32 	 %r1, %f8;
	mov.b32 	 %r5, %f7;
	and.b32  	%r2, %r5, -2147483648;
	@%p3 bra 	BB37_4;

	setp.eq.f32	%p4, %f1, 0f7F800000;
	setp.eq.f32	%p5, %f2, 0f7F800000;
	and.pred  	%p6, %p4, %p5;
	@%p6 bra 	BB37_3;

	max.f32 	%f9, %f2, %f1;
	min.f32 	%f10, %f2, %f1;
	div.rn.f32 	%f11, %f10, %f9;
	mul.rn.f32 	%f12, %f11, %f11;
	mov.f32 	%f13, 0fC0B59883;
	mov.f32 	%f14, 0fBF52C7EA;
	fma.rn.f32 	%f15, %f12, %f14, %f13;
	mov.f32 	%f16, 0fC0D21907;
	fma.rn.f32 	%f17, %f15, %f12, %f16;
	mul.f32 	%f18, %f17, %f12;
	mul.f32 	%f19, %f18, %f11;
	add.f32 	%f20, %f12, 0f41355DC0;
	mov.f32 	%f21, 0f41E6BD60;
	fma.rn.f32 	%f22, %f20, %f12, %f21;
	mov.f32 	%f23, 0f419D92C8;
	fma.rn.f32 	%f24, %f22, %f12, %f23;
	rcp.rn.f32 	%f25, %f24;
	fma.rn.f32 	%f26, %f19, %f25, %f11;
	mov.f32 	%f27, 0f3FC90FDB;
	sub.f32 	%f28, %f27, %f26;
	setp.gt.f32	%p7, %f2, %f1;
	selp.f32	%f29, %f28, %f26, %p7;
	mov.f32 	%f30, 0f40490FDB;
	sub.f32 	%f31, %f30, %f29;
	setp.lt.s32	%p8, %r1, 0;
	selp.f32	%f32, %f31, %f29, %p8;
	mov.b32 	 %r6, %f32;
	or.b32  	%r7, %r6, %r2;
	mov.b32 	 %f33, %r7;
	add.f32 	%f34, %f1, %f2;
	setp.gtu.f32	%p9, %f34, 0f7F800000;
	selp.f32	%f35, %f34, %f33, %p9;
	bra.uni 	BB37_5;

BB37_3:
	shr.s32 	%r8, %r1, 31;
	and.b32  	%r9, %r8, 13483017;
	add.s32 	%r10, %r9, 1061752795;
	or.b32  	%r11, %r10, %r2;
	mov.b32 	 %f35, %r11;
	bra.uni 	BB37_5;

BB37_4:
	shr.s32 	%r12, %r1, 31;
	and.b32  	%r13, %r12, 1078530011;
	or.b32  	%r14, %r13, %r2;
	mov.b32 	 %f35, %r14;

BB37_5:
	cvt.rzi.s32.f32	%r15, %f35;
	st.param.b32	[funj_retval0+0], %r15;
	ret;
}

.visible .func  (.param .b32 funj_retval0) ___atan2uu(
	.param .b32 ___atan2uu_param_0,
	.param .b32 ___atan2uu_param_1
)
{
	.reg .pred 	%p<10>;
	.reg .s32 	%r<16>;
	.reg .f32 	%f<36>;


	ld.param.u32 	%r3, [___atan2uu_param_0];
	ld.param.u32 	%r4, [___atan2uu_param_1];
	cvt.rn.f32.u32	%f7, %r3;
	cvt.rn.f32.u32	%f8, %r4;
	abs.f32 	%f1, %f8;
	abs.f32 	%f2, %f7;
	setp.eq.f32	%p1, %f1, 0f00000000;
	setp.eq.f32	%p2, %f2, 0f00000000;
	and.pred  	%p3, %p1, %p2;
	mov.b32 	 %r1, %f8;
	mov.b32 	 %r5, %f7;
	and.b32  	%r2, %r5, -2147483648;
	@%p3 bra 	BB38_4;

	setp.eq.f32	%p4, %f1, 0f7F800000;
	setp.eq.f32	%p5, %f2, 0f7F800000;
	and.pred  	%p6, %p4, %p5;
	@%p6 bra 	BB38_3;

	max.f32 	%f9, %f2, %f1;
	min.f32 	%f10, %f2, %f1;
	div.rn.f32 	%f11, %f10, %f9;
	mul.rn.f32 	%f12, %f11, %f11;
	mov.f32 	%f13, 0fC0B59883;
	mov.f32 	%f14, 0fBF52C7EA;
	fma.rn.f32 	%f15, %f12, %f14, %f13;
	mov.f32 	%f16, 0fC0D21907;
	fma.rn.f32 	%f17, %f15, %f12, %f16;
	mul.f32 	%f18, %f17, %f12;
	mul.f32 	%f19, %f18, %f11;
	add.f32 	%f20, %f12, 0f41355DC0;
	mov.f32 	%f21, 0f41E6BD60;
	fma.rn.f32 	%f22, %f20, %f12, %f21;
	mov.f32 	%f23, 0f419D92C8;
	fma.rn.f32 	%f24, %f22, %f12, %f23;
	rcp.rn.f32 	%f25, %f24;
	fma.rn.f32 	%f26, %f19, %f25, %f11;
	mov.f32 	%f27, 0f3FC90FDB;
	sub.f32 	%f28, %f27, %f26;
	setp.gt.f32	%p7, %f2, %f1;
	selp.f32	%f29, %f28, %f26, %p7;
	mov.f32 	%f30, 0f40490FDB;
	sub.f32 	%f31, %f30, %f29;
	setp.lt.s32	%p8, %r1, 0;
	selp.f32	%f32, %f31, %f29, %p8;
	mov.b32 	 %r6, %f32;
	or.b32  	%r7, %r6, %r2;
	mov.b32 	 %f33, %r7;
	add.f32 	%f34, %f1, %f2;
	setp.gtu.f32	%p9, %f34, 0f7F800000;
	selp.f32	%f35, %f34, %f33, %p9;
	bra.uni 	BB38_5;

BB38_3:
	shr.s32 	%r8, %r1, 31;
	and.b32  	%r9, %r8, 13483017;
	add.s32 	%r10, %r9, 1061752795;
	or.b32  	%r11, %r10, %r2;
	mov.b32 	 %f35, %r11;
	bra.uni 	BB38_5;

BB38_4:
	shr.s32 	%r12, %r1, 31;
	and.b32  	%r13, %r12, 1078530011;
	or.b32  	%r14, %r13, %r2;
	mov.b32 	 %f35, %r14;

BB38_5:
	cvt.rzi.u32.f32	%r15, %f35;
	st.param.b32	[funj_retval0+0], %r15;
	ret;
}

.visible .func  (.param .b32 funj_retval0) ___atan2jj(
	.param .b32 ___atan2jj_param_0,
	.param .b32 ___atan2jj_param_1
)
{
	.reg .pred 	%p<10>;
	.reg .s16 	%rs<3>;
	.reg .s32 	%r<15>;
	.reg .f32 	%f<36>;


	ld.param.s8 	%rs1, [___atan2jj_param_0];
	cvt.rn.f32.s16	%f7, %rs1;
	ld.param.s8 	%rs2, [___atan2jj_param_1];
	cvt.rn.f32.s16	%f8, %rs2;
	abs.f32 	%f1, %f8;
	abs.f32 	%f2, %f7;
	setp.eq.f32	%p1, %f1, 0f00000000;
	setp.eq.f32	%p2, %f2, 0f00000000;
	and.pred  	%p3, %p1, %p2;
	mov.b32 	 %r1, %f8;
	mov.b32 	 %r3, %f7;
	and.b32  	%r2, %r3, -2147483648;
	@%p3 bra 	BB39_4;

	setp.eq.f32	%p4, %f1, 0f7F800000;
	setp.eq.f32	%p5, %f2, 0f7F800000;
	and.pred  	%p6, %p4, %p5;
	@%p6 bra 	BB39_3;

	max.f32 	%f9, %f2, %f1;
	min.f32 	%f10, %f2, %f1;
	div.rn.f32 	%f11, %f10, %f9;
	mul.rn.f32 	%f12, %f11, %f11;
	mov.f32 	%f13, 0fC0B59883;
	mov.f32 	%f14, 0fBF52C7EA;
	fma.rn.f32 	%f15, %f12, %f14, %f13;
	mov.f32 	%f16, 0fC0D21907;
	fma.rn.f32 	%f17, %f15, %f12, %f16;
	mul.f32 	%f18, %f17, %f12;
	mul.f32 	%f19, %f18, %f11;
	add.f32 	%f20, %f12, 0f41355DC0;
	mov.f32 	%f21, 0f41E6BD60;
	fma.rn.f32 	%f22, %f20, %f12, %f21;
	mov.f32 	%f23, 0f419D92C8;
	fma.rn.f32 	%f24, %f22, %f12, %f23;
	rcp.rn.f32 	%f25, %f24;
	fma.rn.f32 	%f26, %f19, %f25, %f11;
	mov.f32 	%f27, 0f3FC90FDB;
	sub.f32 	%f28, %f27, %f26;
	setp.gt.f32	%p7, %f2, %f1;
	selp.f32	%f29, %f28, %f26, %p7;
	mov.f32 	%f30, 0f40490FDB;
	sub.f32 	%f31, %f30, %f29;
	setp.lt.s32	%p8, %r1, 0;
	selp.f32	%f32, %f31, %f29, %p8;
	mov.b32 	 %r4, %f32;
	or.b32  	%r5, %r4, %r2;
	mov.b32 	 %f33, %r5;
	add.f32 	%f34, %f1, %f2;
	setp.gtu.f32	%p9, %f34, 0f7F800000;
	selp.f32	%f35, %f34, %f33, %p9;
	bra.uni 	BB39_5;

BB39_3:
	shr.s32 	%r6, %r1, 31;
	and.b32  	%r7, %r6, 13483017;
	add.s32 	%r8, %r7, 1061752795;
	or.b32  	%r9, %r8, %r2;
	mov.b32 	 %f35, %r9;
	bra.uni 	BB39_5;

BB39_4:
	shr.s32 	%r10, %r1, 31;
	and.b32  	%r11, %r10, 1078530011;
	or.b32  	%r12, %r11, %r2;
	mov.b32 	 %f35, %r12;

BB39_5:
	cvt.rzi.s32.f32	%r13, %f35;
	cvt.s32.s8 	%r14, %r13;
	st.param.b32	[funj_retval0+0], %r14;
	ret;
}

.visible .func  (.param .b32 funj_retval0) ___atan2vv(
	.param .b32 ___atan2vv_param_0,
	.param .b32 ___atan2vv_param_1
)
{
	.reg .pred 	%p<10>;
	.reg .s16 	%rs<3>;
	.reg .s32 	%r<15>;
	.reg .f32 	%f<36>;


	ld.param.u8 	%rs1, [___atan2vv_param_0];
	cvt.rn.f32.u16	%f7, %rs1;
	ld.param.u8 	%rs2, [___atan2vv_param_1];
	cvt.rn.f32.u16	%f8, %rs2;
	abs.f32 	%f1, %f8;
	abs.f32 	%f2, %f7;
	setp.eq.f32	%p1, %f1, 0f00000000;
	setp.eq.f32	%p2, %f2, 0f00000000;
	and.pred  	%p3, %p1, %p2;
	mov.b32 	 %r1, %f8;
	mov.b32 	 %r3, %f7;
	and.b32  	%r2, %r3, -2147483648;
	@%p3 bra 	BB40_4;

	setp.eq.f32	%p4, %f1, 0f7F800000;
	setp.eq.f32	%p5, %f2, 0f7F800000;
	and.pred  	%p6, %p4, %p5;
	@%p6 bra 	BB40_3;

	max.f32 	%f9, %f2, %f1;
	min.f32 	%f10, %f2, %f1;
	div.rn.f32 	%f11, %f10, %f9;
	mul.rn.f32 	%f12, %f11, %f11;
	mov.f32 	%f13, 0fC0B59883;
	mov.f32 	%f14, 0fBF52C7EA;
	fma.rn.f32 	%f15, %f12, %f14, %f13;
	mov.f32 	%f16, 0fC0D21907;
	fma.rn.f32 	%f17, %f15, %f12, %f16;
	mul.f32 	%f18, %f17, %f12;
	mul.f32 	%f19, %f18, %f11;
	add.f32 	%f20, %f12, 0f41355DC0;
	mov.f32 	%f21, 0f41E6BD60;
	fma.rn.f32 	%f22, %f20, %f12, %f21;
	mov.f32 	%f23, 0f419D92C8;
	fma.rn.f32 	%f24, %f22, %f12, %f23;
	rcp.rn.f32 	%f25, %f24;
	fma.rn.f32 	%f26, %f19, %f25, %f11;
	mov.f32 	%f27, 0f3FC90FDB;
	sub.f32 	%f28, %f27, %f26;
	setp.gt.f32	%p7, %f2, %f1;
	selp.f32	%f29, %f28, %f26, %p7;
	mov.f32 	%f30, 0f40490FDB;
	sub.f32 	%f31, %f30, %f29;
	setp.lt.s32	%p8, %r1, 0;
	selp.f32	%f32, %f31, %f29, %p8;
	mov.b32 	 %r4, %f32;
	or.b32  	%r5, %r4, %r2;
	mov.b32 	 %f33, %r5;
	add.f32 	%f34, %f1, %f2;
	setp.gtu.f32	%p9, %f34, 0f7F800000;
	selp.f32	%f35, %f34, %f33, %p9;
	bra.uni 	BB40_5;

BB40_3:
	shr.s32 	%r6, %r1, 31;
	and.b32  	%r7, %r6, 13483017;
	add.s32 	%r8, %r7, 1061752795;
	or.b32  	%r9, %r8, %r2;
	mov.b32 	 %f35, %r9;
	bra.uni 	BB40_5;

BB40_4:
	shr.s32 	%r10, %r1, 31;
	and.b32  	%r11, %r10, 1078530011;
	or.b32  	%r12, %r11, %r2;
	mov.b32 	 %f35, %r12;

BB40_5:
	cvt.rzi.u32.f32	%r13, %f35;
	and.b32  	%r14, %r13, 255;
	st.param.b32	[funj_retval0+0], %r14;
	ret;
}

.visible .func  (.param .b64 funj_retval0) ___atan2dd(
	.param .b64 ___atan2dd_param_0,
	.param .b64 ___atan2dd_param_1
)
{
	.reg .pred 	%p<12>;
	.reg .s32 	%r<13>;
	.reg .f64 	%fd<63>;


	ld.param.f64 	%fd7, [___atan2dd_param_0];
	ld.param.f64 	%fd8, [___atan2dd_param_1];
	abs.f64 	%fd1, %fd8;
	setp.eq.f64	%p1, %fd1, 0d0000000000000000;
	abs.f64 	%fd2, %fd7;
	setp.eq.f64	%p2, %fd2, 0d0000000000000000;
	and.pred  	%p3, %p1, %p2;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r1}, %fd8;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r3}, %fd7;
	}
	and.b32  	%r2, %r3, -2147483648;
	@%p3 bra 	BB41_4;

	setp.eq.f64	%p4, %fd1, 0d7FF0000000000000;
	setp.eq.f64	%p5, %fd2, 0d7FF0000000000000;
	and.pred  	%p6, %p4, %p5;
	@%p6 bra 	BB41_3;

	setp.lt.s32	%p7, %r1, 0;
	min.f64 	%fd9, %fd2, %fd1;
	max.f64 	%fd10, %fd2, %fd1;
	div.rn.f64 	%fd11, %fd9, %fd10;
	mul.f64 	%fd12, %fd11, %fd11;
	mov.f64 	%fd13, 0d3F2D3B63DBB65B49;
	mov.f64 	%fd14, 0dBEF53E1D2A25FF7E;
	fma.rn.f64 	%fd15, %fd14, %fd12, %fd13;
	mov.f64 	%fd16, 0dBF5312788DDE082E;
	fma.rn.f64 	%fd17, %fd15, %fd12, %fd16;
	mov.f64 	%fd18, 0d3F6F9690C8249315;
	fma.rn.f64 	%fd19, %fd17, %fd12, %fd18;
	mov.f64 	%fd20, 0dBF82CF5AABC7CF0D;
	fma.rn.f64 	%fd21, %fd19, %fd12, %fd20;
	mov.f64 	%fd22, 0d3F9162B0B2A3BFDE;
	fma.rn.f64 	%fd23, %fd21, %fd12, %fd22;
	mov.f64 	%fd24, 0dBF9A7256FEB6FC6B;
	fma.rn.f64 	%fd25, %fd23, %fd12, %fd24;
	mov.f64 	%fd26, 0d3FA171560CE4A489;
	fma.rn.f64 	%fd27, %fd25, %fd12, %fd26;
	mov.f64 	%fd28, 0dBFA4F44D841450E4;
	fma.rn.f64 	%fd29, %fd27, %fd12, %fd28;
	mov.f64 	%fd30, 0d3FA7EE3D3F36BB95;
	fma.rn.f64 	%fd31, %fd29, %fd12, %fd30;
	mov.f64 	%fd32, 0dBFAAD32AE04A9FD1;
	fma.rn.f64 	%fd33, %fd31, %fd12, %fd32;
	mov.f64 	%fd34, 0d3FAE17813D66954F;
	fma.rn.f64 	%fd35, %fd33, %fd12, %fd34;
	mov.f64 	%fd36, 0dBFB11089CA9A5BCD;
	fma.rn.f64 	%fd37, %fd35, %fd12, %fd36;
	mov.f64 	%fd38, 0d3FB3B12B2DB51738;
	fma.rn.f64 	%fd39, %fd37, %fd12, %fd38;
	mov.f64 	%fd40, 0dBFB745D022F8DC5C;
	fma.rn.f64 	%fd41, %fd39, %fd12, %fd40;
	mov.f64 	%fd42, 0d3FBC71C709DFE927;
	fma.rn.f64 	%fd43, %fd41, %fd12, %fd42;
	mov.f64 	%fd44, 0dBFC2492491FA1744;
	fma.rn.f64 	%fd45, %fd43, %fd12, %fd44;
	mov.f64 	%fd46, 0d3FC99999999840D2;
	fma.rn.f64 	%fd47, %fd45, %fd12, %fd46;
	mov.f64 	%fd48, 0dBFD555555555544C;
	fma.rn.f64 	%fd49, %fd47, %fd12, %fd48;
	mul.f64 	%fd50, %fd49, %fd12;
	fma.rn.f64 	%fd51, %fd50, %fd11, %fd11;
	mov.f64 	%fd52, 0d3FF921FB54442D18;
	sub.f64 	%fd53, %fd52, %fd51;
	setp.gt.f64	%p8, %fd2, %fd1;
	selp.f64	%fd54, %fd53, %fd51, %p8;
	mov.f64 	%fd55, 0d400921FB54442D18;
	sub.f64 	%fd56, %fd55, %fd54;
	selp.f64	%fd57, %fd56, %fd54, %p7;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r4, %temp}, %fd57;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r5}, %fd57;
	}
	or.b32  	%r6, %r5, %r2;
	mov.b64 	%fd58, {%r4, %r6};
	add.f64 	%fd59, %fd1, %fd2;
	setp.gtu.f64	%p9, %fd59, 0d7FF0000000000000;
	selp.f64	%fd62, %fd59, %fd58, %p9;
	bra.uni 	BB41_5;

BB41_3:
	setp.lt.s32	%p10, %r1, 0;
	selp.f64	%fd60, 0d4002D97C7F3321D2, 0d3FE921FB54442D18, %p10;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r7, %temp}, %fd60;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r8}, %fd60;
	}
	or.b32  	%r9, %r8, %r2;
	mov.b64 	%fd62, {%r7, %r9};
	bra.uni 	BB41_5;

BB41_4:
	setp.lt.s32	%p11, %r1, 0;
	selp.f64	%fd61, 0d400921FB54442D18, 0d0000000000000000, %p11;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r10, %temp}, %fd61;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r11}, %fd61;
	}
	or.b32  	%r12, %r11, %r2;
	mov.b64 	%fd62, {%r10, %r12};

BB41_5:
	st.param.f64	[funj_retval0+0], %fd62;
	ret;
}

.func  (.param .b64 funj_retval0) __internal_trig_reduction_slowpathd(
	.param .b64 __internal_trig_reduction_slowpathd_param_0,
	.param .b64 __internal_trig_reduction_slowpathd_param_1
)
{
	.local .align 8 .b8 	__local_depot42[40];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<9>;
	.reg .s32 	%r<42>;
	.reg .s64 	%rd<99>;
	.reg .f64 	%fd<5>;


	mov.u64 	%SPL, __local_depot42;
	ld.param.f64 	%fd4, [__internal_trig_reduction_slowpathd_param_0];
	ld.param.u64 	%rd37, [__internal_trig_reduction_slowpathd_param_1];
	add.u64 	%rd38, %SPL, 0;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r1}, %fd4;
	}
	and.b32  	%r40, %r1, -2147483648;
	shr.u32 	%r3, %r1, 20;
	bfe.u32 	%r4, %r1, 20, 11;
	setp.eq.s32	%p1, %r4, 2047;
	@%p1 bra 	BB42_14;

	add.s32 	%r15, %r4, -1024;
	shr.u32 	%r16, %r15, 6;
	mov.u32 	%r17, 15;
	sub.s32 	%r5, %r17, %r16;
	mov.u32 	%r18, 19;
	sub.s32 	%r19, %r18, %r16;
	mov.u32 	%r20, 18;
	min.s32 	%r6, %r20, %r19;
	setp.lt.s32	%p2, %r5, %r6;
	mov.u64 	%rd92, %rd38;
	@%p2 bra 	BB42_3;

	mov.u64 	%rd93, 0;
	bra.uni 	BB42_5;

BB42_3:
	mov.b64 	 %rd41, %fd4;
	shl.b64 	%rd42, %rd41, 11;
	or.b64  	%rd3, %rd42, -9223372036854775808;
	bfe.u32 	%r21, %r1, 20, 11;
	add.s32 	%r22, %r21, -1024;
	shr.u32 	%r23, %r22, 6;
	sub.s32 	%r25, %r17, %r23;
	mul.wide.s32 	%rd43, %r25, 8;
	mov.u64 	%rd44, __cudart_i2opi_d;
	add.s64 	%rd90, %rd44, %rd43;
	mov.u64 	%rd93, 0;
	mov.u64 	%rd91, %rd38;
	mov.u64 	%rd89, %rd38;
	mov.u32 	%r39, %r5;

BB42_4:
	.pragma "nounroll";
	mov.u32 	%r7, %r39;
	mov.u64 	%rd6, %rd89;
	ld.const.u64 	%rd47, [%rd90];
	// inline asm
	{
	.reg .u32 r0, r1, r2, r3, alo, ahi, blo, bhi, clo, chi;
	mov.b64         {alo,ahi}, %rd47;    
	mov.b64         {blo,bhi}, %rd3;    
	mov.b64         {clo,chi}, %rd93;    
	mad.lo.cc.u32   r0, alo, blo, clo;
	madc.hi.cc.u32  r1, alo, blo, chi;
	madc.hi.u32     r2, alo, bhi,   0;
	mad.lo.cc.u32   r1, alo, bhi,  r1;
	madc.hi.cc.u32  r2, ahi, blo,  r2;
	madc.hi.u32     r3, ahi, bhi,   0;
	mad.lo.cc.u32   r1, ahi, blo,  r1;
	madc.lo.cc.u32  r2, ahi, bhi,  r2;
	addc.u32        r3,  r3,   0;     
	mov.b64         %rd45, {r0,r1};      
	mov.b64         %rd46, {r2,r3};      
	}
	// inline asm
	st.local.u64 	[%rd91], %rd45;
	add.s32 	%r8, %r7, 1;
	sub.s32 	%r26, %r8, %r5;
	mul.wide.s32 	%rd50, %r26, 8;
	add.s64 	%rd91, %rd38, %rd50;
	add.s64 	%rd90, %rd90, 8;
	add.s64 	%rd92, %rd6, 8;
	setp.lt.s32	%p3, %r8, %r6;
	mov.u64 	%rd13, %rd92;
	mov.u64 	%rd93, %rd46;
	mov.u64 	%rd89, %rd13;
	mov.u32 	%r39, %r8;
	@%p3 bra 	BB42_4;

BB42_5:
	st.local.u64 	[%rd92], %rd93;
	ld.local.u64 	%rd94, [%rd38+16];
	ld.local.u64 	%rd95, [%rd38+24];
	and.b32  	%r9, %r3, 63;
	setp.eq.s32	%p4, %r9, 0;
	@%p4 bra 	BB42_7;

	mov.u32 	%r27, 64;
	sub.s32 	%r28, %r27, %r9;
	shl.b64 	%rd51, %rd95, %r9;
	shr.u64 	%rd52, %rd94, %r28;
	or.b64  	%rd95, %rd51, %rd52;
	shl.b64 	%rd53, %rd94, %r9;
	ld.local.u64 	%rd54, [%rd38+8];
	shr.u64 	%rd55, %rd54, %r28;
	or.b64  	%rd94, %rd55, %rd53;

BB42_7:
	cvta.to.local.u64 	%rd56, %rd37;
	shr.u64 	%rd57, %rd95, 62;
	cvt.u32.u64	%r29, %rd57;
	shr.u64 	%rd58, %rd94, 62;
	shl.b64 	%rd59, %rd95, 2;
	or.b64  	%rd97, %rd59, %rd58;
	shl.b64 	%rd96, %rd94, 2;
	shr.u64 	%rd60, %rd95, 61;
	cvt.u32.u64	%r30, %rd60;
	and.b32  	%r31, %r30, 1;
	add.s32 	%r32, %r31, %r29;
	neg.s32 	%r33, %r32;
	setp.eq.s32	%p5, %r40, 0;
	selp.b32	%r34, %r32, %r33, %p5;
	st.local.u32 	[%rd56], %r34;
	setp.eq.s32	%p6, %r31, 0;
	@%p6 bra 	BB42_9;

	mov.u64 	%rd64, 0;
	// inline asm
	{
	.reg .u32 r0, r1, r2, r3, a0, a1, a2, a3, b0, b1, b2, b3;
	mov.b64         {a0,a1}, %rd64;
	mov.b64         {a2,a3}, %rd64;
	mov.b64         {b0,b1}, %rd96;
	mov.b64         {b2,b3}, %rd97;
	sub.cc.u32      r0, a0, b0; 
	subc.cc.u32     r1, a1, b1; 
	subc.cc.u32     r2, a2, b2; 
	subc.u32        r3, a3, b3; 
	mov.b64         %rd61, {r0,r1};
	mov.b64         %rd62, {r2,r3};
	}
	// inline asm
	xor.b32  	%r40, %r40, -2147483648;
	mov.u64 	%rd97, %rd62;
	mov.u64 	%rd96, %rd61;

BB42_9:
	clz.b64 	%r41, %rd97;
	setp.eq.s32	%p7, %r41, 0;
	@%p7 bra 	BB42_11;

	shl.b64 	%rd67, %rd97, %r41;
	mov.u32 	%r35, 64;
	sub.s32 	%r36, %r35, %r41;
	shr.u64 	%rd68, %rd96, %r36;
	or.b64  	%rd97, %rd68, %rd67;

BB42_11:
	mov.u64 	%rd72, -3958705157555305931;
	// inline asm
	{
	.reg .u32 r0, r1, r2, r3, alo, ahi, blo, bhi;
	mov.b64         {alo,ahi}, %rd97;   
	mov.b64         {blo,bhi}, %rd72;   
	mul.lo.u32      r0, alo, blo;    
	mul.hi.u32      r1, alo, blo;    
	mad.lo.cc.u32   r1, alo, bhi, r1;
	madc.hi.u32     r2, alo, bhi,  0;
	mad.lo.cc.u32   r1, ahi, blo, r1;
	madc.hi.cc.u32  r2, ahi, blo, r2;
	madc.hi.u32     r3, ahi, bhi,  0;
	mad.lo.cc.u32   r2, ahi, bhi, r2;
	addc.u32        r3, r3,  0;      
	mov.b64         %rd69, {r0,r1};     
	mov.b64         %rd70, {r2,r3};     
	}
	// inline asm
	setp.lt.s64	%p8, %rd70, 1;
	mov.u64 	%rd98, %rd70;
	@%p8 bra 	BB42_13;

	// inline asm
	{
	.reg .u32 r0, r1, r2, r3, a0, a1, a2, a3, b0, b1, b2, b3;
	mov.b64         {a0,a1}, %rd69;
	mov.b64         {a2,a3}, %rd70;
	mov.b64         {b0,b1}, %rd69;
	mov.b64         {b2,b3}, %rd70;
	add.cc.u32      r0, a0, b0; 
	addc.cc.u32     r1, a1, b1; 
	addc.cc.u32     r2, a2, b2; 
	addc.u32        r3, a3, b3; 
	mov.b64         %rd73, {r0,r1};
	mov.b64         %rd74, {r2,r3};
	}
	// inline asm
	add.s32 	%r41, %r41, 1;
	mov.u64 	%rd98, %rd74;

BB42_13:
	cvt.u64.u32	%rd79, %r40;
	shl.b64 	%rd80, %rd79, 32;
	mov.u32 	%r37, 1022;
	sub.s32 	%r38, %r37, %r41;
	cvt.u64.u32	%rd81, %r38;
	shl.b64 	%rd82, %rd81, 52;
	add.s64 	%rd83, %rd98, 1;
	shr.u64 	%rd84, %rd83, 10;
	add.s64 	%rd85, %rd84, 1;
	shr.u64 	%rd86, %rd85, 1;
	add.s64 	%rd87, %rd86, %rd82;
	or.b64  	%rd88, %rd87, %rd80;
	mov.b64 	 %fd4, %rd88;

BB42_14:
	st.param.f64	[funj_retval0+0], %fd4;
	ret;
}


