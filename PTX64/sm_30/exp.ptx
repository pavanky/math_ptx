//
// Generated by NVIDIA NVVM Compiler
// Compiler built on Thu Jul 31 22:29:38 2014 (1406860178)
// Cuda compilation tools, release 6.5, V6.5.14
//

.version 4.1
.target sm_30
.address_size 64

.func  (.param .b64 funj_retval0) __internal_accurate_pow
(
	.param .b64 __internal_accurate_pow_param_0,
	.param .b64 __internal_accurate_pow_param_1
)
;
.const .align 4 .b8 __cudart_i2opi_f[24] = {65, 144, 67, 60, 153, 149, 98, 219, 192, 221, 52, 245, 209, 87, 39, 252, 41, 21, 68, 78, 110, 131, 249, 162};

.visible .func  (.param .b32 funj_retval0) ___exps(
	.param .b32 ___exps_param_0
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<15>;


	ld.param.f32 	%f3, [___exps_param_0];
	mul.f32 	%f4, %f3, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f5, %f4;
	mov.f32 	%f6, 0fBF317200;
	fma.rn.f32 	%f7, %f5, %f6, %f3;
	mov.f32 	%f8, 0fB5BFBE8E;
	fma.rn.f32 	%f9, %f5, %f8, %f7;
	mul.f32 	%f2, %f9, 0f3FB8AA3B;
	// inline asm
	ex2.approx.ftz.f32 %f1,%f2;
	// inline asm
	add.f32 	%f10, %f5, 0f00000000;
	ex2.approx.f32 	%f11, %f10;
	mul.f32 	%f12, %f1, %f11;
	setp.lt.f32	%p1, %f3, 0fC2D20000;
	selp.f32	%f13, 0f00000000, %f12, %p1;
	setp.gt.f32	%p2, %f3, 0f42D20000;
	selp.f32	%f14, 0f7F800000, %f13, %p2;
	st.param.f32	[funj_retval0+0], %f14;
	ret;
}

.visible .func  (.param .b32 funj_retval0) ___expi(
	.param .b32 ___expi_param_0
)
{
	.reg .pred 	%p<3>;
	.reg .s32 	%r<3>;
	.reg .f32 	%f<15>;


	ld.param.u32 	%r1, [___expi_param_0];
	cvt.rn.f32.s32	%f3, %r1;
	mul.f32 	%f4, %f3, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f5, %f4;
	mov.f32 	%f6, 0fBF317200;
	fma.rn.f32 	%f7, %f5, %f6, %f3;
	mov.f32 	%f8, 0fB5BFBE8E;
	fma.rn.f32 	%f9, %f5, %f8, %f7;
	mul.f32 	%f2, %f9, 0f3FB8AA3B;
	// inline asm
	ex2.approx.ftz.f32 %f1,%f2;
	// inline asm
	add.f32 	%f10, %f5, 0f00000000;
	ex2.approx.f32 	%f11, %f10;
	mul.f32 	%f12, %f1, %f11;
	setp.lt.f32	%p1, %f3, 0fC2D20000;
	selp.f32	%f13, 0f00000000, %f12, %p1;
	setp.gt.f32	%p2, %f3, 0f42D20000;
	selp.f32	%f14, 0f7F800000, %f13, %p2;
	cvt.rzi.s32.f32	%r2, %f14;
	st.param.b32	[funj_retval0+0], %r2;
	ret;
}

.visible .func  (.param .b32 funj_retval0) ___expu(
	.param .b32 ___expu_param_0
)
{
	.reg .pred 	%p<3>;
	.reg .s32 	%r<3>;
	.reg .f32 	%f<15>;


	ld.param.u32 	%r1, [___expu_param_0];
	cvt.rn.f32.u32	%f3, %r1;
	mul.f32 	%f4, %f3, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f5, %f4;
	mov.f32 	%f6, 0fBF317200;
	fma.rn.f32 	%f7, %f5, %f6, %f3;
	mov.f32 	%f8, 0fB5BFBE8E;
	fma.rn.f32 	%f9, %f5, %f8, %f7;
	mul.f32 	%f2, %f9, 0f3FB8AA3B;
	// inline asm
	ex2.approx.ftz.f32 %f1,%f2;
	// inline asm
	add.f32 	%f10, %f5, 0f00000000;
	ex2.approx.f32 	%f11, %f10;
	mul.f32 	%f12, %f1, %f11;
	setp.lt.f32	%p1, %f3, 0fC2D20000;
	selp.f32	%f13, 0f00000000, %f12, %p1;
	setp.gt.f32	%p2, %f3, 0f42D20000;
	selp.f32	%f14, 0f7F800000, %f13, %p2;
	cvt.rzi.u32.f32	%r2, %f14;
	st.param.b32	[funj_retval0+0], %r2;
	ret;
}

.visible .func  (.param .b32 funj_retval0) ___expj(
	.param .b32 ___expj_param_0
)
{
	.reg .pred 	%p<3>;
	.reg .s16 	%rs<2>;
	.reg .s32 	%r<3>;
	.reg .f32 	%f<15>;


	ld.param.s8 	%rs1, [___expj_param_0];
	cvt.rn.f32.s16	%f3, %rs1;
	mul.f32 	%f4, %f3, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f5, %f4;
	mov.f32 	%f6, 0fBF317200;
	fma.rn.f32 	%f7, %f5, %f6, %f3;
	mov.f32 	%f8, 0fB5BFBE8E;
	fma.rn.f32 	%f9, %f5, %f8, %f7;
	mul.f32 	%f2, %f9, 0f3FB8AA3B;
	// inline asm
	ex2.approx.ftz.f32 %f1,%f2;
	// inline asm
	add.f32 	%f10, %f5, 0f00000000;
	ex2.approx.f32 	%f11, %f10;
	mul.f32 	%f12, %f1, %f11;
	setp.lt.s16	%p1, %rs1, -105;
	selp.f32	%f13, 0f00000000, %f12, %p1;
	setp.gt.s16	%p2, %rs1, 105;
	selp.f32	%f14, 0f7F800000, %f13, %p2;
	cvt.rzi.s32.f32	%r1, %f14;
	cvt.s32.s8 	%r2, %r1;
	st.param.b32	[funj_retval0+0], %r2;
	ret;
}

.visible .func  (.param .b32 funj_retval0) ___expv(
	.param .b32 ___expv_param_0
)
{
	.reg .pred 	%p<2>;
	.reg .s16 	%rs<2>;
	.reg .s32 	%r<3>;
	.reg .f32 	%f<14>;


	ld.param.u8 	%rs1, [___expv_param_0];
	cvt.rn.f32.u16	%f3, %rs1;
	mul.f32 	%f4, %f3, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f5, %f4;
	mov.f32 	%f6, 0fBF317200;
	fma.rn.f32 	%f7, %f5, %f6, %f3;
	mov.f32 	%f8, 0fB5BFBE8E;
	fma.rn.f32 	%f9, %f5, %f8, %f7;
	mul.f32 	%f2, %f9, 0f3FB8AA3B;
	// inline asm
	ex2.approx.ftz.f32 %f1,%f2;
	// inline asm
	add.f32 	%f10, %f5, 0f00000000;
	ex2.approx.f32 	%f11, %f10;
	mul.f32 	%f12, %f1, %f11;
	setp.gt.u16	%p1, %rs1, 105;
	selp.f32	%f13, 0f7F800000, %f12, %p1;
	cvt.rzi.u32.f32	%r1, %f13;
	and.b32  	%r2, %r1, 255;
	st.param.b32	[funj_retval0+0], %r2;
	ret;
}

.visible .func  (.param .b64 funj_retval0) ___expd(
	.param .b64 ___expd_param_0
)
{
	.reg .pred 	%p<5>;
	.reg .s32 	%r<15>;
	.reg .f32 	%f<3>;
	.reg .f64 	%fd<46>;


	ld.param.f64 	%fd7, [___expd_param_0];
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r1}, %fd7;
	}
	mov.b32 	 %f1, %r1;
	abs.f32 	%f2, %f1;
	setp.lt.f32	%p1, %f2, 0f40874911;
	@%p1 bra 	BB5_2;

	setp.lt.s32	%p2, %r1, 0;
	selp.f64	%fd8, 0d0000000000000000, 0d7FF0000000000000, %p2;
	abs.f64 	%fd9, %fd7;
	setp.gtu.f64	%p3, %fd9, 0d7FF0000000000000;
	add.f64 	%fd10, %fd7, %fd7;
	selp.f64	%fd45, %fd10, %fd8, %p3;
	bra.uni 	BB5_6;

BB5_2:
	mov.f64 	%fd11, 0d3FF71547652B82FE;
	mul.rn.f64 	%fd12, %fd7, %fd11;
	mov.f64 	%fd13, 0d4338000000000000;
	add.rn.f64 	%fd14, %fd12, %fd13;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r2, %temp}, %fd14;
	}
	mov.f64 	%fd15, 0dC338000000000000;
	add.rn.f64 	%fd16, %fd14, %fd15;
	mov.f64 	%fd17, 0dBFE62E42FEFA39EF;
	fma.rn.f64 	%fd18, %fd16, %fd17, %fd7;
	mov.f64 	%fd19, 0dBC7ABC9E3B39803F;
	fma.rn.f64 	%fd20, %fd16, %fd19, %fd18;
	mov.f64 	%fd21, 0d3E928AF3FCA213EA;
	mov.f64 	%fd22, 0d3E5ADE1569CE2BDF;
	fma.rn.f64 	%fd23, %fd22, %fd20, %fd21;
	mov.f64 	%fd24, 0d3EC71DEE62401315;
	fma.rn.f64 	%fd25, %fd23, %fd20, %fd24;
	mov.f64 	%fd26, 0d3EFA01997C89EB71;
	fma.rn.f64 	%fd27, %fd25, %fd20, %fd26;
	mov.f64 	%fd28, 0d3F2A01A014761F65;
	fma.rn.f64 	%fd29, %fd27, %fd20, %fd28;
	mov.f64 	%fd30, 0d3F56C16C1852B7AF;
	fma.rn.f64 	%fd31, %fd29, %fd20, %fd30;
	mov.f64 	%fd32, 0d3F81111111122322;
	fma.rn.f64 	%fd33, %fd31, %fd20, %fd32;
	mov.f64 	%fd34, 0d3FA55555555502A1;
	fma.rn.f64 	%fd35, %fd33, %fd20, %fd34;
	mov.f64 	%fd36, 0d3FC5555555555511;
	fma.rn.f64 	%fd37, %fd35, %fd20, %fd36;
	mov.f64 	%fd38, 0d3FE000000000000B;
	fma.rn.f64 	%fd39, %fd37, %fd20, %fd38;
	mov.f64 	%fd40, 0d3FF0000000000000;
	fma.rn.f64 	%fd41, %fd39, %fd20, %fd40;
	fma.rn.f64 	%fd44, %fd41, %fd20, %fd40;
	abs.s32 	%r6, %r2;
	setp.lt.s32	%p4, %r6, 1023;
	@%p4 bra 	BB5_4;

	add.s32 	%r7, %r2, 2046;
	shl.b32 	%r8, %r7, 19;
	and.b32  	%r9, %r8, -1048576;
	shl.b32 	%r10, %r7, 20;
	sub.s32 	%r14, %r10, %r9;
	mov.u32 	%r11, 0;
	mov.b64 	%fd42, {%r11, %r9};
	mul.f64 	%fd44, %fd44, %fd42;
	bra.uni 	BB5_5;

BB5_4:
	shl.b32 	%r12, %r2, 20;
	add.s32 	%r14, %r12, 1072693248;

BB5_5:
	mov.u32 	%r13, 0;
	mov.b64 	%fd43, {%r13, %r14};
	mul.f64 	%fd45, %fd44, %fd43;

BB5_6:
	st.param.f64	[funj_retval0+0], %fd45;
	ret;
}

.visible .func  (.param .b32 funj_retval0) ___expm1s(
	.param .b32 ___expm1s_param_0
)
{
	.reg .pred 	%p<6>;
	.reg .f32 	%f<33>;


	ld.param.f32 	%f1, [___expm1s_param_0];
	mul.f32 	%f2, %f1, 0f3FB8AA3B;
	cvt.rni.f32.f32	%f3, %f2;
	abs.f32 	%f4, %f1;
	setp.lt.f32	%p1, %f4, 0f3ED1EB85;
	selp.f32	%f5, 0f00000000, %f3, %p1;
	neg.f32 	%f6, %f5;
	mov.f32 	%f7, 0f3F317200;
	fma.rn.f32 	%f8, %f6, %f7, %f1;
	mov.f32 	%f9, 0f35BFBE8E;
	fma.rn.f32 	%f10, %f6, %f9, %f8;
	setp.eq.f32	%p2, %f5, 0f43000000;
	add.f32 	%f11, %f5, 0fBF800000;
	selp.f32	%f12, %f11, %f5, %p2;
	mov.f32 	%f13, 0f3C095663;
	mov.f32 	%f14, 0f3AB5EBE6;
	fma.rn.f32 	%f15, %f14, %f10, %f13;
	mov.f32 	%f16, 0f3D2AABE3;
	fma.rn.f32 	%f17, %f15, %f10, %f16;
	mov.f32 	%f18, 0f3E2AA9F6;
	fma.rn.f32 	%f19, %f17, %f10, %f18;
	mov.f32 	%f20, 0f3EFFFFFE;
	fma.rn.f32 	%f21, %f19, %f10, %f20;
	mul.f32 	%f22, %f21, %f10;
	fma.rn.f32 	%f23, %f22, %f10, %f10;
	ex2.approx.f32 	%f24, %f12;
	add.f32 	%f25, %f24, 0fBF800000;
	fma.rn.f32 	%f26, %f23, %f24, %f25;
	add.f32 	%f27, %f26, %f26;
	selp.f32	%f28, %f27, %f26, %p2;
	setp.gt.f32	%p3, %f12, 0f43000000;
	selp.f32	%f29, 0f7F800000, %f28, %p3;
	setp.lt.f32	%p4, %f12, 0fC1C80000;
	selp.f32	%f30, 0fBF800000, %f29, %p4;
	setp.eq.f32	%p5, %f1, 0f00000000;
	add.f32 	%f31, %f1, %f1;
	selp.f32	%f32, %f31, %f30, %p5;
	st.param.f32	[funj_retval0+0], %f32;
	ret;
}

.visible .func  (.param .b32 funj_retval0) ___expm1i(
	.param .b32 ___expm1i_param_0
)
{
	.reg .pred 	%p<6>;
	.reg .s32 	%r<3>;
	.reg .f32 	%f<33>;


	ld.param.u32 	%r1, [___expm1i_param_0];
	cvt.rn.f32.s32	%f1, %r1;
	mul.f32 	%f2, %f1, 0f3FB8AA3B;
	cvt.rni.f32.f32	%f3, %f2;
	abs.f32 	%f4, %f1;
	setp.lt.f32	%p1, %f4, 0f3ED1EB85;
	selp.f32	%f5, 0f00000000, %f3, %p1;
	neg.f32 	%f6, %f5;
	mov.f32 	%f7, 0f3F317200;
	fma.rn.f32 	%f8, %f6, %f7, %f1;
	mov.f32 	%f9, 0f35BFBE8E;
	fma.rn.f32 	%f10, %f6, %f9, %f8;
	setp.eq.f32	%p2, %f5, 0f43000000;
	add.f32 	%f11, %f5, 0fBF800000;
	selp.f32	%f12, %f11, %f5, %p2;
	mov.f32 	%f13, 0f3C095663;
	mov.f32 	%f14, 0f3AB5EBE6;
	fma.rn.f32 	%f15, %f14, %f10, %f13;
	mov.f32 	%f16, 0f3D2AABE3;
	fma.rn.f32 	%f17, %f15, %f10, %f16;
	mov.f32 	%f18, 0f3E2AA9F6;
	fma.rn.f32 	%f19, %f17, %f10, %f18;
	mov.f32 	%f20, 0f3EFFFFFE;
	fma.rn.f32 	%f21, %f19, %f10, %f20;
	mul.f32 	%f22, %f21, %f10;
	fma.rn.f32 	%f23, %f22, %f10, %f10;
	ex2.approx.f32 	%f24, %f12;
	add.f32 	%f25, %f24, 0fBF800000;
	fma.rn.f32 	%f26, %f23, %f24, %f25;
	add.f32 	%f27, %f26, %f26;
	selp.f32	%f28, %f27, %f26, %p2;
	setp.gt.f32	%p3, %f12, 0f43000000;
	selp.f32	%f29, 0f7F800000, %f28, %p3;
	setp.lt.f32	%p4, %f12, 0fC1C80000;
	selp.f32	%f30, 0fBF800000, %f29, %p4;
	setp.eq.f32	%p5, %f1, 0f00000000;
	add.f32 	%f31, %f1, %f1;
	selp.f32	%f32, %f31, %f30, %p5;
	cvt.rzi.s32.f32	%r2, %f32;
	st.param.b32	[funj_retval0+0], %r2;
	ret;
}

.visible .func  (.param .b32 funj_retval0) ___expm1u(
	.param .b32 ___expm1u_param_0
)
{
	.reg .pred 	%p<6>;
	.reg .s32 	%r<3>;
	.reg .f32 	%f<33>;


	ld.param.u32 	%r1, [___expm1u_param_0];
	cvt.rn.f32.u32	%f1, %r1;
	mul.f32 	%f2, %f1, 0f3FB8AA3B;
	cvt.rni.f32.f32	%f3, %f2;
	abs.f32 	%f4, %f1;
	setp.lt.f32	%p1, %f4, 0f3ED1EB85;
	selp.f32	%f5, 0f00000000, %f3, %p1;
	neg.f32 	%f6, %f5;
	mov.f32 	%f7, 0f3F317200;
	fma.rn.f32 	%f8, %f6, %f7, %f1;
	mov.f32 	%f9, 0f35BFBE8E;
	fma.rn.f32 	%f10, %f6, %f9, %f8;
	setp.eq.f32	%p2, %f5, 0f43000000;
	add.f32 	%f11, %f5, 0fBF800000;
	selp.f32	%f12, %f11, %f5, %p2;
	mov.f32 	%f13, 0f3C095663;
	mov.f32 	%f14, 0f3AB5EBE6;
	fma.rn.f32 	%f15, %f14, %f10, %f13;
	mov.f32 	%f16, 0f3D2AABE3;
	fma.rn.f32 	%f17, %f15, %f10, %f16;
	mov.f32 	%f18, 0f3E2AA9F6;
	fma.rn.f32 	%f19, %f17, %f10, %f18;
	mov.f32 	%f20, 0f3EFFFFFE;
	fma.rn.f32 	%f21, %f19, %f10, %f20;
	mul.f32 	%f22, %f21, %f10;
	fma.rn.f32 	%f23, %f22, %f10, %f10;
	ex2.approx.f32 	%f24, %f12;
	add.f32 	%f25, %f24, 0fBF800000;
	fma.rn.f32 	%f26, %f23, %f24, %f25;
	add.f32 	%f27, %f26, %f26;
	selp.f32	%f28, %f27, %f26, %p2;
	setp.gt.f32	%p3, %f12, 0f43000000;
	selp.f32	%f29, 0f7F800000, %f28, %p3;
	setp.lt.f32	%p4, %f12, 0fC1C80000;
	selp.f32	%f30, 0fBF800000, %f29, %p4;
	setp.eq.f32	%p5, %f1, 0f00000000;
	add.f32 	%f31, %f1, %f1;
	selp.f32	%f32, %f31, %f30, %p5;
	cvt.rzi.u32.f32	%r2, %f32;
	st.param.b32	[funj_retval0+0], %r2;
	ret;
}

.visible .func  (.param .b32 funj_retval0) ___expm1j(
	.param .b32 ___expm1j_param_0
)
{
	.reg .pred 	%p<6>;
	.reg .s16 	%rs<3>;
	.reg .s32 	%r<3>;
	.reg .f32 	%f<33>;


	ld.param.s8 	%rs1, [___expm1j_param_0];
	cvt.rn.f32.s16	%f1, %rs1;
	mul.f32 	%f2, %f1, 0f3FB8AA3B;
	cvt.rni.f32.f32	%f3, %f2;
	abs.f32 	%f4, %f1;
	setp.lt.f32	%p1, %f4, 0f3ED1EB85;
	selp.f32	%f5, 0f00000000, %f3, %p1;
	neg.f32 	%f6, %f5;
	mov.f32 	%f7, 0f3F317200;
	fma.rn.f32 	%f8, %f6, %f7, %f1;
	mov.f32 	%f9, 0f35BFBE8E;
	fma.rn.f32 	%f10, %f6, %f9, %f8;
	setp.eq.f32	%p2, %f5, 0f43000000;
	add.f32 	%f11, %f5, 0fBF800000;
	selp.f32	%f12, %f11, %f5, %p2;
	mov.f32 	%f13, 0f3C095663;
	mov.f32 	%f14, 0f3AB5EBE6;
	fma.rn.f32 	%f15, %f14, %f10, %f13;
	mov.f32 	%f16, 0f3D2AABE3;
	fma.rn.f32 	%f17, %f15, %f10, %f16;
	mov.f32 	%f18, 0f3E2AA9F6;
	fma.rn.f32 	%f19, %f17, %f10, %f18;
	mov.f32 	%f20, 0f3EFFFFFE;
	fma.rn.f32 	%f21, %f19, %f10, %f20;
	mul.f32 	%f22, %f21, %f10;
	fma.rn.f32 	%f23, %f22, %f10, %f10;
	ex2.approx.f32 	%f24, %f12;
	add.f32 	%f25, %f24, 0fBF800000;
	fma.rn.f32 	%f26, %f23, %f24, %f25;
	add.f32 	%f27, %f26, %f26;
	selp.f32	%f28, %f27, %f26, %p2;
	setp.gt.f32	%p3, %f12, 0f43000000;
	selp.f32	%f29, 0f7F800000, %f28, %p3;
	setp.lt.f32	%p4, %f12, 0fC1C80000;
	selp.f32	%f30, 0fBF800000, %f29, %p4;
	and.b16  	%rs2, %rs1, 255;
	setp.eq.s16	%p5, %rs2, 0;
	add.f32 	%f31, %f1, %f1;
	selp.f32	%f32, %f31, %f30, %p5;
	cvt.rzi.s32.f32	%r1, %f32;
	cvt.s32.s8 	%r2, %r1;
	st.param.b32	[funj_retval0+0], %r2;
	ret;
}

.visible .func  (.param .b32 funj_retval0) ___expm1v(
	.param .b32 ___expm1v_param_0
)
{
	.reg .pred 	%p<6>;
	.reg .s16 	%rs<2>;
	.reg .s32 	%r<3>;
	.reg .f32 	%f<33>;


	ld.param.u8 	%rs1, [___expm1v_param_0];
	cvt.rn.f32.u16	%f1, %rs1;
	mul.f32 	%f2, %f1, 0f3FB8AA3B;
	cvt.rni.f32.f32	%f3, %f2;
	abs.f32 	%f4, %f1;
	setp.lt.f32	%p1, %f4, 0f3ED1EB85;
	selp.f32	%f5, 0f00000000, %f3, %p1;
	neg.f32 	%f6, %f5;
	mov.f32 	%f7, 0f3F317200;
	fma.rn.f32 	%f8, %f6, %f7, %f1;
	mov.f32 	%f9, 0f35BFBE8E;
	fma.rn.f32 	%f10, %f6, %f9, %f8;
	setp.eq.f32	%p2, %f5, 0f43000000;
	add.f32 	%f11, %f5, 0fBF800000;
	selp.f32	%f12, %f11, %f5, %p2;
	mov.f32 	%f13, 0f3C095663;
	mov.f32 	%f14, 0f3AB5EBE6;
	fma.rn.f32 	%f15, %f14, %f10, %f13;
	mov.f32 	%f16, 0f3D2AABE3;
	fma.rn.f32 	%f17, %f15, %f10, %f16;
	mov.f32 	%f18, 0f3E2AA9F6;
	fma.rn.f32 	%f19, %f17, %f10, %f18;
	mov.f32 	%f20, 0f3EFFFFFE;
	fma.rn.f32 	%f21, %f19, %f10, %f20;
	mul.f32 	%f22, %f21, %f10;
	fma.rn.f32 	%f23, %f22, %f10, %f10;
	ex2.approx.f32 	%f24, %f12;
	add.f32 	%f25, %f24, 0fBF800000;
	fma.rn.f32 	%f26, %f23, %f24, %f25;
	add.f32 	%f27, %f26, %f26;
	selp.f32	%f28, %f27, %f26, %p2;
	setp.gt.f32	%p3, %f12, 0f43000000;
	selp.f32	%f29, 0f7F800000, %f28, %p3;
	setp.lt.f32	%p4, %f12, 0fC1C80000;
	selp.f32	%f30, 0fBF800000, %f29, %p4;
	setp.eq.s16	%p5, %rs1, 0;
	add.f32 	%f31, %f1, %f1;
	selp.f32	%f32, %f31, %f30, %p5;
	cvt.rzi.u32.f32	%r1, %f32;
	and.b32  	%r2, %r1, 255;
	st.param.b32	[funj_retval0+0], %r2;
	ret;
}

.visible .func  (.param .b64 funj_retval0) ___expm1d(
	.param .b64 ___expm1d_param_0
)
{
	.reg .pred 	%p<9>;
	.reg .s32 	%r<11>;
	.reg .f64 	%fd<49>;


	ld.param.f64 	%fd4, [___expm1d_param_0];
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r1}, %fd4;
	}
	setp.lt.u32	%p1, %r1, 1082535491;
	setp.lt.s32	%p2, %r1, -1068859392;
	or.pred  	%p3, %p1, %p2;
	@%p3 bra 	BB11_2;

	setp.lt.s32	%p4, %r1, 0;
	selp.f64	%fd5, 0dBFF0000000000000, 0d7FF0000000000000, %p4;
	abs.f64 	%fd6, %fd4;
	setp.gtu.f64	%p5, %fd6, 0d7FF0000000000000;
	add.f64 	%fd7, %fd4, %fd4;
	selp.f64	%fd48, %fd7, %fd5, %p5;
	bra.uni 	BB11_3;

BB11_2:
	mov.f64 	%fd8, 0d3FF71547652B82FE;
	mul.rn.f64 	%fd9, %fd4, %fd8;
	mov.f64 	%fd10, 0d4338000000000000;
	add.rn.f64 	%fd11, %fd9, %fd10;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r2, %temp}, %fd11;
	}
	mov.f64 	%fd12, 0dC338000000000000;
	add.rn.f64 	%fd13, %fd11, %fd12;
	mov.f64 	%fd14, 0dBFE62E42FEFA39EF;
	fma.rn.f64 	%fd15, %fd13, %fd14, %fd4;
	mov.f64 	%fd16, 0dBC7ABC9E3B39803F;
	fma.rn.f64 	%fd17, %fd13, %fd16, %fd15;
	add.s32 	%r3, %r1, %r1;
	setp.lt.u32	%p6, %r3, 2142496327;
	selp.b32	%r4, 0, %r2, %p6;
	mov.u32 	%r5, 0;
	selp.f64	%fd18, %fd4, %fd17, %p6;
	mov.f64 	%fd19, 0d3E5AF86D8EBD13CD;
	mov.f64 	%fd20, 0d3E21F4076ACD15B6;
	fma.rn.f64 	%fd21, %fd20, %fd18, %fd19;
	mov.f64 	%fd22, 0d3E927E5092BA033D;
	fma.rn.f64 	%fd23, %fd21, %fd18, %fd22;
	mov.f64 	%fd24, 0d3EC71DDE6C5F9DA1;
	fma.rn.f64 	%fd25, %fd23, %fd18, %fd24;
	mov.f64 	%fd26, 0d3EFA01A018D034E6;
	fma.rn.f64 	%fd27, %fd25, %fd18, %fd26;
	mov.f64 	%fd28, 0d3F2A01A01B3B6940;
	fma.rn.f64 	%fd29, %fd27, %fd18, %fd28;
	mov.f64 	%fd30, 0d3F56C16C16C1B5DD;
	fma.rn.f64 	%fd31, %fd29, %fd18, %fd30;
	mov.f64 	%fd32, 0d3F8111111110F74D;
	fma.rn.f64 	%fd33, %fd31, %fd18, %fd32;
	mov.f64 	%fd34, 0d3FA555555555554D;
	fma.rn.f64 	%fd35, %fd33, %fd18, %fd34;
	mov.f64 	%fd36, 0d3FC5555555555557;
	fma.rn.f64 	%fd37, %fd35, %fd18, %fd36;
	mov.f64 	%fd38, 0d3FE0000000000000;
	fma.rn.f64 	%fd39, %fd37, %fd18, %fd38;
	mul.f64 	%fd40, %fd39, %fd18;
	fma.rn.f64 	%fd41, %fd40, %fd18, %fd18;
	setp.eq.s32	%p7, %r4, 1024;
	selp.b32	%r6, -1, 0, %p7;
	add.s32 	%r7, %r6, %r4;
	shl.b32 	%r8, %r7, 20;
	add.s32 	%r9, %r8, 1072693248;
	mov.u32 	%r10, 1072693248;
	mov.b64 	%fd42, {%r5, %r9};
	mov.b64 	%fd43, {%r5, %r10};
	sub.f64 	%fd44, %fd42, %fd43;
	fma.rn.f64 	%fd45, %fd41, %fd42, %fd44;
	add.f64 	%fd46, %fd45, %fd45;
	selp.f64	%fd47, %fd46, %fd45, %p7;
	setp.eq.s32	%p8, %r3, 0;
	selp.f64	%fd48, %fd18, %fd47, %p8;

BB11_3:
	st.param.f64	[funj_retval0+0], %fd48;
	ret;
}

.visible .func  (.param .b32 funj_retval0) ___erfs(
	.param .b32 ___erfs_param_0
)
{
	.reg .pred 	%p<3>;
	.reg .s32 	%r<6>;
	.reg .f32 	%f<37>;


	ld.param.f32 	%f5, [___erfs_param_0];
	abs.f32 	%f1, %f5;
	setp.ltu.f32	%p1, %f1, 0f3F800000;
	@%p1 bra 	BB12_2;

	mov.f32 	%f8, 0f3A03BB71;
	mov.f32 	%f9, 0fB7B730FB;
	fma.rn.f32 	%f10, %f9, %f1, %f8;
	mov.f32 	%f11, 0fBBACA3B3;
	fma.rn.f32 	%f12, %f10, %f1, %f11;
	mov.f32 	%f13, 0f3D0A7445;
	fma.rn.f32 	%f14, %f12, %f1, %f13;
	mov.f32 	%f15, 0fBE1B3B75;
	fma.rn.f32 	%f16, %f14, %f1, %f15;
	mov.f32 	%f17, 0fBF6B385A;
	fma.rn.f32 	%f18, %f16, %f1, %f17;
	mov.f32 	%f19, 0fBFD0316E;
	fma.rn.f32 	%f20, %f18, %f1, %f19;
	mov.f32 	%f21, 0fBA031CCE;
	fma.rn.f32 	%f7, %f20, %f1, %f21;
	// inline asm
	ex2.approx.ftz.f32 %f6,%f7;
	// inline asm
	mov.f32 	%f22, 0f3F800000;
	sub.f32 	%f23, %f22, %f6;
	mov.b32 	 %r1, %f23;
	setp.ltu.f32	%p2, %f1, 0f407AD445;
	selp.b32	%r2, %r1, 1065353216, %p2;
	mov.b32 	 %r3, %f5;
	and.b32  	%r4, %r3, -2147483648;
	or.b32  	%r5, %r2, %r4;
	mov.b32 	 %f36, %r5;
	bra.uni 	BB12_3;

BB12_2:
	mul.f32 	%f24, %f5, %f5;
	mov.f32 	%f25, 0f3BA0C9F8;
	mov.f32 	%f26, 0fBA1268FB;
	fma.rn.f32 	%f27, %f26, %f24, %f25;
	mov.f32 	%f28, 0fBCDABFD4;
	fma.rn.f32 	%f29, %f27, %f24, %f28;
	mov.f32 	%f30, 0f3DE70331;
	fma.rn.f32 	%f31, %f29, %f24, %f30;
	mov.f32 	%f32, 0fBEC09330;
	fma.rn.f32 	%f33, %f31, %f24, %f32;
	mov.f32 	%f34, 0f3F906EBA;
	fma.rn.f32 	%f35, %f33, %f24, %f34;
	mul.f32 	%f36, %f35, %f5;

BB12_3:
	st.param.f32	[funj_retval0+0], %f36;
	ret;
}

.visible .func  (.param .b32 funj_retval0) ___erfi(
	.param .b32 ___erfi_param_0
)
{
	.reg .pred 	%p<3>;
	.reg .s32 	%r<8>;
	.reg .f32 	%f<37>;


	ld.param.u32 	%r1, [___erfi_param_0];
	cvt.rn.f32.s32	%f1, %r1;
	abs.f32 	%f2, %f1;
	setp.ltu.f32	%p1, %f2, 0f3F800000;
	@%p1 bra 	BB13_2;

	mov.f32 	%f8, 0f3A03BB71;
	mov.f32 	%f9, 0fB7B730FB;
	fma.rn.f32 	%f10, %f9, %f2, %f8;
	mov.f32 	%f11, 0fBBACA3B3;
	fma.rn.f32 	%f12, %f10, %f2, %f11;
	mov.f32 	%f13, 0f3D0A7445;
	fma.rn.f32 	%f14, %f12, %f2, %f13;
	mov.f32 	%f15, 0fBE1B3B75;
	fma.rn.f32 	%f16, %f14, %f2, %f15;
	mov.f32 	%f17, 0fBF6B385A;
	fma.rn.f32 	%f18, %f16, %f2, %f17;
	mov.f32 	%f19, 0fBFD0316E;
	fma.rn.f32 	%f20, %f18, %f2, %f19;
	mov.f32 	%f21, 0fBA031CCE;
	fma.rn.f32 	%f7, %f20, %f2, %f21;
	// inline asm
	ex2.approx.ftz.f32 %f6,%f7;
	// inline asm
	mov.f32 	%f22, 0f3F800000;
	sub.f32 	%f23, %f22, %f6;
	mov.b32 	 %r2, %f23;
	setp.ltu.f32	%p2, %f2, 0f407AD445;
	selp.b32	%r3, %r2, 1065353216, %p2;
	mov.b32 	 %r4, %f1;
	and.b32  	%r5, %r4, -2147483648;
	or.b32  	%r6, %r3, %r5;
	mov.b32 	 %f36, %r6;
	bra.uni 	BB13_3;

BB13_2:
	mul.f32 	%f24, %f1, %f1;
	mov.f32 	%f25, 0f3BA0C9F8;
	mov.f32 	%f26, 0fBA1268FB;
	fma.rn.f32 	%f27, %f26, %f24, %f25;
	mov.f32 	%f28, 0fBCDABFD4;
	fma.rn.f32 	%f29, %f27, %f24, %f28;
	mov.f32 	%f30, 0f3DE70331;
	fma.rn.f32 	%f31, %f29, %f24, %f30;
	mov.f32 	%f32, 0fBEC09330;
	fma.rn.f32 	%f33, %f31, %f24, %f32;
	mov.f32 	%f34, 0f3F906EBA;
	fma.rn.f32 	%f35, %f33, %f24, %f34;
	mul.f32 	%f36, %f35, %f1;

BB13_3:
	cvt.rzi.s32.f32	%r7, %f36;
	st.param.b32	[funj_retval0+0], %r7;
	ret;
}

.visible .func  (.param .b32 funj_retval0) ___erfu(
	.param .b32 ___erfu_param_0
)
{
	.reg .pred 	%p<3>;
	.reg .s32 	%r<8>;
	.reg .f32 	%f<37>;


	ld.param.u32 	%r1, [___erfu_param_0];
	cvt.rn.f32.u32	%f1, %r1;
	abs.f32 	%f2, %f1;
	setp.ltu.f32	%p1, %f2, 0f3F800000;
	@%p1 bra 	BB14_2;

	mov.f32 	%f8, 0f3A03BB71;
	mov.f32 	%f9, 0fB7B730FB;
	fma.rn.f32 	%f10, %f9, %f2, %f8;
	mov.f32 	%f11, 0fBBACA3B3;
	fma.rn.f32 	%f12, %f10, %f2, %f11;
	mov.f32 	%f13, 0f3D0A7445;
	fma.rn.f32 	%f14, %f12, %f2, %f13;
	mov.f32 	%f15, 0fBE1B3B75;
	fma.rn.f32 	%f16, %f14, %f2, %f15;
	mov.f32 	%f17, 0fBF6B385A;
	fma.rn.f32 	%f18, %f16, %f2, %f17;
	mov.f32 	%f19, 0fBFD0316E;
	fma.rn.f32 	%f20, %f18, %f2, %f19;
	mov.f32 	%f21, 0fBA031CCE;
	fma.rn.f32 	%f7, %f20, %f2, %f21;
	// inline asm
	ex2.approx.ftz.f32 %f6,%f7;
	// inline asm
	mov.f32 	%f22, 0f3F800000;
	sub.f32 	%f23, %f22, %f6;
	mov.b32 	 %r2, %f23;
	setp.ltu.f32	%p2, %f2, 0f407AD445;
	selp.b32	%r3, %r2, 1065353216, %p2;
	mov.b32 	 %r4, %f1;
	and.b32  	%r5, %r4, -2147483648;
	or.b32  	%r6, %r3, %r5;
	mov.b32 	 %f36, %r6;
	bra.uni 	BB14_3;

BB14_2:
	mul.f32 	%f24, %f1, %f1;
	mov.f32 	%f25, 0f3BA0C9F8;
	mov.f32 	%f26, 0fBA1268FB;
	fma.rn.f32 	%f27, %f26, %f24, %f25;
	mov.f32 	%f28, 0fBCDABFD4;
	fma.rn.f32 	%f29, %f27, %f24, %f28;
	mov.f32 	%f30, 0f3DE70331;
	fma.rn.f32 	%f31, %f29, %f24, %f30;
	mov.f32 	%f32, 0fBEC09330;
	fma.rn.f32 	%f33, %f31, %f24, %f32;
	mov.f32 	%f34, 0f3F906EBA;
	fma.rn.f32 	%f35, %f33, %f24, %f34;
	mul.f32 	%f36, %f35, %f1;

BB14_3:
	cvt.rzi.u32.f32	%r7, %f36;
	st.param.b32	[funj_retval0+0], %r7;
	ret;
}

.visible .func  (.param .b32 funj_retval0) ___erfj(
	.param .b32 ___erfj_param_0
)
{
	.reg .pred 	%p<3>;
	.reg .s16 	%rs<2>;
	.reg .s32 	%r<8>;
	.reg .f32 	%f<37>;


	ld.param.s8 	%rs1, [___erfj_param_0];
	cvt.rn.f32.s16	%f1, %rs1;
	abs.f32 	%f2, %f1;
	setp.ltu.f32	%p1, %f2, 0f3F800000;
	@%p1 bra 	BB15_2;

	mov.f32 	%f8, 0f3A03BB71;
	mov.f32 	%f9, 0fB7B730FB;
	fma.rn.f32 	%f10, %f9, %f2, %f8;
	mov.f32 	%f11, 0fBBACA3B3;
	fma.rn.f32 	%f12, %f10, %f2, %f11;
	mov.f32 	%f13, 0f3D0A7445;
	fma.rn.f32 	%f14, %f12, %f2, %f13;
	mov.f32 	%f15, 0fBE1B3B75;
	fma.rn.f32 	%f16, %f14, %f2, %f15;
	mov.f32 	%f17, 0fBF6B385A;
	fma.rn.f32 	%f18, %f16, %f2, %f17;
	mov.f32 	%f19, 0fBFD0316E;
	fma.rn.f32 	%f20, %f18, %f2, %f19;
	mov.f32 	%f21, 0fBA031CCE;
	fma.rn.f32 	%f7, %f20, %f2, %f21;
	// inline asm
	ex2.approx.ftz.f32 %f6,%f7;
	// inline asm
	mov.f32 	%f22, 0f3F800000;
	sub.f32 	%f23, %f22, %f6;
	mov.b32 	 %r1, %f23;
	setp.ltu.f32	%p2, %f2, 0f407AD445;
	selp.b32	%r2, %r1, 1065353216, %p2;
	mov.b32 	 %r3, %f1;
	and.b32  	%r4, %r3, -2147483648;
	or.b32  	%r5, %r2, %r4;
	mov.b32 	 %f36, %r5;
	bra.uni 	BB15_3;

BB15_2:
	mul.f32 	%f24, %f1, %f1;
	mov.f32 	%f25, 0f3BA0C9F8;
	mov.f32 	%f26, 0fBA1268FB;
	fma.rn.f32 	%f27, %f26, %f24, %f25;
	mov.f32 	%f28, 0fBCDABFD4;
	fma.rn.f32 	%f29, %f27, %f24, %f28;
	mov.f32 	%f30, 0f3DE70331;
	fma.rn.f32 	%f31, %f29, %f24, %f30;
	mov.f32 	%f32, 0fBEC09330;
	fma.rn.f32 	%f33, %f31, %f24, %f32;
	mov.f32 	%f34, 0f3F906EBA;
	fma.rn.f32 	%f35, %f33, %f24, %f34;
	mul.f32 	%f36, %f35, %f1;

BB15_3:
	cvt.rzi.s32.f32	%r6, %f36;
	cvt.s32.s8 	%r7, %r6;
	st.param.b32	[funj_retval0+0], %r7;
	ret;
}

.visible .func  (.param .b32 funj_retval0) ___erfv(
	.param .b32 ___erfv_param_0
)
{
	.reg .pred 	%p<3>;
	.reg .s16 	%rs<2>;
	.reg .s32 	%r<8>;
	.reg .f32 	%f<37>;


	ld.param.u8 	%rs1, [___erfv_param_0];
	cvt.rn.f32.u16	%f1, %rs1;
	abs.f32 	%f2, %f1;
	setp.ltu.f32	%p1, %f2, 0f3F800000;
	@%p1 bra 	BB16_2;

	mov.f32 	%f8, 0f3A03BB71;
	mov.f32 	%f9, 0fB7B730FB;
	fma.rn.f32 	%f10, %f9, %f2, %f8;
	mov.f32 	%f11, 0fBBACA3B3;
	fma.rn.f32 	%f12, %f10, %f2, %f11;
	mov.f32 	%f13, 0f3D0A7445;
	fma.rn.f32 	%f14, %f12, %f2, %f13;
	mov.f32 	%f15, 0fBE1B3B75;
	fma.rn.f32 	%f16, %f14, %f2, %f15;
	mov.f32 	%f17, 0fBF6B385A;
	fma.rn.f32 	%f18, %f16, %f2, %f17;
	mov.f32 	%f19, 0fBFD0316E;
	fma.rn.f32 	%f20, %f18, %f2, %f19;
	mov.f32 	%f21, 0fBA031CCE;
	fma.rn.f32 	%f7, %f20, %f2, %f21;
	// inline asm
	ex2.approx.ftz.f32 %f6,%f7;
	// inline asm
	mov.f32 	%f22, 0f3F800000;
	sub.f32 	%f23, %f22, %f6;
	mov.b32 	 %r1, %f23;
	setp.ltu.f32	%p2, %f2, 0f407AD445;
	selp.b32	%r2, %r1, 1065353216, %p2;
	mov.b32 	 %r3, %f1;
	and.b32  	%r4, %r3, -2147483648;
	or.b32  	%r5, %r2, %r4;
	mov.b32 	 %f36, %r5;
	bra.uni 	BB16_3;

BB16_2:
	mul.f32 	%f24, %f1, %f1;
	mov.f32 	%f25, 0f3BA0C9F8;
	mov.f32 	%f26, 0fBA1268FB;
	fma.rn.f32 	%f27, %f26, %f24, %f25;
	mov.f32 	%f28, 0fBCDABFD4;
	fma.rn.f32 	%f29, %f27, %f24, %f28;
	mov.f32 	%f30, 0f3DE70331;
	fma.rn.f32 	%f31, %f29, %f24, %f30;
	mov.f32 	%f32, 0fBEC09330;
	fma.rn.f32 	%f33, %f31, %f24, %f32;
	mov.f32 	%f34, 0f3F906EBA;
	fma.rn.f32 	%f35, %f33, %f24, %f34;
	mul.f32 	%f36, %f35, %f1;

BB16_3:
	cvt.rzi.u32.f32	%r6, %f36;
	and.b32  	%r7, %r6, 255;
	st.param.b32	[funj_retval0+0], %r7;
	ret;
}

.visible .func  (.param .b64 funj_retval0) ___erfd(
	.param .b64 ___erfd_param_0
)
{
	.reg .pred 	%p<7>;
	.reg .s32 	%r<17>;
	.reg .f64 	%fd<112>;


	ld.param.f64 	%fd6, [___erfd_param_0];
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r1}, %fd6;
	}
	and.b32  	%r2, %r1, 2147483647;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r3, %temp}, %fd6;
	}
	setp.lt.u32	%p1, %r2, 1072693248;
	@%p1 bra 	BB17_6;

	setp.lt.u32	%p2, %r2, 2146435072;
	@%p2 bra 	BB17_5;

	setp.eq.s32	%p3, %r2, 2146435072;
	setp.eq.s32	%p4, %r3, 0;
	and.pred  	%p5, %p3, %p4;
	@%p5 bra 	BB17_4;

	add.f64 	%fd111, %fd6, %fd6;
	bra.uni 	BB17_7;

BB17_4:
	mov.f64 	%fd7, 0d3FF0000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r4, %temp}, %fd7;
	}
	and.b32  	%r5, %r1, -2147483648;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r6}, %fd7;
	}
	or.b32  	%r7, %r6, %r5;
	mov.b64 	%fd111, {%r4, %r7};
	bra.uni 	BB17_7;

BB17_5:
	mov.b64 	%fd8, {%r3, %r2};
	mov.f64 	%fd9, 0dBCF1384CE38C616A;
	mov.f64 	%fd10, 0d3C8B9C2B870030E8;
	fma.rn.f64 	%fd11, %fd10, %fd8, %fd9;
	mov.f64 	%fd12, 0d3D4458AE9746C2FD;
	fma.rn.f64 	%fd13, %fd11, %fd8, %fd12;
	mov.f64 	%fd14, 0dBD8E4A44D4F1AB56;
	fma.rn.f64 	%fd15, %fd13, %fd8, %fd14;
	mov.f64 	%fd16, 0d3DCFDF15265C58EE;
	fma.rn.f64 	%fd17, %fd15, %fd8, %fd16;
	mov.f64 	%fd18, 0dBE0933832F358D51;
	fma.rn.f64 	%fd19, %fd17, %fd8, %fd18;
	mov.f64 	%fd20, 0d3E3F136D3F719446;
	fma.rn.f64 	%fd21, %fd19, %fd8, %fd20;
	mov.f64 	%fd22, 0dBE6E94C2FE151B3B;
	fma.rn.f64 	%fd23, %fd21, %fd8, %fd22;
	mov.f64 	%fd24, 0d3E985A70310EE0A8;
	fma.rn.f64 	%fd25, %fd23, %fd8, %fd24;
	mov.f64 	%fd26, 0dBEBF944DA1520B74;
	fma.rn.f64 	%fd27, %fd25, %fd8, %fd26;
	mov.f64 	%fd28, 0d3EE09F503825C543;
	fma.rn.f64 	%fd29, %fd27, %fd8, %fd28;
	mov.f64 	%fd30, 0dBEFBEEFE9F949E59;
	fma.rn.f64 	%fd31, %fd29, %fd8, %fd30;
	mov.f64 	%fd32, 0d3F11D785C6E28857;
	fma.rn.f64 	%fd33, %fd31, %fd8, %fd32;
	mov.f64 	%fd34, 0dBF1D866B223048C7;
	fma.rn.f64 	%fd35, %fd33, %fd8, %fd34;
	mov.f64 	%fd36, 0d3EF258F0847E8908;
	fma.rn.f64 	%fd37, %fd35, %fd8, %fd36;
	mov.f64 	%fd38, 0d3F429CFC58DBB776;
	fma.rn.f64 	%fd39, %fd37, %fd8, %fd38;
	mov.f64 	%fd40, 0dBF5BE16D3F71F3C5;
	fma.rn.f64 	%fd41, %fd39, %fd8, %fd40;
	mov.f64 	%fd42, 0d3F2E8BDA60326B1A;
	fma.rn.f64 	%fd43, %fd41, %fd8, %fd42;
	mov.f64 	%fd44, 0d3F938FB20B0988A6;
	fma.rn.f64 	%fd45, %fd43, %fd8, %fd44;
	mov.f64 	%fd46, 0dBFBA4E3A80F64E33;
	fma.rn.f64 	%fd47, %fd45, %fd8, %fd46;
	mov.f64 	%fd48, 0dBFE45F3E88093928;
	fma.rn.f64 	%fd49, %fd47, %fd8, %fd48;
	mov.f64 	%fd50, 0dBFF20DD599CAEEA0;
	fma.rn.f64 	%fd51, %fd49, %fd8, %fd50;
	mov.f64 	%fd52, 0dBE883BE1E31CE133;
	fma.rn.f64 	%fd53, %fd51, %fd8, %fd52;
	mov.f64 	%fd54, 0d3FF71547652B82FE;
	mul.rn.f64 	%fd55, %fd53, %fd54;
	mov.f64 	%fd56, 0d4338000000000000;
	add.rn.f64 	%fd57, %fd55, %fd56;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r8, %temp}, %fd57;
	}
	mov.f64 	%fd58, 0dC338000000000000;
	add.rn.f64 	%fd59, %fd57, %fd58;
	mov.f64 	%fd60, 0dBFE62E42FEFA39EF;
	fma.rn.f64 	%fd61, %fd59, %fd60, %fd53;
	mov.f64 	%fd62, 0d3E928AF3FCA213EA;
	mov.f64 	%fd63, 0d3E5ADE1569CE2BDF;
	fma.rn.f64 	%fd64, %fd63, %fd61, %fd62;
	mov.f64 	%fd65, 0d3EC71DEE62401315;
	fma.rn.f64 	%fd66, %fd64, %fd61, %fd65;
	mov.f64 	%fd67, 0d3EFA01997C89EB71;
	fma.rn.f64 	%fd68, %fd66, %fd61, %fd67;
	mov.f64 	%fd69, 0d3F2A01A014761F65;
	fma.rn.f64 	%fd70, %fd68, %fd61, %fd69;
	mov.f64 	%fd71, 0d3F56C16C1852B7AF;
	fma.rn.f64 	%fd72, %fd70, %fd61, %fd71;
	mov.f64 	%fd73, 0d3F81111111122322;
	fma.rn.f64 	%fd74, %fd72, %fd61, %fd73;
	mov.f64 	%fd75, 0d3FA55555555502A1;
	fma.rn.f64 	%fd76, %fd74, %fd61, %fd75;
	mov.f64 	%fd77, 0d3FC5555555555511;
	fma.rn.f64 	%fd78, %fd76, %fd61, %fd77;
	mov.f64 	%fd79, 0d3FE000000000000B;
	fma.rn.f64 	%fd80, %fd78, %fd61, %fd79;
	mov.f64 	%fd81, 0d3FF0000000000000;
	fma.rn.f64 	%fd82, %fd80, %fd61, %fd81;
	fma.rn.f64 	%fd83, %fd82, %fd61, %fd81;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r9}, %fd83;
	}
	shl.b32 	%r10, %r8, 20;
	add.s32 	%r11, %r9, %r10;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r12, %temp}, %fd83;
	}
	mov.b64 	%fd84, {%r12, %r11};
	setp.gt.u32	%p6, %r2, 1075294207;
	selp.f64	%fd85, 0d0000000000000000, %fd84, %p6;
	sub.f64 	%fd86, %fd81, %fd85;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r13, %temp}, %fd86;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r14}, %fd86;
	}
	and.b32  	%r15, %r1, -2147483648;
	or.b32  	%r16, %r14, %r15;
	mov.b64 	%fd111, {%r13, %r16};
	bra.uni 	BB17_7;

BB17_6:
	mul.f64 	%fd87, %fd6, %fd6;
	mov.f64 	%fd88, 0d3E4D5F4BB7A316F6;
	mov.f64 	%fd89, 0dBE0A83AA3B08FBC2;
	fma.rn.f64 	%fd90, %fd89, %fd87, %fd88;
	mov.f64 	%fd91, 0dBE85BDCE301B3CDF;
	fma.rn.f64 	%fd92, %fd90, %fd87, %fd91;
	mov.f64 	%fd93, 0d3EBB978FADB81BC9;
	fma.rn.f64 	%fd94, %fd92, %fd87, %fd93;
	mov.f64 	%fd95, 0dBEEF4C99D6AE5FB8;
	fma.rn.f64 	%fd96, %fd94, %fd87, %fd95;
	mov.f64 	%fd97, 0d3F1F9A2AF549012E;
	fma.rn.f64 	%fd98, %fd96, %fd87, %fd97;
	mov.f64 	%fd99, 0dBF4C02DAFC636A47;
	fma.rn.f64 	%fd100, %fd98, %fd87, %fd99;
	mov.f64 	%fd101, 0d3F7565BCCF619AC0;
	fma.rn.f64 	%fd102, %fd100, %fd87, %fd101;
	mov.f64 	%fd103, 0dBF9B82CE311E321A;
	fma.rn.f64 	%fd104, %fd102, %fd87, %fd103;
	mov.f64 	%fd105, 0d3FBCE2F21A04075C;
	fma.rn.f64 	%fd106, %fd104, %fd87, %fd105;
	mov.f64 	%fd107, 0dBFD812746B0379B4;
	fma.rn.f64 	%fd108, %fd106, %fd87, %fd107;
	mov.f64 	%fd109, 0d3FF20DD750429B6D;
	fma.rn.f64 	%fd110, %fd108, %fd87, %fd109;
	mul.f64 	%fd111, %fd110, %fd6;

BB17_7:
	st.param.f64	[funj_retval0+0], %fd111;
	ret;
}

.visible .func  (.param .b32 funj_retval0) ___erfcs(
	.param .b32 ___erfcs_param_0
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<63>;


	ld.param.f32 	%f7, [___erfcs_param_0];
	abs.f32 	%f8, %f7;
	add.f32 	%f9, %f8, 0fC0800000;
	mov.f32 	%f10, 0fC0800000;
	add.f32 	%f2, %f8, 0f40800000;
	// inline asm
	rcp.approx.ftz.f32 %f1,%f2;
	// inline asm
	mul.rn.f32 	%f11, %f9, %f1;
	add.f32 	%f12, %f11, 0f3F800000;
	mov.f32 	%f13, 0f3F800000;
	fma.rn.f32 	%f14, %f10, %f12, %f8;
	neg.f32 	%f15, %f11;
	fma.rn.f32 	%f16, %f15, %f8, %f14;
	fma.rn.f32 	%f17, %f1, %f16, %f11;
	mov.f32 	%f18, 0f3BE6E05B;
	mov.f32 	%f19, 0f3A69A091;
	fma.rn.f32 	%f20, %f19, %f17, %f18;
	mov.f32 	%f21, 0fBC81FB4B;
	fma.rn.f32 	%f22, %f20, %f17, %f21;
	mov.f32 	%f23, 0f3D15373B;
	fma.rn.f32 	%f24, %f22, %f17, %f23;
	mov.f32 	%f25, 0fBD887C5A;
	fma.rn.f32 	%f26, %f24, %f17, %f25;
	mov.f32 	%f27, 0f3DC021D5;
	fma.rn.f32 	%f28, %f26, %f17, %f27;
	mov.f32 	%f29, 0fBDCED424;
	fma.rn.f32 	%f30, %f28, %f17, %f29;
	mov.f32 	%f31, 0f3D8B74DE;
	fma.rn.f32 	%f32, %f30, %f17, %f31;
	mov.f32 	%f33, 0f3C7BF170;
	fma.rn.f32 	%f34, %f32, %f17, %f33;
	mov.f32 	%f35, 0fBE0EF8D4;
	fma.rn.f32 	%f36, %f34, %f17, %f35;
	mov.f32 	%f37, 0f3F9DD2C9;
	fma.rn.f32 	%f38, %f36, %f17, %f37;
	mov.f32 	%f39, 0f40000000;
	fma.rn.f32 	%f4, %f39, %f8, %f13;
	// inline asm
	rcp.approx.ftz.f32 %f3,%f4;
	// inline asm
	mul.rn.f32 	%f40, %f38, %f3;
	mul.f32 	%f41, %f40, 0fC0000000;
	fma.rn.f32 	%f42, %f8, %f41, %f38;
	sub.f32 	%f43, %f42, %f40;
	fma.rn.f32 	%f44, %f43, %f3, %f40;
	neg.f32 	%f45, %f8;
	mul.f32 	%f46, %f8, %f45;
	mul.f32 	%f47, %f46, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f48, %f47;
	mov.f32 	%f49, 0fBF317200;
	fma.rn.f32 	%f50, %f48, %f49, %f46;
	mov.f32 	%f51, 0fB5BFBE8E;
	fma.rn.f32 	%f52, %f48, %f51, %f50;
	mul.f32 	%f6, %f52, 0f3FB8AA3B;
	// inline asm
	ex2.approx.ftz.f32 %f5,%f6;
	// inline asm
	add.f32 	%f53, %f48, 0f00000000;
	ex2.approx.f32 	%f54, %f53;
	mul.f32 	%f55, %f5, %f54;
	neg.f32 	%f56, %f46;
	fma.rn.f32 	%f57, %f45, %f8, %f56;
	fma.rn.f32 	%f58, %f55, %f57, %f55;
	mul.f32 	%f59, %f44, %f58;
	setp.gt.f32	%p1, %f8, 0f4120E148;
	selp.f32	%f60, 0f00000000, %f59, %p1;
	setp.lt.f32	%p2, %f7, 0f00000000;
	sub.f32 	%f61, %f39, %f60;
	selp.f32	%f62, %f61, %f60, %p2;
	st.param.f32	[funj_retval0+0], %f62;
	ret;
}

.visible .func  (.param .b32 funj_retval0) ___erfci(
	.param .b32 ___erfci_param_0
)
{
	.reg .pred 	%p<3>;
	.reg .s32 	%r<3>;
	.reg .f32 	%f<63>;


	ld.param.u32 	%r1, [___erfci_param_0];
	cvt.rn.f32.s32	%f7, %r1;
	abs.f32 	%f8, %f7;
	add.f32 	%f9, %f8, 0fC0800000;
	mov.f32 	%f10, 0fC0800000;
	add.f32 	%f2, %f8, 0f40800000;
	// inline asm
	rcp.approx.ftz.f32 %f1,%f2;
	// inline asm
	mul.rn.f32 	%f11, %f9, %f1;
	add.f32 	%f12, %f11, 0f3F800000;
	mov.f32 	%f13, 0f3F800000;
	fma.rn.f32 	%f14, %f10, %f12, %f8;
	neg.f32 	%f15, %f11;
	fma.rn.f32 	%f16, %f15, %f8, %f14;
	fma.rn.f32 	%f17, %f1, %f16, %f11;
	mov.f32 	%f18, 0f3BE6E05B;
	mov.f32 	%f19, 0f3A69A091;
	fma.rn.f32 	%f20, %f19, %f17, %f18;
	mov.f32 	%f21, 0fBC81FB4B;
	fma.rn.f32 	%f22, %f20, %f17, %f21;
	mov.f32 	%f23, 0f3D15373B;
	fma.rn.f32 	%f24, %f22, %f17, %f23;
	mov.f32 	%f25, 0fBD887C5A;
	fma.rn.f32 	%f26, %f24, %f17, %f25;
	mov.f32 	%f27, 0f3DC021D5;
	fma.rn.f32 	%f28, %f26, %f17, %f27;
	mov.f32 	%f29, 0fBDCED424;
	fma.rn.f32 	%f30, %f28, %f17, %f29;
	mov.f32 	%f31, 0f3D8B74DE;
	fma.rn.f32 	%f32, %f30, %f17, %f31;
	mov.f32 	%f33, 0f3C7BF170;
	fma.rn.f32 	%f34, %f32, %f17, %f33;
	mov.f32 	%f35, 0fBE0EF8D4;
	fma.rn.f32 	%f36, %f34, %f17, %f35;
	mov.f32 	%f37, 0f3F9DD2C9;
	fma.rn.f32 	%f38, %f36, %f17, %f37;
	mov.f32 	%f39, 0f40000000;
	fma.rn.f32 	%f4, %f39, %f8, %f13;
	// inline asm
	rcp.approx.ftz.f32 %f3,%f4;
	// inline asm
	mul.rn.f32 	%f40, %f38, %f3;
	mul.f32 	%f41, %f40, 0fC0000000;
	fma.rn.f32 	%f42, %f8, %f41, %f38;
	sub.f32 	%f43, %f42, %f40;
	fma.rn.f32 	%f44, %f43, %f3, %f40;
	neg.f32 	%f45, %f8;
	mul.f32 	%f46, %f8, %f45;
	mul.f32 	%f47, %f46, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f48, %f47;
	mov.f32 	%f49, 0fBF317200;
	fma.rn.f32 	%f50, %f48, %f49, %f46;
	mov.f32 	%f51, 0fB5BFBE8E;
	fma.rn.f32 	%f52, %f48, %f51, %f50;
	mul.f32 	%f6, %f52, 0f3FB8AA3B;
	// inline asm
	ex2.approx.ftz.f32 %f5,%f6;
	// inline asm
	add.f32 	%f53, %f48, 0f00000000;
	ex2.approx.f32 	%f54, %f53;
	mul.f32 	%f55, %f5, %f54;
	neg.f32 	%f56, %f46;
	fma.rn.f32 	%f57, %f45, %f8, %f56;
	fma.rn.f32 	%f58, %f55, %f57, %f55;
	mul.f32 	%f59, %f44, %f58;
	setp.gt.f32	%p1, %f8, 0f4120E148;
	selp.f32	%f60, 0f00000000, %f59, %p1;
	setp.lt.f32	%p2, %f7, 0f00000000;
	sub.f32 	%f61, %f39, %f60;
	selp.f32	%f62, %f61, %f60, %p2;
	cvt.rzi.s32.f32	%r2, %f62;
	st.param.b32	[funj_retval0+0], %r2;
	ret;
}

.visible .func  (.param .b32 funj_retval0) ___erfcu(
	.param .b32 ___erfcu_param_0
)
{
	.reg .pred 	%p<3>;
	.reg .s32 	%r<3>;
	.reg .f32 	%f<63>;


	ld.param.u32 	%r1, [___erfcu_param_0];
	cvt.rn.f32.u32	%f7, %r1;
	abs.f32 	%f8, %f7;
	add.f32 	%f9, %f8, 0fC0800000;
	mov.f32 	%f10, 0fC0800000;
	add.f32 	%f2, %f8, 0f40800000;
	// inline asm
	rcp.approx.ftz.f32 %f1,%f2;
	// inline asm
	mul.rn.f32 	%f11, %f9, %f1;
	add.f32 	%f12, %f11, 0f3F800000;
	mov.f32 	%f13, 0f3F800000;
	fma.rn.f32 	%f14, %f10, %f12, %f8;
	neg.f32 	%f15, %f11;
	fma.rn.f32 	%f16, %f15, %f8, %f14;
	fma.rn.f32 	%f17, %f1, %f16, %f11;
	mov.f32 	%f18, 0f3BE6E05B;
	mov.f32 	%f19, 0f3A69A091;
	fma.rn.f32 	%f20, %f19, %f17, %f18;
	mov.f32 	%f21, 0fBC81FB4B;
	fma.rn.f32 	%f22, %f20, %f17, %f21;
	mov.f32 	%f23, 0f3D15373B;
	fma.rn.f32 	%f24, %f22, %f17, %f23;
	mov.f32 	%f25, 0fBD887C5A;
	fma.rn.f32 	%f26, %f24, %f17, %f25;
	mov.f32 	%f27, 0f3DC021D5;
	fma.rn.f32 	%f28, %f26, %f17, %f27;
	mov.f32 	%f29, 0fBDCED424;
	fma.rn.f32 	%f30, %f28, %f17, %f29;
	mov.f32 	%f31, 0f3D8B74DE;
	fma.rn.f32 	%f32, %f30, %f17, %f31;
	mov.f32 	%f33, 0f3C7BF170;
	fma.rn.f32 	%f34, %f32, %f17, %f33;
	mov.f32 	%f35, 0fBE0EF8D4;
	fma.rn.f32 	%f36, %f34, %f17, %f35;
	mov.f32 	%f37, 0f3F9DD2C9;
	fma.rn.f32 	%f38, %f36, %f17, %f37;
	mov.f32 	%f39, 0f40000000;
	fma.rn.f32 	%f4, %f39, %f8, %f13;
	// inline asm
	rcp.approx.ftz.f32 %f3,%f4;
	// inline asm
	mul.rn.f32 	%f40, %f38, %f3;
	mul.f32 	%f41, %f40, 0fC0000000;
	fma.rn.f32 	%f42, %f8, %f41, %f38;
	sub.f32 	%f43, %f42, %f40;
	fma.rn.f32 	%f44, %f43, %f3, %f40;
	neg.f32 	%f45, %f8;
	mul.f32 	%f46, %f8, %f45;
	mul.f32 	%f47, %f46, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f48, %f47;
	mov.f32 	%f49, 0fBF317200;
	fma.rn.f32 	%f50, %f48, %f49, %f46;
	mov.f32 	%f51, 0fB5BFBE8E;
	fma.rn.f32 	%f52, %f48, %f51, %f50;
	mul.f32 	%f6, %f52, 0f3FB8AA3B;
	// inline asm
	ex2.approx.ftz.f32 %f5,%f6;
	// inline asm
	add.f32 	%f53, %f48, 0f00000000;
	ex2.approx.f32 	%f54, %f53;
	mul.f32 	%f55, %f5, %f54;
	neg.f32 	%f56, %f46;
	fma.rn.f32 	%f57, %f45, %f8, %f56;
	fma.rn.f32 	%f58, %f55, %f57, %f55;
	mul.f32 	%f59, %f44, %f58;
	setp.gt.f32	%p1, %f8, 0f4120E148;
	selp.f32	%f60, 0f00000000, %f59, %p1;
	setp.lt.f32	%p2, %f7, 0f00000000;
	sub.f32 	%f61, %f39, %f60;
	selp.f32	%f62, %f61, %f60, %p2;
	cvt.rzi.u32.f32	%r2, %f62;
	st.param.b32	[funj_retval0+0], %r2;
	ret;
}

.visible .func  (.param .b32 funj_retval0) ___erfjj(
	.param .b32 ___erfjj_param_0
)
{
	.reg .pred 	%p<3>;
	.reg .s16 	%rs<2>;
	.reg .s32 	%r<3>;
	.reg .f32 	%f<63>;


	ld.param.s8 	%rs1, [___erfjj_param_0];
	cvt.rn.f32.s16	%f7, %rs1;
	abs.f32 	%f8, %f7;
	add.f32 	%f9, %f8, 0fC0800000;
	mov.f32 	%f10, 0fC0800000;
	add.f32 	%f2, %f8, 0f40800000;
	// inline asm
	rcp.approx.ftz.f32 %f1,%f2;
	// inline asm
	mul.rn.f32 	%f11, %f9, %f1;
	add.f32 	%f12, %f11, 0f3F800000;
	mov.f32 	%f13, 0f3F800000;
	fma.rn.f32 	%f14, %f10, %f12, %f8;
	neg.f32 	%f15, %f11;
	fma.rn.f32 	%f16, %f15, %f8, %f14;
	fma.rn.f32 	%f17, %f1, %f16, %f11;
	mov.f32 	%f18, 0f3BE6E05B;
	mov.f32 	%f19, 0f3A69A091;
	fma.rn.f32 	%f20, %f19, %f17, %f18;
	mov.f32 	%f21, 0fBC81FB4B;
	fma.rn.f32 	%f22, %f20, %f17, %f21;
	mov.f32 	%f23, 0f3D15373B;
	fma.rn.f32 	%f24, %f22, %f17, %f23;
	mov.f32 	%f25, 0fBD887C5A;
	fma.rn.f32 	%f26, %f24, %f17, %f25;
	mov.f32 	%f27, 0f3DC021D5;
	fma.rn.f32 	%f28, %f26, %f17, %f27;
	mov.f32 	%f29, 0fBDCED424;
	fma.rn.f32 	%f30, %f28, %f17, %f29;
	mov.f32 	%f31, 0f3D8B74DE;
	fma.rn.f32 	%f32, %f30, %f17, %f31;
	mov.f32 	%f33, 0f3C7BF170;
	fma.rn.f32 	%f34, %f32, %f17, %f33;
	mov.f32 	%f35, 0fBE0EF8D4;
	fma.rn.f32 	%f36, %f34, %f17, %f35;
	mov.f32 	%f37, 0f3F9DD2C9;
	fma.rn.f32 	%f38, %f36, %f17, %f37;
	mov.f32 	%f39, 0f40000000;
	fma.rn.f32 	%f4, %f39, %f8, %f13;
	// inline asm
	rcp.approx.ftz.f32 %f3,%f4;
	// inline asm
	mul.rn.f32 	%f40, %f38, %f3;
	mul.f32 	%f41, %f40, 0fC0000000;
	fma.rn.f32 	%f42, %f8, %f41, %f38;
	sub.f32 	%f43, %f42, %f40;
	fma.rn.f32 	%f44, %f43, %f3, %f40;
	neg.f32 	%f45, %f8;
	mul.f32 	%f46, %f8, %f45;
	mul.f32 	%f47, %f46, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f48, %f47;
	mov.f32 	%f49, 0fBF317200;
	fma.rn.f32 	%f50, %f48, %f49, %f46;
	mov.f32 	%f51, 0fB5BFBE8E;
	fma.rn.f32 	%f52, %f48, %f51, %f50;
	mul.f32 	%f6, %f52, 0f3FB8AA3B;
	// inline asm
	ex2.approx.ftz.f32 %f5,%f6;
	// inline asm
	add.f32 	%f53, %f48, 0f00000000;
	ex2.approx.f32 	%f54, %f53;
	mul.f32 	%f55, %f5, %f54;
	neg.f32 	%f56, %f46;
	fma.rn.f32 	%f57, %f45, %f8, %f56;
	fma.rn.f32 	%f58, %f55, %f57, %f55;
	mul.f32 	%f59, %f44, %f58;
	setp.gt.f32	%p1, %f8, 0f4120E148;
	selp.f32	%f60, 0f00000000, %f59, %p1;
	setp.lt.s16	%p2, %rs1, 0;
	sub.f32 	%f61, %f39, %f60;
	selp.f32	%f62, %f61, %f60, %p2;
	cvt.rzi.s32.f32	%r1, %f62;
	cvt.s32.s8 	%r2, %r1;
	st.param.b32	[funj_retval0+0], %r2;
	ret;
}

.visible .func  (.param .b32 funj_retval0) ___erfcv(
	.param .b32 ___erfcv_param_0
)
{
	.reg .pred 	%p<2>;
	.reg .s16 	%rs<2>;
	.reg .s32 	%r<3>;
	.reg .f32 	%f<61>;


	ld.param.u8 	%rs1, [___erfcv_param_0];
	cvt.rn.f32.u16	%f7, %rs1;
	abs.f32 	%f8, %f7;
	add.f32 	%f9, %f8, 0fC0800000;
	mov.f32 	%f10, 0fC0800000;
	add.f32 	%f2, %f8, 0f40800000;
	// inline asm
	rcp.approx.ftz.f32 %f1,%f2;
	// inline asm
	mul.rn.f32 	%f11, %f9, %f1;
	add.f32 	%f12, %f11, 0f3F800000;
	mov.f32 	%f13, 0f3F800000;
	fma.rn.f32 	%f14, %f10, %f12, %f8;
	neg.f32 	%f15, %f11;
	fma.rn.f32 	%f16, %f15, %f8, %f14;
	fma.rn.f32 	%f17, %f1, %f16, %f11;
	mov.f32 	%f18, 0f3BE6E05B;
	mov.f32 	%f19, 0f3A69A091;
	fma.rn.f32 	%f20, %f19, %f17, %f18;
	mov.f32 	%f21, 0fBC81FB4B;
	fma.rn.f32 	%f22, %f20, %f17, %f21;
	mov.f32 	%f23, 0f3D15373B;
	fma.rn.f32 	%f24, %f22, %f17, %f23;
	mov.f32 	%f25, 0fBD887C5A;
	fma.rn.f32 	%f26, %f24, %f17, %f25;
	mov.f32 	%f27, 0f3DC021D5;
	fma.rn.f32 	%f28, %f26, %f17, %f27;
	mov.f32 	%f29, 0fBDCED424;
	fma.rn.f32 	%f30, %f28, %f17, %f29;
	mov.f32 	%f31, 0f3D8B74DE;
	fma.rn.f32 	%f32, %f30, %f17, %f31;
	mov.f32 	%f33, 0f3C7BF170;
	fma.rn.f32 	%f34, %f32, %f17, %f33;
	mov.f32 	%f35, 0fBE0EF8D4;
	fma.rn.f32 	%f36, %f34, %f17, %f35;
	mov.f32 	%f37, 0f3F9DD2C9;
	fma.rn.f32 	%f38, %f36, %f17, %f37;
	mov.f32 	%f39, 0f40000000;
	fma.rn.f32 	%f4, %f39, %f8, %f13;
	// inline asm
	rcp.approx.ftz.f32 %f3,%f4;
	// inline asm
	mul.rn.f32 	%f40, %f38, %f3;
	mul.f32 	%f41, %f40, 0fC0000000;
	fma.rn.f32 	%f42, %f8, %f41, %f38;
	sub.f32 	%f43, %f42, %f40;
	fma.rn.f32 	%f44, %f43, %f3, %f40;
	neg.f32 	%f45, %f8;
	mul.f32 	%f46, %f8, %f45;
	mul.f32 	%f47, %f46, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f48, %f47;
	mov.f32 	%f49, 0fBF317200;
	fma.rn.f32 	%f50, %f48, %f49, %f46;
	mov.f32 	%f51, 0fB5BFBE8E;
	fma.rn.f32 	%f52, %f48, %f51, %f50;
	mul.f32 	%f6, %f52, 0f3FB8AA3B;
	// inline asm
	ex2.approx.ftz.f32 %f5,%f6;
	// inline asm
	add.f32 	%f53, %f48, 0f00000000;
	ex2.approx.f32 	%f54, %f53;
	mul.f32 	%f55, %f5, %f54;
	neg.f32 	%f56, %f46;
	fma.rn.f32 	%f57, %f45, %f8, %f56;
	fma.rn.f32 	%f58, %f55, %f57, %f55;
	mul.f32 	%f59, %f44, %f58;
	setp.gt.f32	%p1, %f8, 0f4120E148;
	selp.f32	%f60, 0f00000000, %f59, %p1;
	cvt.rzi.u32.f32	%r1, %f60;
	and.b32  	%r2, %r1, 255;
	st.param.b32	[funj_retval0+0], %r2;
	ret;
}

.visible .func  (.param .b64 funj_retval0) ___erfcd(
	.param .b64 ___erfcd_param_0
)
{
	.reg .pred 	%p<9>;
	.reg .s32 	%r<17>;
	.reg .f64 	%fd<128>;


	ld.param.f64 	%fd11, [___erfcd_param_0];
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r1}, %fd11;
	}
	and.b32  	%r2, %r1, 2147483647;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r3, %temp}, %fd11;
	}
	setp.lt.u32	%p1, %r2, 2146435072;
	@%p1 bra 	BB23_2;

	setp.eq.s32	%p2, %r2, 2146435072;
	setp.eq.s32	%p3, %r3, 0;
	and.pred  	%p4, %p2, %p3;
	setp.lt.s32	%p5, %r1, 0;
	selp.f64	%fd12, 0d4000000000000000, 0d0000000000000000, %p5;
	add.f64 	%fd13, %fd11, %fd11;
	selp.f64	%fd127, %fd12, %fd13, %p4;
	bra.uni 	BB23_6;

BB23_2:
	mov.b64 	%fd2, {%r3, %r2};
	add.f64 	%fd18, %fd2, 0dC010000000000000;
	mov.f64 	%fd19, 0dC010000000000000;
	add.f64 	%fd15, %fd2, 0d4010000000000000;
	// inline asm
	rcp.approx.ftz.f64 %fd14,%fd15;
	// inline asm
	neg.f64 	%fd20, %fd15;
	mov.f64 	%fd21, 0d3FF0000000000000;
	fma.rn.f64 	%fd22, %fd20, %fd14, %fd21;
	fma.rn.f64 	%fd23, %fd22, %fd22, %fd22;
	fma.rn.f64 	%fd24, %fd23, %fd14, %fd14;
	mul.f64 	%fd25, %fd18, %fd24;
	add.rn.f64 	%fd26, %fd25, %fd21;
	fma.rn.f64 	%fd27, %fd19, %fd26, %fd2;
	neg.f64 	%fd28, %fd25;
	fma.rn.f64 	%fd29, %fd28, %fd2, %fd27;
	fma.rn.f64 	%fd30, %fd24, %fd29, %fd25;
	mov.f64 	%fd31, 0dBE44E1C6FD03D328;
	mov.f64 	%fd32, 0dBDF8774AD4E0BFD7;
	fma.rn.f64 	%fd33, %fd32, %fd30, %fd31;
	mov.f64 	%fd34, 0dBE4330149F7A56B6;
	fma.rn.f64 	%fd35, %fd33, %fd30, %fd34;
	mov.f64 	%fd36, 0d3E7BEDDED8376273;
	fma.rn.f64 	%fd37, %fd35, %fd30, %fd36;
	mov.f64 	%fd38, 0d3E6F9254C3ABF22B;
	fma.rn.f64 	%fd39, %fd37, %fd30, %fd38;
	mov.f64 	%fd40, 0dBEAB9068C2148CF0;
	fma.rn.f64 	%fd41, %fd39, %fd30, %fd40;
	mov.f64 	%fd42, 0d3E94C6454DB34009;
	fma.rn.f64 	%fd43, %fd41, %fd30, %fd42;
	mov.f64 	%fd44, 0d3ED7F1C378F2311D;
	fma.rn.f64 	%fd45, %fd43, %fd30, %fd44;
	mov.f64 	%fd46, 0dBEE78E051C6D5C58;
	fma.rn.f64 	%fd47, %fd45, %fd30, %fd46;
	mov.f64 	%fd48, 0dBEF995B4EAD14A90;
	fma.rn.f64 	%fd49, %fd47, %fd30, %fd48;
	mov.f64 	%fd50, 0d3F23BE27CF0A29B2;
	fma.rn.f64 	%fd51, %fd49, %fd30, %fd50;
	mov.f64 	%fd52, 0dBF2A1DEF3E81672E;
	fma.rn.f64 	%fd53, %fd51, %fd30, %fd52;
	mov.f64 	%fd54, 0dBF48D4ABE68C1713;
	fma.rn.f64 	%fd55, %fd53, %fd30, %fd54;
	mov.f64 	%fd56, 0d3F749C67210DD6B4;
	fma.rn.f64 	%fd57, %fd55, %fd30, %fd56;
	mov.f64 	%fd58, 0dBF9096238568E357;
	fma.rn.f64 	%fd59, %fd57, %fd30, %fd58;
	mov.f64 	%fd60, 0d3FA3079EDF8C2DC9;
	fma.rn.f64 	%fd61, %fd59, %fd30, %fd60;
	mov.f64 	%fd62, 0dBFB0FB06DFF601FC;
	fma.rn.f64 	%fd63, %fd61, %fd30, %fd62;
	mov.f64 	%fd64, 0d3FB7FEE004DFBCDC;
	fma.rn.f64 	%fd65, %fd63, %fd30, %fd64;
	mov.f64 	%fd66, 0dBFB9DDB23C3DB8C6;
	fma.rn.f64 	%fd67, %fd65, %fd30, %fd66;
	mov.f64 	%fd68, 0d3FB16ECEFCFA5FDA;
	fma.rn.f64 	%fd69, %fd67, %fd30, %fd68;
	mov.f64 	%fd70, 0d3F8F7F5DF66FB6D6;
	fma.rn.f64 	%fd71, %fd69, %fd30, %fd70;
	mov.f64 	%fd72, 0dBFC1DF1AD154A29D;
	fma.rn.f64 	%fd73, %fd71, %fd30, %fd72;
	mov.f64 	%fd74, 0d3FF3BA5916E9FD7F;
	fma.rn.f64 	%fd75, %fd73, %fd30, %fd74;
	mov.f64 	%fd76, 0d4000000000000000;
	fma.rn.f64 	%fd17, %fd76, %fd2, %fd21;
	// inline asm
	rcp.approx.ftz.f64 %fd16,%fd17;
	// inline asm
	neg.f64 	%fd77, %fd17;
	fma.rn.f64 	%fd78, %fd77, %fd16, %fd21;
	fma.rn.f64 	%fd79, %fd78, %fd78, %fd78;
	fma.rn.f64 	%fd80, %fd79, %fd16, %fd16;
	mul.f64 	%fd81, %fd75, %fd80;
	mul.f64 	%fd82, %fd81, 0dC000000000000000;
	fma.rn.f64 	%fd83, %fd2, %fd82, %fd75;
	neg.f64 	%fd84, %fd81;
	add.rn.f64 	%fd85, %fd83, %fd84;
	fma.rn.f64 	%fd3, %fd85, %fd80, %fd81;
	neg.f64 	%fd4, %fd2;
	mul.f64 	%fd5, %fd2, %fd4;
	mov.f64 	%fd86, 0d3FF71547652B82FE;
	mul.rn.f64 	%fd87, %fd5, %fd86;
	mov.f64 	%fd88, 0d4338000000000000;
	add.rn.f64 	%fd89, %fd87, %fd88;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r4, %temp}, %fd89;
	}
	mov.f64 	%fd90, 0dC338000000000000;
	add.rn.f64 	%fd91, %fd89, %fd90;
	mov.f64 	%fd92, 0dBFE62E42FEFA39EF;
	fma.rn.f64 	%fd93, %fd91, %fd92, %fd5;
	mov.f64 	%fd94, 0dBC7ABC9E3B39803F;
	fma.rn.f64 	%fd95, %fd91, %fd94, %fd93;
	mov.f64 	%fd96, 0d3E928AF3FCA213EA;
	mov.f64 	%fd97, 0d3E5ADE1569CE2BDF;
	fma.rn.f64 	%fd98, %fd97, %fd95, %fd96;
	mov.f64 	%fd99, 0d3EC71DEE62401315;
	fma.rn.f64 	%fd100, %fd98, %fd95, %fd99;
	mov.f64 	%fd101, 0d3EFA01997C89EB71;
	fma.rn.f64 	%fd102, %fd100, %fd95, %fd101;
	mov.f64 	%fd103, 0d3F2A01A014761F65;
	fma.rn.f64 	%fd104, %fd102, %fd95, %fd103;
	mov.f64 	%fd105, 0d3F56C16C1852B7AF;
	fma.rn.f64 	%fd106, %fd104, %fd95, %fd105;
	mov.f64 	%fd107, 0d3F81111111122322;
	fma.rn.f64 	%fd108, %fd106, %fd95, %fd107;
	mov.f64 	%fd109, 0d3FA55555555502A1;
	fma.rn.f64 	%fd110, %fd108, %fd95, %fd109;
	mov.f64 	%fd111, 0d3FC5555555555511;
	fma.rn.f64 	%fd112, %fd110, %fd95, %fd111;
	mov.f64 	%fd113, 0d3FE000000000000B;
	fma.rn.f64 	%fd114, %fd112, %fd95, %fd113;
	fma.rn.f64 	%fd115, %fd114, %fd95, %fd21;
	fma.rn.f64 	%fd126, %fd115, %fd95, %fd21;
	abs.s32 	%r8, %r4;
	setp.lt.s32	%p6, %r8, 1023;
	@%p6 bra 	BB23_4;

	add.s32 	%r9, %r4, 2046;
	shl.b32 	%r10, %r9, 19;
	and.b32  	%r11, %r10, -1048576;
	shl.b32 	%r12, %r9, 20;
	sub.s32 	%r16, %r12, %r11;
	mov.u32 	%r13, 0;
	mov.b64 	%fd116, {%r13, %r11};
	mul.f64 	%fd126, %fd126, %fd116;
	bra.uni 	BB23_5;

BB23_4:
	shl.b32 	%r14, %r4, 20;
	add.s32 	%r16, %r14, 1072693248;

BB23_5:
	mov.u32 	%r15, 0;
	mov.b64 	%fd117, {%r15, %r16};
	mul.f64 	%fd118, %fd126, %fd117;
	neg.f64 	%fd119, %fd5;
	fma.rn.f64 	%fd120, %fd4, %fd2, %fd119;
	fma.rn.f64 	%fd121, %fd118, %fd120, %fd118;
	mul.f64 	%fd122, %fd3, %fd121;
	setp.gt.u32	%p7, %r2, 1077624832;
	selp.f64	%fd123, 0d0000000000000000, %fd122, %p7;
	sub.f64 	%fd125, %fd76, %fd123;
	setp.lt.s32	%p8, %r1, 0;
	selp.f64	%fd127, %fd125, %fd123, %p8;

BB23_6:
	st.param.f64	[funj_retval0+0], %fd127;
	ret;
}

.visible .func  (.param .b32 funj_retval0) ___logs(
	.param .b32 ___logs_param_0
)
{
	.reg .pred 	%p<6>;
	.reg .s32 	%r<5>;
	.reg .f32 	%f<33>;


	ld.param.f32 	%f4, [___logs_param_0];
	setp.gt.f32	%p1, %f4, 0f00000000;
	setp.lt.f32	%p2, %f4, 0f7F800000;
	and.pred  	%p3, %p1, %p2;
	@%p3 bra 	BB24_2;

	lg2.approx.f32 	%f32, %f4;
	bra.uni 	BB24_3;

BB24_2:
	setp.lt.f32	%p4, %f4, 0f00800000;
	mul.f32 	%f7, %f4, 0f4B800000;
	selp.f32	%f8, %f7, %f4, %p4;
	selp.f32	%f9, 0fC3170000, 0fC2FE0000, %p4;
	mov.b32 	 %r1, %f8;
	and.b32  	%r2, %r1, 8388607;
	or.b32  	%r3, %r2, 1065353216;
	mov.b32 	 %f10, %r3;
	shr.u32 	%r4, %r1, 23;
	cvt.rn.f32.u32	%f11, %r4;
	add.f32 	%f12, %f9, %f11;
	setp.gt.f32	%p5, %f10, 0f3FAE147B;
	mul.f32 	%f13, %f10, 0f3F000000;
	add.f32 	%f14, %f12, 0f3F800000;
	selp.f32	%f15, %f13, %f10, %p5;
	selp.f32	%f16, %f14, %f12, %p5;
	add.f32 	%f6, %f15, 0f3F800000;
	add.f32 	%f17, %f15, 0fBF800000;
	// inline asm
	rcp.approx.ftz.f32 %f5,%f6;
	// inline asm
	neg.f32 	%f18, %f17;
	mul.f32 	%f19, %f17, %f18;
	mul.rn.f32 	%f20, %f5, %f19;
	add.rn.f32 	%f21, %f17, %f20;
	mul.f32 	%f22, %f21, %f21;
	mov.f32 	%f23, 0f3C4C6A36;
	mov.f32 	%f24, 0f3B1E94E6;
	fma.rn.f32 	%f25, %f24, %f22, %f23;
	mov.f32 	%f26, 0f3DAAAB1A;
	fma.rn.f32 	%f27, %f25, %f22, %f26;
	mul.f32 	%f28, %f27, %f22;
	fma.rn.f32 	%f29, %f28, %f21, %f20;
	add.f32 	%f30, %f29, %f17;
	mov.f32 	%f31, 0f3F317218;
	fma.rn.f32 	%f32, %f16, %f31, %f30;

BB24_3:
	st.param.f32	[funj_retval0+0], %f32;
	ret;
}

.visible .func  (.param .b32 funj_retval0) ___logi(
	.param .b32 ___logi_param_0
)
{
	.reg .pred 	%p<6>;
	.reg .s32 	%r<7>;
	.reg .f32 	%f<33>;


	ld.param.u32 	%r1, [___logi_param_0];
	cvt.rn.f32.s32	%f1, %r1;
	setp.gt.f32	%p1, %f1, 0f00000000;
	setp.lt.f32	%p2, %f1, 0f7F800000;
	and.pred  	%p3, %p1, %p2;
	@%p3 bra 	BB25_2;

	lg2.approx.f32 	%f32, %f1;
	bra.uni 	BB25_3;

BB25_2:
	setp.lt.f32	%p4, %f1, 0f00800000;
	mul.f32 	%f7, %f1, 0f4B800000;
	selp.f32	%f8, %f7, %f1, %p4;
	selp.f32	%f9, 0fC3170000, 0fC2FE0000, %p4;
	mov.b32 	 %r2, %f8;
	and.b32  	%r3, %r2, 8388607;
	or.b32  	%r4, %r3, 1065353216;
	mov.b32 	 %f10, %r4;
	shr.u32 	%r5, %r2, 23;
	cvt.rn.f32.u32	%f11, %r5;
	add.f32 	%f12, %f9, %f11;
	setp.gt.f32	%p5, %f10, 0f3FAE147B;
	mul.f32 	%f13, %f10, 0f3F000000;
	add.f32 	%f14, %f12, 0f3F800000;
	selp.f32	%f15, %f13, %f10, %p5;
	selp.f32	%f16, %f14, %f12, %p5;
	add.f32 	%f6, %f15, 0f3F800000;
	add.f32 	%f17, %f15, 0fBF800000;
	// inline asm
	rcp.approx.ftz.f32 %f5,%f6;
	// inline asm
	neg.f32 	%f18, %f17;
	mul.f32 	%f19, %f17, %f18;
	mul.rn.f32 	%f20, %f5, %f19;
	add.rn.f32 	%f21, %f17, %f20;
	mul.f32 	%f22, %f21, %f21;
	mov.f32 	%f23, 0f3C4C6A36;
	mov.f32 	%f24, 0f3B1E94E6;
	fma.rn.f32 	%f25, %f24, %f22, %f23;
	mov.f32 	%f26, 0f3DAAAB1A;
	fma.rn.f32 	%f27, %f25, %f22, %f26;
	mul.f32 	%f28, %f27, %f22;
	fma.rn.f32 	%f29, %f28, %f21, %f20;
	add.f32 	%f30, %f29, %f17;
	mov.f32 	%f31, 0f3F317218;
	fma.rn.f32 	%f32, %f16, %f31, %f30;

BB25_3:
	cvt.rzi.s32.f32	%r6, %f32;
	st.param.b32	[funj_retval0+0], %r6;
	ret;
}

.visible .func  (.param .b32 funj_retval0) ___logu(
	.param .b32 ___logu_param_0
)
{
	.reg .pred 	%p<6>;
	.reg .s32 	%r<7>;
	.reg .f32 	%f<33>;


	ld.param.u32 	%r1, [___logu_param_0];
	cvt.rn.f32.u32	%f1, %r1;
	setp.gt.f32	%p1, %f1, 0f00000000;
	setp.lt.f32	%p2, %f1, 0f7F800000;
	and.pred  	%p3, %p1, %p2;
	@%p3 bra 	BB26_2;

	lg2.approx.f32 	%f32, %f1;
	bra.uni 	BB26_3;

BB26_2:
	setp.lt.f32	%p4, %f1, 0f00800000;
	mul.f32 	%f7, %f1, 0f4B800000;
	selp.f32	%f8, %f7, %f1, %p4;
	selp.f32	%f9, 0fC3170000, 0fC2FE0000, %p4;
	mov.b32 	 %r2, %f8;
	and.b32  	%r3, %r2, 8388607;
	or.b32  	%r4, %r3, 1065353216;
	mov.b32 	 %f10, %r4;
	shr.u32 	%r5, %r2, 23;
	cvt.rn.f32.u32	%f11, %r5;
	add.f32 	%f12, %f9, %f11;
	setp.gt.f32	%p5, %f10, 0f3FAE147B;
	mul.f32 	%f13, %f10, 0f3F000000;
	add.f32 	%f14, %f12, 0f3F800000;
	selp.f32	%f15, %f13, %f10, %p5;
	selp.f32	%f16, %f14, %f12, %p5;
	add.f32 	%f6, %f15, 0f3F800000;
	add.f32 	%f17, %f15, 0fBF800000;
	// inline asm
	rcp.approx.ftz.f32 %f5,%f6;
	// inline asm
	neg.f32 	%f18, %f17;
	mul.f32 	%f19, %f17, %f18;
	mul.rn.f32 	%f20, %f5, %f19;
	add.rn.f32 	%f21, %f17, %f20;
	mul.f32 	%f22, %f21, %f21;
	mov.f32 	%f23, 0f3C4C6A36;
	mov.f32 	%f24, 0f3B1E94E6;
	fma.rn.f32 	%f25, %f24, %f22, %f23;
	mov.f32 	%f26, 0f3DAAAB1A;
	fma.rn.f32 	%f27, %f25, %f22, %f26;
	mul.f32 	%f28, %f27, %f22;
	fma.rn.f32 	%f29, %f28, %f21, %f20;
	add.f32 	%f30, %f29, %f17;
	mov.f32 	%f31, 0f3F317218;
	fma.rn.f32 	%f32, %f16, %f31, %f30;

BB26_3:
	cvt.rzi.u32.f32	%r6, %f32;
	st.param.b32	[funj_retval0+0], %r6;
	ret;
}

.visible .func  (.param .b32 funj_retval0) ___logj(
	.param .b32 ___logj_param_0
)
{
	.reg .pred 	%p<4>;
	.reg .s16 	%rs<2>;
	.reg .s32 	%r<7>;
	.reg .f32 	%f<33>;


	ld.param.s8 	%rs1, [___logj_param_0];
	cvt.rn.f32.s16	%f1, %rs1;
	setp.gt.s16	%p1, %rs1, 0;
	@%p1 bra 	BB27_2;

	lg2.approx.f32 	%f32, %f1;
	bra.uni 	BB27_3;

BB27_2:
	setp.lt.s16	%p2, %rs1, 1;
	mul.f32 	%f7, %f1, 0f4B800000;
	selp.f32	%f8, %f7, %f1, %p2;
	selp.f32	%f9, 0fC3170000, 0fC2FE0000, %p2;
	mov.b32 	 %r1, %f8;
	and.b32  	%r2, %r1, 8388607;
	or.b32  	%r3, %r2, 1065353216;
	mov.b32 	 %f10, %r3;
	shr.u32 	%r4, %r1, 23;
	cvt.rn.f32.u32	%f11, %r4;
	add.f32 	%f12, %f9, %f11;
	setp.gt.f32	%p3, %f10, 0f3FAE147B;
	mul.f32 	%f13, %f10, 0f3F000000;
	add.f32 	%f14, %f12, 0f3F800000;
	selp.f32	%f15, %f13, %f10, %p3;
	selp.f32	%f16, %f14, %f12, %p3;
	add.f32 	%f6, %f15, 0f3F800000;
	add.f32 	%f17, %f15, 0fBF800000;
	// inline asm
	rcp.approx.ftz.f32 %f5,%f6;
	// inline asm
	neg.f32 	%f18, %f17;
	mul.f32 	%f19, %f17, %f18;
	mul.rn.f32 	%f20, %f5, %f19;
	add.rn.f32 	%f21, %f17, %f20;
	mul.f32 	%f22, %f21, %f21;
	mov.f32 	%f23, 0f3C4C6A36;
	mov.f32 	%f24, 0f3B1E94E6;
	fma.rn.f32 	%f25, %f24, %f22, %f23;
	mov.f32 	%f26, 0f3DAAAB1A;
	fma.rn.f32 	%f27, %f25, %f22, %f26;
	mul.f32 	%f28, %f27, %f22;
	fma.rn.f32 	%f29, %f28, %f21, %f20;
	add.f32 	%f30, %f29, %f17;
	mov.f32 	%f31, 0f3F317218;
	fma.rn.f32 	%f32, %f16, %f31, %f30;

BB27_3:
	cvt.rzi.s32.f32	%r5, %f32;
	cvt.s32.s8 	%r6, %r5;
	st.param.b32	[funj_retval0+0], %r6;
	ret;
}

.visible .func  (.param .b32 funj_retval0) ___logv(
	.param .b32 ___logv_param_0
)
{
	.reg .pred 	%p<3>;
	.reg .s16 	%rs<2>;
	.reg .s32 	%r<7>;
	.reg .f32 	%f<30>;


	ld.param.u8 	%rs1, [___logv_param_0];
	cvt.rn.f32.u16	%f1, %rs1;
	setp.eq.s16	%p1, %rs1, 0;
	@%p1 bra 	BB28_2;

	mov.b32 	 %r1, %f1;
	and.b32  	%r2, %r1, 8388607;
	or.b32  	%r3, %r2, 1065353216;
	mov.b32 	 %f7, %r3;
	shr.u32 	%r4, %r1, 23;
	cvt.rn.f32.u32	%f8, %r4;
	add.f32 	%f9, %f8, 0fC2FE0000;
	setp.gt.f32	%p2, %f7, 0f3FAE147B;
	mul.f32 	%f10, %f7, 0f3F000000;
	add.f32 	%f11, %f9, 0f3F800000;
	selp.f32	%f12, %f10, %f7, %p2;
	selp.f32	%f13, %f11, %f9, %p2;
	add.f32 	%f6, %f12, 0f3F800000;
	add.f32 	%f14, %f12, 0fBF800000;
	// inline asm
	rcp.approx.ftz.f32 %f5,%f6;
	// inline asm
	neg.f32 	%f15, %f14;
	mul.f32 	%f16, %f14, %f15;
	mul.rn.f32 	%f17, %f5, %f16;
	add.rn.f32 	%f18, %f14, %f17;
	mul.f32 	%f19, %f18, %f18;
	mov.f32 	%f20, 0f3C4C6A36;
	mov.f32 	%f21, 0f3B1E94E6;
	fma.rn.f32 	%f22, %f21, %f19, %f20;
	mov.f32 	%f23, 0f3DAAAB1A;
	fma.rn.f32 	%f24, %f22, %f19, %f23;
	mul.f32 	%f25, %f24, %f19;
	fma.rn.f32 	%f26, %f25, %f18, %f17;
	add.f32 	%f27, %f26, %f14;
	mov.f32 	%f28, 0f3F317218;
	fma.rn.f32 	%f29, %f13, %f28, %f27;
	bra.uni 	BB28_3;

BB28_2:
	lg2.approx.f32 	%f29, %f1;

BB28_3:
	cvt.rzi.u32.f32	%r5, %f29;
	and.b32  	%r6, %r5, 255;
	st.param.b32	[funj_retval0+0], %r6;
	ret;
}

.visible .func  (.param .b64 funj_retval0) ___logd(
	.param .b64 ___logd_param_0
)
{
	.reg .pred 	%p<9>;
	.reg .s32 	%r<26>;
	.reg .f64 	%fd<58>;


	ld.param.f64 	%fd8, [___logd_param_0];
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r22}, %fd8;
	}
	setp.lt.s32	%p1, %r22, 2146435072;
	setp.gt.f64	%p2, %fd8, 0d0000000000000000;
	and.pred  	%p3, %p2, %p1;
	@%p3 bra 	BB29_6;

	abs.f64 	%fd9, %fd8;
	setp.gtu.f64	%p4, %fd9, 0d7FF0000000000000;
	@%p4 bra 	BB29_5;

	setp.neu.f64	%p5, %fd8, 0d0000000000000000;
	@%p5 bra 	BB29_4;

	mov.f64 	%fd57, 0dFFF0000000000000;
	bra.uni 	BB29_12;

BB29_4:
	setp.eq.f64	%p6, %fd8, 0d7FF0000000000000;
	selp.f64	%fd57, %fd8, 0dFFF8000000000000, %p6;
	bra.uni 	BB29_12;

BB29_5:
	add.f64 	%fd57, %fd8, %fd8;
	bra.uni 	BB29_12;

BB29_6:
	{
	.reg .b32 %temp; 
	mov.b64 	{%r23, %temp}, %fd8;
	}
	setp.lt.s32	%p7, %r22, 1048576;
	@%p7 bra 	BB29_8;

	mov.u32 	%r24, -1023;
	bra.uni 	BB29_9;

BB29_8:
	mul.f64 	%fd11, %fd8, 0d4350000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r22}, %fd11;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%r23, %temp}, %fd11;
	}
	mov.u32 	%r24, -1077;

BB29_9:
	shr.u32 	%r13, %r22, 20;
	add.s32 	%r25, %r24, %r13;
	and.b32  	%r14, %r22, -2146435073;
	or.b32  	%r15, %r14, 1072693248;
	mov.b64 	%fd56, {%r23, %r15};
	setp.lt.s32	%p8, %r15, 1073127583;
	@%p8 bra 	BB29_11;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r16, %temp}, %fd56;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r17}, %fd56;
	}
	add.s32 	%r18, %r17, -1048576;
	mov.b64 	%fd56, {%r16, %r18};
	add.s32 	%r25, %r25, 1;

BB29_11:
	add.f64 	%fd13, %fd56, 0d3FF0000000000000;
	mov.f64 	%fd14, 0d3FF0000000000000;
	// inline asm
	rcp.approx.ftz.f64 %fd12,%fd13;
	// inline asm
	neg.f64 	%fd15, %fd13;
	fma.rn.f64 	%fd16, %fd15, %fd12, %fd14;
	fma.rn.f64 	%fd17, %fd16, %fd16, %fd16;
	fma.rn.f64 	%fd18, %fd17, %fd12, %fd12;
	add.f64 	%fd19, %fd56, 0dBFF0000000000000;
	mul.f64 	%fd20, %fd19, %fd18;
	fma.rn.f64 	%fd21, %fd19, %fd18, %fd20;
	mul.f64 	%fd22, %fd21, %fd21;
	mov.f64 	%fd23, 0d3ED0EE258B7A8B04;
	mov.f64 	%fd24, 0d3EB1380B3AE80F1E;
	fma.rn.f64 	%fd25, %fd24, %fd22, %fd23;
	mov.f64 	%fd26, 0d3EF3B2669F02676F;
	fma.rn.f64 	%fd27, %fd25, %fd22, %fd26;
	mov.f64 	%fd28, 0d3F1745CBA9AB0956;
	fma.rn.f64 	%fd29, %fd27, %fd22, %fd28;
	mov.f64 	%fd30, 0d3F3C71C72D1B5154;
	fma.rn.f64 	%fd31, %fd29, %fd22, %fd30;
	mov.f64 	%fd32, 0d3F624924923BE72D;
	fma.rn.f64 	%fd33, %fd31, %fd22, %fd32;
	mov.f64 	%fd34, 0d3F8999999999A3C4;
	fma.rn.f64 	%fd35, %fd33, %fd22, %fd34;
	mov.f64 	%fd36, 0d3FB5555555555554;
	fma.rn.f64 	%fd37, %fd35, %fd22, %fd36;
	sub.f64 	%fd38, %fd19, %fd21;
	add.f64 	%fd39, %fd38, %fd38;
	neg.f64 	%fd40, %fd21;
	fma.rn.f64 	%fd41, %fd40, %fd19, %fd39;
	mul.f64 	%fd42, %fd18, %fd41;
	mul.f64 	%fd43, %fd37, %fd22;
	fma.rn.f64 	%fd44, %fd43, %fd21, %fd42;
	xor.b32  	%r19, %r25, -2147483648;
	mov.u32 	%r20, -2147483648;
	mov.u32 	%r21, 1127219200;
	mov.b64 	%fd45, {%r19, %r21};
	mov.b64 	%fd46, {%r20, %r21};
	sub.f64 	%fd47, %fd45, %fd46;
	mov.f64 	%fd48, 0d3FE62E42FEFA39EF;
	fma.rn.f64 	%fd49, %fd47, %fd48, %fd21;
	neg.f64 	%fd50, %fd47;
	fma.rn.f64 	%fd51, %fd50, %fd48, %fd49;
	sub.f64 	%fd52, %fd51, %fd21;
	sub.f64 	%fd53, %fd44, %fd52;
	mov.f64 	%fd54, 0d3C7ABC9E3B39803F;
	fma.rn.f64 	%fd55, %fd47, %fd54, %fd53;
	add.f64 	%fd57, %fd49, %fd55;

BB29_12:
	st.param.f64	[funj_retval0+0], %fd57;
	ret;
}

.visible .func  (.param .b32 funj_retval0) ___log10s(
	.param .b32 ___log10s_param_0
)
{
	.reg .pred 	%p<6>;
	.reg .s32 	%r<5>;
	.reg .f32 	%f<34>;


	ld.param.f32 	%f4, [___log10s_param_0];
	setp.gt.f32	%p1, %f4, 0f00000000;
	setp.lt.f32	%p2, %f4, 0f7F800000;
	and.pred  	%p3, %p1, %p2;
	@%p3 bra 	BB30_2;

	lg2.approx.f32 	%f33, %f4;
	bra.uni 	BB30_3;

BB30_2:
	setp.lt.f32	%p4, %f4, 0f00800000;
	mul.f32 	%f7, %f4, 0f4B800000;
	selp.f32	%f8, %f7, %f4, %p4;
	selp.f32	%f9, 0fC3170000, 0fC2FE0000, %p4;
	mov.b32 	 %r1, %f8;
	and.b32  	%r2, %r1, 8388607;
	or.b32  	%r3, %r2, 1065353216;
	mov.b32 	 %f10, %r3;
	shr.u32 	%r4, %r1, 23;
	cvt.rn.f32.u32	%f11, %r4;
	add.f32 	%f12, %f9, %f11;
	setp.gt.f32	%p5, %f10, 0f3FAE147B;
	mul.f32 	%f13, %f10, 0f3F000000;
	add.f32 	%f14, %f12, 0f3F800000;
	selp.f32	%f15, %f13, %f10, %p5;
	selp.f32	%f16, %f14, %f12, %p5;
	add.f32 	%f6, %f15, 0f3F800000;
	add.f32 	%f17, %f15, 0fBF800000;
	// inline asm
	rcp.approx.ftz.f32 %f5,%f6;
	// inline asm
	neg.f32 	%f18, %f17;
	mul.f32 	%f19, %f17, %f18;
	mul.rn.f32 	%f20, %f5, %f19;
	add.rn.f32 	%f21, %f17, %f20;
	mul.f32 	%f22, %f21, %f21;
	mov.f32 	%f23, 0f3C4C6A36;
	mov.f32 	%f24, 0f3B1E94E6;
	fma.rn.f32 	%f25, %f24, %f22, %f23;
	mov.f32 	%f26, 0f3DAAAB1A;
	fma.rn.f32 	%f27, %f25, %f22, %f26;
	mul.f32 	%f28, %f27, %f22;
	fma.rn.f32 	%f29, %f28, %f21, %f20;
	add.f32 	%f30, %f29, %f17;
	mov.f32 	%f31, 0f3F317218;
	fma.rn.f32 	%f33, %f16, %f31, %f30;

BB30_3:
	mul.f32 	%f32, %f33, 0f3EDE5BD9;
	st.param.f32	[funj_retval0+0], %f32;
	ret;
}

.visible .func  (.param .b32 funj_retval0) ___log10i(
	.param .b32 ___log10i_param_0
)
{
	.reg .pred 	%p<6>;
	.reg .s32 	%r<7>;
	.reg .f32 	%f<34>;


	ld.param.u32 	%r1, [___log10i_param_0];
	cvt.rn.f32.s32	%f1, %r1;
	setp.gt.f32	%p1, %f1, 0f00000000;
	setp.lt.f32	%p2, %f1, 0f7F800000;
	and.pred  	%p3, %p1, %p2;
	@%p3 bra 	BB31_2;

	lg2.approx.f32 	%f33, %f1;
	bra.uni 	BB31_3;

BB31_2:
	setp.lt.f32	%p4, %f1, 0f00800000;
	mul.f32 	%f7, %f1, 0f4B800000;
	selp.f32	%f8, %f7, %f1, %p4;
	selp.f32	%f9, 0fC3170000, 0fC2FE0000, %p4;
	mov.b32 	 %r2, %f8;
	and.b32  	%r3, %r2, 8388607;
	or.b32  	%r4, %r3, 1065353216;
	mov.b32 	 %f10, %r4;
	shr.u32 	%r5, %r2, 23;
	cvt.rn.f32.u32	%f11, %r5;
	add.f32 	%f12, %f9, %f11;
	setp.gt.f32	%p5, %f10, 0f3FAE147B;
	mul.f32 	%f13, %f10, 0f3F000000;
	add.f32 	%f14, %f12, 0f3F800000;
	selp.f32	%f15, %f13, %f10, %p5;
	selp.f32	%f16, %f14, %f12, %p5;
	add.f32 	%f6, %f15, 0f3F800000;
	add.f32 	%f17, %f15, 0fBF800000;
	// inline asm
	rcp.approx.ftz.f32 %f5,%f6;
	// inline asm
	neg.f32 	%f18, %f17;
	mul.f32 	%f19, %f17, %f18;
	mul.rn.f32 	%f20, %f5, %f19;
	add.rn.f32 	%f21, %f17, %f20;
	mul.f32 	%f22, %f21, %f21;
	mov.f32 	%f23, 0f3C4C6A36;
	mov.f32 	%f24, 0f3B1E94E6;
	fma.rn.f32 	%f25, %f24, %f22, %f23;
	mov.f32 	%f26, 0f3DAAAB1A;
	fma.rn.f32 	%f27, %f25, %f22, %f26;
	mul.f32 	%f28, %f27, %f22;
	fma.rn.f32 	%f29, %f28, %f21, %f20;
	add.f32 	%f30, %f29, %f17;
	mov.f32 	%f31, 0f3F317218;
	fma.rn.f32 	%f33, %f16, %f31, %f30;

BB31_3:
	mul.f32 	%f32, %f33, 0f3EDE5BD9;
	cvt.rzi.s32.f32	%r6, %f32;
	st.param.b32	[funj_retval0+0], %r6;
	ret;
}

.visible .func  (.param .b32 funj_retval0) ___log10u(
	.param .b32 ___log10u_param_0
)
{
	.reg .pred 	%p<6>;
	.reg .s32 	%r<7>;
	.reg .f32 	%f<34>;


	ld.param.u32 	%r1, [___log10u_param_0];
	cvt.rn.f32.u32	%f1, %r1;
	setp.gt.f32	%p1, %f1, 0f00000000;
	setp.lt.f32	%p2, %f1, 0f7F800000;
	and.pred  	%p3, %p1, %p2;
	@%p3 bra 	BB32_2;

	lg2.approx.f32 	%f33, %f1;
	bra.uni 	BB32_3;

BB32_2:
	setp.lt.f32	%p4, %f1, 0f00800000;
	mul.f32 	%f7, %f1, 0f4B800000;
	selp.f32	%f8, %f7, %f1, %p4;
	selp.f32	%f9, 0fC3170000, 0fC2FE0000, %p4;
	mov.b32 	 %r2, %f8;
	and.b32  	%r3, %r2, 8388607;
	or.b32  	%r4, %r3, 1065353216;
	mov.b32 	 %f10, %r4;
	shr.u32 	%r5, %r2, 23;
	cvt.rn.f32.u32	%f11, %r5;
	add.f32 	%f12, %f9, %f11;
	setp.gt.f32	%p5, %f10, 0f3FAE147B;
	mul.f32 	%f13, %f10, 0f3F000000;
	add.f32 	%f14, %f12, 0f3F800000;
	selp.f32	%f15, %f13, %f10, %p5;
	selp.f32	%f16, %f14, %f12, %p5;
	add.f32 	%f6, %f15, 0f3F800000;
	add.f32 	%f17, %f15, 0fBF800000;
	// inline asm
	rcp.approx.ftz.f32 %f5,%f6;
	// inline asm
	neg.f32 	%f18, %f17;
	mul.f32 	%f19, %f17, %f18;
	mul.rn.f32 	%f20, %f5, %f19;
	add.rn.f32 	%f21, %f17, %f20;
	mul.f32 	%f22, %f21, %f21;
	mov.f32 	%f23, 0f3C4C6A36;
	mov.f32 	%f24, 0f3B1E94E6;
	fma.rn.f32 	%f25, %f24, %f22, %f23;
	mov.f32 	%f26, 0f3DAAAB1A;
	fma.rn.f32 	%f27, %f25, %f22, %f26;
	mul.f32 	%f28, %f27, %f22;
	fma.rn.f32 	%f29, %f28, %f21, %f20;
	add.f32 	%f30, %f29, %f17;
	mov.f32 	%f31, 0f3F317218;
	fma.rn.f32 	%f33, %f16, %f31, %f30;

BB32_3:
	mul.f32 	%f32, %f33, 0f3EDE5BD9;
	cvt.rzi.u32.f32	%r6, %f32;
	st.param.b32	[funj_retval0+0], %r6;
	ret;
}

.visible .func  (.param .b32 funj_retval0) ___log10j(
	.param .b32 ___log10j_param_0
)
{
	.reg .pred 	%p<4>;
	.reg .s16 	%rs<2>;
	.reg .s32 	%r<7>;
	.reg .f32 	%f<34>;


	ld.param.s8 	%rs1, [___log10j_param_0];
	cvt.rn.f32.s16	%f1, %rs1;
	setp.gt.s16	%p1, %rs1, 0;
	@%p1 bra 	BB33_2;

	lg2.approx.f32 	%f33, %f1;
	bra.uni 	BB33_3;

BB33_2:
	setp.lt.s16	%p2, %rs1, 1;
	mul.f32 	%f7, %f1, 0f4B800000;
	selp.f32	%f8, %f7, %f1, %p2;
	selp.f32	%f9, 0fC3170000, 0fC2FE0000, %p2;
	mov.b32 	 %r1, %f8;
	and.b32  	%r2, %r1, 8388607;
	or.b32  	%r3, %r2, 1065353216;
	mov.b32 	 %f10, %r3;
	shr.u32 	%r4, %r1, 23;
	cvt.rn.f32.u32	%f11, %r4;
	add.f32 	%f12, %f9, %f11;
	setp.gt.f32	%p3, %f10, 0f3FAE147B;
	mul.f32 	%f13, %f10, 0f3F000000;
	add.f32 	%f14, %f12, 0f3F800000;
	selp.f32	%f15, %f13, %f10, %p3;
	selp.f32	%f16, %f14, %f12, %p3;
	add.f32 	%f6, %f15, 0f3F800000;
	add.f32 	%f17, %f15, 0fBF800000;
	// inline asm
	rcp.approx.ftz.f32 %f5,%f6;
	// inline asm
	neg.f32 	%f18, %f17;
	mul.f32 	%f19, %f17, %f18;
	mul.rn.f32 	%f20, %f5, %f19;
	add.rn.f32 	%f21, %f17, %f20;
	mul.f32 	%f22, %f21, %f21;
	mov.f32 	%f23, 0f3C4C6A36;
	mov.f32 	%f24, 0f3B1E94E6;
	fma.rn.f32 	%f25, %f24, %f22, %f23;
	mov.f32 	%f26, 0f3DAAAB1A;
	fma.rn.f32 	%f27, %f25, %f22, %f26;
	mul.f32 	%f28, %f27, %f22;
	fma.rn.f32 	%f29, %f28, %f21, %f20;
	add.f32 	%f30, %f29, %f17;
	mov.f32 	%f31, 0f3F317218;
	fma.rn.f32 	%f33, %f16, %f31, %f30;

BB33_3:
	mul.f32 	%f32, %f33, 0f3EDE5BD9;
	cvt.rzi.s32.f32	%r5, %f32;
	cvt.s32.s8 	%r6, %r5;
	st.param.b32	[funj_retval0+0], %r6;
	ret;
}

.visible .func  (.param .b32 funj_retval0) ___log10v(
	.param .b32 ___log10v_param_0
)
{
	.reg .pred 	%p<3>;
	.reg .s16 	%rs<2>;
	.reg .s32 	%r<7>;
	.reg .f32 	%f<31>;


	ld.param.u8 	%rs1, [___log10v_param_0];
	cvt.rn.f32.u16	%f1, %rs1;
	setp.eq.s16	%p1, %rs1, 0;
	@%p1 bra 	BB34_2;

	mov.b32 	 %r1, %f1;
	and.b32  	%r2, %r1, 8388607;
	or.b32  	%r3, %r2, 1065353216;
	mov.b32 	 %f7, %r3;
	shr.u32 	%r4, %r1, 23;
	cvt.rn.f32.u32	%f8, %r4;
	add.f32 	%f9, %f8, 0fC2FE0000;
	setp.gt.f32	%p2, %f7, 0f3FAE147B;
	mul.f32 	%f10, %f7, 0f3F000000;
	add.f32 	%f11, %f9, 0f3F800000;
	selp.f32	%f12, %f10, %f7, %p2;
	selp.f32	%f13, %f11, %f9, %p2;
	add.f32 	%f6, %f12, 0f3F800000;
	add.f32 	%f14, %f12, 0fBF800000;
	// inline asm
	rcp.approx.ftz.f32 %f5,%f6;
	// inline asm
	neg.f32 	%f15, %f14;
	mul.f32 	%f16, %f14, %f15;
	mul.rn.f32 	%f17, %f5, %f16;
	add.rn.f32 	%f18, %f14, %f17;
	mul.f32 	%f19, %f18, %f18;
	mov.f32 	%f20, 0f3C4C6A36;
	mov.f32 	%f21, 0f3B1E94E6;
	fma.rn.f32 	%f22, %f21, %f19, %f20;
	mov.f32 	%f23, 0f3DAAAB1A;
	fma.rn.f32 	%f24, %f22, %f19, %f23;
	mul.f32 	%f25, %f24, %f19;
	fma.rn.f32 	%f26, %f25, %f18, %f17;
	add.f32 	%f27, %f26, %f14;
	mov.f32 	%f28, 0f3F317218;
	fma.rn.f32 	%f30, %f13, %f28, %f27;
	bra.uni 	BB34_3;

BB34_2:
	lg2.approx.f32 	%f30, %f1;

BB34_3:
	mul.f32 	%f29, %f30, 0f3EDE5BD9;
	cvt.rzi.u32.f32	%r5, %f29;
	and.b32  	%r6, %r5, 255;
	st.param.b32	[funj_retval0+0], %r6;
	ret;
}

.visible .func  (.param .b64 funj_retval0) ___log10d(
	.param .b64 ___log10d_param_0
)
{
	.reg .pred 	%p<9>;
	.reg .s32 	%r<26>;
	.reg .f64 	%fd<61>;


	ld.param.f64 	%fd8, [___log10d_param_0];
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r22}, %fd8;
	}
	setp.lt.s32	%p1, %r22, 2146435072;
	setp.gt.f64	%p2, %fd8, 0d0000000000000000;
	and.pred  	%p3, %p2, %p1;
	@%p3 bra 	BB35_6;

	abs.f64 	%fd9, %fd8;
	setp.gtu.f64	%p4, %fd9, 0d7FF0000000000000;
	@%p4 bra 	BB35_5;

	setp.neu.f64	%p5, %fd8, 0d0000000000000000;
	@%p5 bra 	BB35_4;

	mov.f64 	%fd60, 0dFFF0000000000000;
	bra.uni 	BB35_12;

BB35_4:
	setp.eq.f64	%p6, %fd8, 0d7FF0000000000000;
	selp.f64	%fd60, %fd8, 0dFFF8000000000000, %p6;
	bra.uni 	BB35_12;

BB35_5:
	add.f64 	%fd60, %fd8, %fd8;
	bra.uni 	BB35_12;

BB35_6:
	{
	.reg .b32 %temp; 
	mov.b64 	{%r23, %temp}, %fd8;
	}
	setp.lt.s32	%p7, %r22, 1048576;
	@%p7 bra 	BB35_8;

	mov.u32 	%r24, -1023;
	bra.uni 	BB35_9;

BB35_8:
	mul.f64 	%fd11, %fd8, 0d4350000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r22}, %fd11;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%r23, %temp}, %fd11;
	}
	mov.u32 	%r24, -1077;

BB35_9:
	shr.u32 	%r13, %r22, 20;
	add.s32 	%r25, %r24, %r13;
	and.b32  	%r14, %r22, -2146435073;
	or.b32  	%r15, %r14, 1072693248;
	mov.b64 	%fd59, {%r23, %r15};
	setp.lt.s32	%p8, %r15, 1073127583;
	@%p8 bra 	BB35_11;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r16, %temp}, %fd59;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r17}, %fd59;
	}
	add.s32 	%r18, %r17, -1048576;
	mov.b64 	%fd59, {%r16, %r18};
	add.s32 	%r25, %r25, 1;

BB35_11:
	add.f64 	%fd13, %fd59, 0d3FF0000000000000;
	mov.f64 	%fd14, 0d3FF0000000000000;
	// inline asm
	rcp.approx.ftz.f64 %fd12,%fd13;
	// inline asm
	neg.f64 	%fd15, %fd13;
	fma.rn.f64 	%fd16, %fd15, %fd12, %fd14;
	fma.rn.f64 	%fd17, %fd16, %fd16, %fd16;
	fma.rn.f64 	%fd18, %fd17, %fd12, %fd12;
	add.f64 	%fd19, %fd59, 0dBFF0000000000000;
	mul.f64 	%fd20, %fd19, %fd18;
	fma.rn.f64 	%fd21, %fd19, %fd18, %fd20;
	mul.f64 	%fd22, %fd21, %fd21;
	mov.f64 	%fd23, 0d3ED0EE258B7A8B04;
	mov.f64 	%fd24, 0d3EB1380B3AE80F1E;
	fma.rn.f64 	%fd25, %fd24, %fd22, %fd23;
	mov.f64 	%fd26, 0d3EF3B2669F02676F;
	fma.rn.f64 	%fd27, %fd25, %fd22, %fd26;
	mov.f64 	%fd28, 0d3F1745CBA9AB0956;
	fma.rn.f64 	%fd29, %fd27, %fd22, %fd28;
	mov.f64 	%fd30, 0d3F3C71C72D1B5154;
	fma.rn.f64 	%fd31, %fd29, %fd22, %fd30;
	mov.f64 	%fd32, 0d3F624924923BE72D;
	fma.rn.f64 	%fd33, %fd31, %fd22, %fd32;
	mov.f64 	%fd34, 0d3F8999999999A3C4;
	fma.rn.f64 	%fd35, %fd33, %fd22, %fd34;
	mov.f64 	%fd36, 0d3FB5555555555554;
	fma.rn.f64 	%fd37, %fd35, %fd22, %fd36;
	sub.f64 	%fd38, %fd19, %fd21;
	add.f64 	%fd39, %fd38, %fd38;
	neg.f64 	%fd40, %fd21;
	fma.rn.f64 	%fd41, %fd40, %fd19, %fd39;
	mul.f64 	%fd42, %fd18, %fd41;
	mul.f64 	%fd43, %fd37, %fd22;
	fma.rn.f64 	%fd44, %fd43, %fd21, %fd42;
	xor.b32  	%r19, %r25, -2147483648;
	mov.u32 	%r20, -2147483648;
	mov.u32 	%r21, 1127219200;
	mov.b64 	%fd45, {%r19, %r21};
	mov.b64 	%fd46, {%r20, %r21};
	sub.f64 	%fd47, %fd45, %fd46;
	mov.f64 	%fd48, 0d3FE62E42FEFA39EF;
	fma.rn.f64 	%fd49, %fd47, %fd48, %fd21;
	neg.f64 	%fd50, %fd47;
	fma.rn.f64 	%fd51, %fd50, %fd48, %fd49;
	sub.f64 	%fd52, %fd51, %fd21;
	sub.f64 	%fd53, %fd44, %fd52;
	mov.f64 	%fd54, 0d3C7ABC9E3B39803F;
	fma.rn.f64 	%fd55, %fd47, %fd54, %fd53;
	add.f64 	%fd60, %fd49, %fd55;

BB35_12:
	mul.f64 	%fd56, %fd60, 0d3C695355BAAAFAD3;
	mov.f64 	%fd57, 0d3FDBCB7B1526E50E;
	fma.rn.f64 	%fd58, %fd60, %fd57, %fd56;
	st.param.f64	[funj_retval0+0], %fd58;
	ret;
}

.visible .func  (.param .b32 funj_retval0) ___log1ps(
	.param .b32 ___log1ps_param_0
)
{
	.reg .pred 	%p<9>;
	.reg .s32 	%r<5>;
	.reg .f32 	%f<48>;


	ld.param.f32 	%f6, [___log1ps_param_0];
	setp.le.f32	%p1, %f6, 0f3F266666;
	setp.ge.f32	%p2, %f6, 0fBEC9BA5E;
	and.pred  	%p3, %p2, %p1;
	@%p3 bra 	BB36_4;

	add.f32 	%f1, %f6, 0f3F800000;
	setp.gt.f32	%p4, %f1, 0f00000000;
	setp.lt.f32	%p5, %f1, 0f7F800000;
	and.pred  	%p6, %p4, %p5;
	@%p6 bra 	BB36_3;

	lg2.approx.f32 	%f47, %f1;
	bra.uni 	BB36_5;

BB36_3:
	setp.lt.f32	%p7, %f1, 0f00800000;
	mul.f32 	%f9, %f1, 0f4B800000;
	selp.f32	%f10, %f9, %f1, %p7;
	selp.f32	%f11, 0fC3170000, 0fC2FE0000, %p7;
	mov.b32 	 %r1, %f10;
	and.b32  	%r2, %r1, 8388607;
	or.b32  	%r3, %r2, 1065353216;
	mov.b32 	 %f12, %r3;
	shr.u32 	%r4, %r1, 23;
	cvt.rn.f32.u32	%f13, %r4;
	add.f32 	%f14, %f11, %f13;
	setp.gt.f32	%p8, %f12, 0f3FAE147B;
	mul.f32 	%f15, %f12, 0f3F000000;
	add.f32 	%f16, %f14, 0f3F800000;
	selp.f32	%f17, %f15, %f12, %p8;
	selp.f32	%f18, %f16, %f14, %p8;
	add.f32 	%f8, %f17, 0f3F800000;
	add.f32 	%f19, %f17, 0fBF800000;
	// inline asm
	rcp.approx.ftz.f32 %f7,%f8;
	// inline asm
	neg.f32 	%f20, %f19;
	mul.f32 	%f21, %f19, %f20;
	mul.rn.f32 	%f22, %f7, %f21;
	add.rn.f32 	%f23, %f19, %f22;
	mul.f32 	%f24, %f23, %f23;
	mov.f32 	%f25, 0f3C4C6A36;
	mov.f32 	%f26, 0f3B1E94E6;
	fma.rn.f32 	%f27, %f26, %f24, %f25;
	mov.f32 	%f28, 0f3DAAAB1A;
	fma.rn.f32 	%f29, %f27, %f24, %f28;
	mul.f32 	%f30, %f29, %f24;
	fma.rn.f32 	%f31, %f30, %f23, %f22;
	add.f32 	%f32, %f31, %f19;
	mov.f32 	%f33, 0f3F317218;
	fma.rn.f32 	%f47, %f18, %f33, %f32;
	bra.uni 	BB36_5;

BB36_4:
	add.f32 	%f34, %f6, 0f40000000;
	div.approx.f32 	%f35, %f6, %f34;
	neg.f32 	%f36, %f6;
	mul.rn.f32 	%f37, %f36, %f35;
	add.rn.f32 	%f38, %f6, %f37;
	mul.f32 	%f39, %f38, %f38;
	mov.f32 	%f40, 0f3C4C4BE0;
	mov.f32 	%f41, 0f3B2063C3;
	fma.rn.f32 	%f42, %f41, %f39, %f40;
	mov.f32 	%f43, 0f3DAAAB50;
	fma.rn.f32 	%f44, %f42, %f39, %f43;
	mul.f32 	%f45, %f44, %f39;
	fma.rn.f32 	%f46, %f45, %f38, %f37;
	add.f32 	%f47, %f46, %f6;

BB36_5:
	st.param.f32	[funj_retval0+0], %f47;
	ret;
}

.visible .func  (.param .b32 funj_retval0) ___log1pi(
	.param .b32 ___log1pi_param_0
)
{
	.reg .pred 	%p<9>;
	.reg .s32 	%r<7>;
	.reg .f32 	%f<48>;


	ld.param.u32 	%r1, [___log1pi_param_0];
	cvt.rn.f32.s32	%f1, %r1;
	setp.le.f32	%p1, %f1, 0f3F266666;
	setp.ge.f32	%p2, %f1, 0fBEC9BA5E;
	and.pred  	%p3, %p2, %p1;
	@%p3 bra 	BB37_4;

	add.f32 	%f2, %f1, 0f3F800000;
	setp.gt.f32	%p4, %f2, 0f00000000;
	setp.lt.f32	%p5, %f2, 0f7F800000;
	and.pred  	%p6, %p4, %p5;
	@%p6 bra 	BB37_3;

	lg2.approx.f32 	%f47, %f2;
	bra.uni 	BB37_5;

BB37_3:
	setp.lt.f32	%p7, %f2, 0f00800000;
	mul.f32 	%f9, %f2, 0f4B800000;
	selp.f32	%f10, %f9, %f2, %p7;
	selp.f32	%f11, 0fC3170000, 0fC2FE0000, %p7;
	mov.b32 	 %r2, %f10;
	and.b32  	%r3, %r2, 8388607;
	or.b32  	%r4, %r3, 1065353216;
	mov.b32 	 %f12, %r4;
	shr.u32 	%r5, %r2, 23;
	cvt.rn.f32.u32	%f13, %r5;
	add.f32 	%f14, %f11, %f13;
	setp.gt.f32	%p8, %f12, 0f3FAE147B;
	mul.f32 	%f15, %f12, 0f3F000000;
	add.f32 	%f16, %f14, 0f3F800000;
	selp.f32	%f17, %f15, %f12, %p8;
	selp.f32	%f18, %f16, %f14, %p8;
	add.f32 	%f8, %f17, 0f3F800000;
	add.f32 	%f19, %f17, 0fBF800000;
	// inline asm
	rcp.approx.ftz.f32 %f7,%f8;
	// inline asm
	neg.f32 	%f20, %f19;
	mul.f32 	%f21, %f19, %f20;
	mul.rn.f32 	%f22, %f7, %f21;
	add.rn.f32 	%f23, %f19, %f22;
	mul.f32 	%f24, %f23, %f23;
	mov.f32 	%f25, 0f3C4C6A36;
	mov.f32 	%f26, 0f3B1E94E6;
	fma.rn.f32 	%f27, %f26, %f24, %f25;
	mov.f32 	%f28, 0f3DAAAB1A;
	fma.rn.f32 	%f29, %f27, %f24, %f28;
	mul.f32 	%f30, %f29, %f24;
	fma.rn.f32 	%f31, %f30, %f23, %f22;
	add.f32 	%f32, %f31, %f19;
	mov.f32 	%f33, 0f3F317218;
	fma.rn.f32 	%f47, %f18, %f33, %f32;
	bra.uni 	BB37_5;

BB37_4:
	add.f32 	%f34, %f1, 0f40000000;
	div.approx.f32 	%f35, %f1, %f34;
	neg.f32 	%f36, %f1;
	mul.rn.f32 	%f37, %f36, %f35;
	add.rn.f32 	%f38, %f1, %f37;
	mul.f32 	%f39, %f38, %f38;
	mov.f32 	%f40, 0f3C4C4BE0;
	mov.f32 	%f41, 0f3B2063C3;
	fma.rn.f32 	%f42, %f41, %f39, %f40;
	mov.f32 	%f43, 0f3DAAAB50;
	fma.rn.f32 	%f44, %f42, %f39, %f43;
	mul.f32 	%f45, %f44, %f39;
	fma.rn.f32 	%f46, %f45, %f38, %f37;
	add.f32 	%f47, %f46, %f1;

BB37_5:
	cvt.rzi.s32.f32	%r6, %f47;
	st.param.b32	[funj_retval0+0], %r6;
	ret;
}

.visible .func  (.param .b32 funj_retval0) ___log1pu(
	.param .b32 ___log1pu_param_0
)
{
	.reg .pred 	%p<9>;
	.reg .s32 	%r<7>;
	.reg .f32 	%f<48>;


	ld.param.u32 	%r1, [___log1pu_param_0];
	cvt.rn.f32.u32	%f1, %r1;
	setp.le.f32	%p1, %f1, 0f3F266666;
	setp.ge.f32	%p2, %f1, 0fBEC9BA5E;
	and.pred  	%p3, %p2, %p1;
	@%p3 bra 	BB38_4;

	add.f32 	%f2, %f1, 0f3F800000;
	setp.gt.f32	%p4, %f2, 0f00000000;
	setp.lt.f32	%p5, %f2, 0f7F800000;
	and.pred  	%p6, %p4, %p5;
	@%p6 bra 	BB38_3;

	lg2.approx.f32 	%f47, %f2;
	bra.uni 	BB38_5;

BB38_3:
	setp.lt.f32	%p7, %f2, 0f00800000;
	mul.f32 	%f9, %f2, 0f4B800000;
	selp.f32	%f10, %f9, %f2, %p7;
	selp.f32	%f11, 0fC3170000, 0fC2FE0000, %p7;
	mov.b32 	 %r2, %f10;
	and.b32  	%r3, %r2, 8388607;
	or.b32  	%r4, %r3, 1065353216;
	mov.b32 	 %f12, %r4;
	shr.u32 	%r5, %r2, 23;
	cvt.rn.f32.u32	%f13, %r5;
	add.f32 	%f14, %f11, %f13;
	setp.gt.f32	%p8, %f12, 0f3FAE147B;
	mul.f32 	%f15, %f12, 0f3F000000;
	add.f32 	%f16, %f14, 0f3F800000;
	selp.f32	%f17, %f15, %f12, %p8;
	selp.f32	%f18, %f16, %f14, %p8;
	add.f32 	%f8, %f17, 0f3F800000;
	add.f32 	%f19, %f17, 0fBF800000;
	// inline asm
	rcp.approx.ftz.f32 %f7,%f8;
	// inline asm
	neg.f32 	%f20, %f19;
	mul.f32 	%f21, %f19, %f20;
	mul.rn.f32 	%f22, %f7, %f21;
	add.rn.f32 	%f23, %f19, %f22;
	mul.f32 	%f24, %f23, %f23;
	mov.f32 	%f25, 0f3C4C6A36;
	mov.f32 	%f26, 0f3B1E94E6;
	fma.rn.f32 	%f27, %f26, %f24, %f25;
	mov.f32 	%f28, 0f3DAAAB1A;
	fma.rn.f32 	%f29, %f27, %f24, %f28;
	mul.f32 	%f30, %f29, %f24;
	fma.rn.f32 	%f31, %f30, %f23, %f22;
	add.f32 	%f32, %f31, %f19;
	mov.f32 	%f33, 0f3F317218;
	fma.rn.f32 	%f47, %f18, %f33, %f32;
	bra.uni 	BB38_5;

BB38_4:
	add.f32 	%f34, %f1, 0f40000000;
	div.approx.f32 	%f35, %f1, %f34;
	neg.f32 	%f36, %f1;
	mul.rn.f32 	%f37, %f36, %f35;
	add.rn.f32 	%f38, %f1, %f37;
	mul.f32 	%f39, %f38, %f38;
	mov.f32 	%f40, 0f3C4C4BE0;
	mov.f32 	%f41, 0f3B2063C3;
	fma.rn.f32 	%f42, %f41, %f39, %f40;
	mov.f32 	%f43, 0f3DAAAB50;
	fma.rn.f32 	%f44, %f42, %f39, %f43;
	mul.f32 	%f45, %f44, %f39;
	fma.rn.f32 	%f46, %f45, %f38, %f37;
	add.f32 	%f47, %f46, %f1;

BB38_5:
	cvt.rzi.u32.f32	%r6, %f47;
	st.param.b32	[funj_retval0+0], %r6;
	ret;
}

.visible .func  (.param .b32 funj_retval0) ___log1pj(
	.param .b32 ___log1pj_param_0
)
{
	.reg .pred 	%p<7>;
	.reg .s16 	%rs<3>;
	.reg .s32 	%r<7>;
	.reg .f32 	%f<48>;


	ld.param.s8 	%rs1, [___log1pj_param_0];
	cvt.rn.f32.s16	%f1, %rs1;
	and.b16  	%rs2, %rs1, 255;
	setp.eq.s16	%p1, %rs2, 0;
	@%p1 bra 	BB39_4;

	add.f32 	%f2, %f1, 0f3F800000;
	setp.gt.f32	%p2, %f2, 0f00000000;
	setp.lt.f32	%p3, %f2, 0f7F800000;
	and.pred  	%p4, %p2, %p3;
	@%p4 bra 	BB39_3;

	lg2.approx.f32 	%f47, %f2;
	bra.uni 	BB39_5;

BB39_3:
	setp.lt.f32	%p5, %f2, 0f00800000;
	mul.f32 	%f9, %f2, 0f4B800000;
	selp.f32	%f10, %f9, %f2, %p5;
	selp.f32	%f11, 0fC3170000, 0fC2FE0000, %p5;
	mov.b32 	 %r1, %f10;
	and.b32  	%r2, %r1, 8388607;
	or.b32  	%r3, %r2, 1065353216;
	mov.b32 	 %f12, %r3;
	shr.u32 	%r4, %r1, 23;
	cvt.rn.f32.u32	%f13, %r4;
	add.f32 	%f14, %f11, %f13;
	setp.gt.f32	%p6, %f12, 0f3FAE147B;
	mul.f32 	%f15, %f12, 0f3F000000;
	add.f32 	%f16, %f14, 0f3F800000;
	selp.f32	%f17, %f15, %f12, %p6;
	selp.f32	%f18, %f16, %f14, %p6;
	add.f32 	%f8, %f17, 0f3F800000;
	add.f32 	%f19, %f17, 0fBF800000;
	// inline asm
	rcp.approx.ftz.f32 %f7,%f8;
	// inline asm
	neg.f32 	%f20, %f19;
	mul.f32 	%f21, %f19, %f20;
	mul.rn.f32 	%f22, %f7, %f21;
	add.rn.f32 	%f23, %f19, %f22;
	mul.f32 	%f24, %f23, %f23;
	mov.f32 	%f25, 0f3C4C6A36;
	mov.f32 	%f26, 0f3B1E94E6;
	fma.rn.f32 	%f27, %f26, %f24, %f25;
	mov.f32 	%f28, 0f3DAAAB1A;
	fma.rn.f32 	%f29, %f27, %f24, %f28;
	mul.f32 	%f30, %f29, %f24;
	fma.rn.f32 	%f31, %f30, %f23, %f22;
	add.f32 	%f32, %f31, %f19;
	mov.f32 	%f33, 0f3F317218;
	fma.rn.f32 	%f47, %f18, %f33, %f32;
	bra.uni 	BB39_5;

BB39_4:
	add.f32 	%f34, %f1, 0f40000000;
	div.approx.f32 	%f35, %f1, %f34;
	neg.f32 	%f36, %f1;
	mul.rn.f32 	%f37, %f36, %f35;
	add.rn.f32 	%f38, %f1, %f37;
	mul.f32 	%f39, %f38, %f38;
	mov.f32 	%f40, 0f3C4C4BE0;
	mov.f32 	%f41, 0f3B2063C3;
	fma.rn.f32 	%f42, %f41, %f39, %f40;
	mov.f32 	%f43, 0f3DAAAB50;
	fma.rn.f32 	%f44, %f42, %f39, %f43;
	mul.f32 	%f45, %f44, %f39;
	fma.rn.f32 	%f46, %f45, %f38, %f37;
	add.f32 	%f47, %f46, %f1;

BB39_5:
	cvt.rzi.s32.f32	%r5, %f47;
	cvt.s32.s8 	%r6, %r5;
	st.param.b32	[funj_retval0+0], %r6;
	ret;
}

.visible .func  (.param .b32 funj_retval0) ___log1pv(
	.param .b32 ___log1pv_param_0
)
{
	.reg .pred 	%p<6>;
	.reg .s16 	%rs<2>;
	.reg .s32 	%r<7>;
	.reg .f32 	%f<34>;


	ld.param.u8 	%rs1, [___log1pv_param_0];
	cvt.rn.f32.u16	%f5, %rs1;
	add.f32 	%f1, %f5, 0f3F800000;
	setp.gt.f32	%p1, %f1, 0f00000000;
	setp.lt.f32	%p2, %f1, 0f7F800000;
	and.pred  	%p3, %p1, %p2;
	@%p3 bra 	BB40_2;

	lg2.approx.f32 	%f33, %f1;
	bra.uni 	BB40_3;

BB40_2:
	setp.lt.f32	%p4, %f1, 0f00800000;
	mul.f32 	%f8, %f1, 0f4B800000;
	selp.f32	%f9, %f8, %f1, %p4;
	selp.f32	%f10, 0fC3170000, 0fC2FE0000, %p4;
	mov.b32 	 %r1, %f9;
	and.b32  	%r2, %r1, 8388607;
	or.b32  	%r3, %r2, 1065353216;
	mov.b32 	 %f11, %r3;
	shr.u32 	%r4, %r1, 23;
	cvt.rn.f32.u32	%f12, %r4;
	add.f32 	%f13, %f10, %f12;
	setp.gt.f32	%p5, %f11, 0f3FAE147B;
	mul.f32 	%f14, %f11, 0f3F000000;
	add.f32 	%f15, %f13, 0f3F800000;
	selp.f32	%f16, %f14, %f11, %p5;
	selp.f32	%f17, %f15, %f13, %p5;
	add.f32 	%f7, %f16, 0f3F800000;
	add.f32 	%f18, %f16, 0fBF800000;
	// inline asm
	rcp.approx.ftz.f32 %f6,%f7;
	// inline asm
	neg.f32 	%f19, %f18;
	mul.f32 	%f20, %f18, %f19;
	mul.rn.f32 	%f21, %f6, %f20;
	add.rn.f32 	%f22, %f18, %f21;
	mul.f32 	%f23, %f22, %f22;
	mov.f32 	%f24, 0f3C4C6A36;
	mov.f32 	%f25, 0f3B1E94E6;
	fma.rn.f32 	%f26, %f25, %f23, %f24;
	mov.f32 	%f27, 0f3DAAAB1A;
	fma.rn.f32 	%f28, %f26, %f23, %f27;
	mul.f32 	%f29, %f28, %f23;
	fma.rn.f32 	%f30, %f29, %f22, %f21;
	add.f32 	%f31, %f30, %f18;
	mov.f32 	%f32, 0f3F317218;
	fma.rn.f32 	%f33, %f17, %f32, %f31;

BB40_3:
	cvt.rzi.u32.f32	%r5, %f33;
	and.b32  	%r6, %r5, 255;
	st.param.b32	[funj_retval0+0], %r6;
	ret;
}

.visible .func  (.param .b64 funj_retval0) ___log1pd(
	.param .b64 ___log1pd_param_0
)
{
	.reg .pred 	%p<12>;
	.reg .s32 	%r<27>;
	.reg .f64 	%fd<83>;


	ld.param.f64 	%fd10, [___log1pd_param_0];
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r11}, %fd10;
	}
	setp.lt.u32	%p1, %r11, 1071994197;
	setp.lt.s32	%p2, %r11, -1076258407;
	or.pred  	%p3, %p1, %p2;
	@%p3 bra 	BB41_13;

	add.f64 	%fd1, %fd10, 0d3FF0000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r23}, %fd1;
	}
	setp.gt.f64	%p4, %fd1, 0d0000000000000000;
	setp.lt.s32	%p5, %r23, 2146435072;
	and.pred  	%p6, %p4, %p5;
	@%p6 bra 	BB41_7;

	abs.f64 	%fd11, %fd1;
	setp.gtu.f64	%p7, %fd11, 0d7FF0000000000000;
	@%p7 bra 	BB41_6;

	setp.neu.f64	%p8, %fd1, 0d0000000000000000;
	@%p8 bra 	BB41_5;

	mov.f64 	%fd82, 0dFFF0000000000000;
	bra.uni 	BB41_14;

BB41_5:
	setp.eq.f64	%p9, %fd1, 0d7FF0000000000000;
	selp.f64	%fd82, %fd1, 0dFFF8000000000000, %p9;
	bra.uni 	BB41_14;

BB41_6:
	add.f64 	%fd82, %fd1, %fd1;
	bra.uni 	BB41_14;

BB41_7:
	{
	.reg .b32 %temp; 
	mov.b64 	{%r24, %temp}, %fd1;
	}
	setp.lt.s32	%p10, %r23, 1048576;
	@%p10 bra 	BB41_9;

	mov.u32 	%r25, -1023;
	bra.uni 	BB41_10;

BB41_9:
	mul.f64 	%fd13, %fd1, 0d4350000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r23}, %fd13;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%r24, %temp}, %fd13;
	}
	mov.u32 	%r25, -1077;

BB41_10:
	shr.u32 	%r14, %r23, 20;
	add.s32 	%r26, %r25, %r14;
	and.b32  	%r15, %r23, -2146435073;
	or.b32  	%r16, %r15, 1072693248;
	mov.b64 	%fd81, {%r24, %r16};
	setp.lt.s32	%p11, %r16, 1073127583;
	@%p11 bra 	BB41_12;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r17, %temp}, %fd81;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r18}, %fd81;
	}
	add.s32 	%r19, %r18, -1048576;
	mov.b64 	%fd81, {%r17, %r19};
	add.s32 	%r26, %r26, 1;

BB41_12:
	add.f64 	%fd15, %fd81, 0d3FF0000000000000;
	mov.f64 	%fd16, 0d3FF0000000000000;
	// inline asm
	rcp.approx.ftz.f64 %fd14,%fd15;
	// inline asm
	neg.f64 	%fd17, %fd15;
	fma.rn.f64 	%fd18, %fd17, %fd14, %fd16;
	fma.rn.f64 	%fd19, %fd18, %fd18, %fd18;
	fma.rn.f64 	%fd20, %fd19, %fd14, %fd14;
	add.f64 	%fd21, %fd81, 0dBFF0000000000000;
	mul.f64 	%fd22, %fd21, %fd20;
	fma.rn.f64 	%fd23, %fd21, %fd20, %fd22;
	mul.f64 	%fd24, %fd23, %fd23;
	mov.f64 	%fd25, 0d3ED0EE258B7A8B04;
	mov.f64 	%fd26, 0d3EB1380B3AE80F1E;
	fma.rn.f64 	%fd27, %fd26, %fd24, %fd25;
	mov.f64 	%fd28, 0d3EF3B2669F02676F;
	fma.rn.f64 	%fd29, %fd27, %fd24, %fd28;
	mov.f64 	%fd30, 0d3F1745CBA9AB0956;
	fma.rn.f64 	%fd31, %fd29, %fd24, %fd30;
	mov.f64 	%fd32, 0d3F3C71C72D1B5154;
	fma.rn.f64 	%fd33, %fd31, %fd24, %fd32;
	mov.f64 	%fd34, 0d3F624924923BE72D;
	fma.rn.f64 	%fd35, %fd33, %fd24, %fd34;
	mov.f64 	%fd36, 0d3F8999999999A3C4;
	fma.rn.f64 	%fd37, %fd35, %fd24, %fd36;
	mov.f64 	%fd38, 0d3FB5555555555554;
	fma.rn.f64 	%fd39, %fd37, %fd24, %fd38;
	sub.f64 	%fd40, %fd21, %fd23;
	add.f64 	%fd41, %fd40, %fd40;
	neg.f64 	%fd42, %fd23;
	fma.rn.f64 	%fd43, %fd42, %fd21, %fd41;
	mul.f64 	%fd44, %fd20, %fd43;
	mul.f64 	%fd45, %fd39, %fd24;
	fma.rn.f64 	%fd46, %fd45, %fd23, %fd44;
	xor.b32  	%r20, %r26, -2147483648;
	mov.u32 	%r21, -2147483648;
	mov.u32 	%r22, 1127219200;
	mov.b64 	%fd47, {%r20, %r22};
	mov.b64 	%fd48, {%r21, %r22};
	sub.f64 	%fd49, %fd47, %fd48;
	mov.f64 	%fd50, 0d3FE62E42FEFA39EF;
	fma.rn.f64 	%fd51, %fd49, %fd50, %fd23;
	neg.f64 	%fd52, %fd49;
	fma.rn.f64 	%fd53, %fd52, %fd50, %fd51;
	sub.f64 	%fd54, %fd53, %fd23;
	sub.f64 	%fd55, %fd46, %fd54;
	mov.f64 	%fd56, 0d3C7ABC9E3B39803F;
	fma.rn.f64 	%fd57, %fd49, %fd56, %fd55;
	add.f64 	%fd82, %fd51, %fd57;
	bra.uni 	BB41_14;

BB41_13:
	add.f64 	%fd58, %fd10, 0d4000000000000000;
	div.rn.f64 	%fd59, %fd10, %fd58;
	neg.f64 	%fd60, %fd10;
	mul.f64 	%fd61, %fd59, %fd60;
	add.f64 	%fd62, %fd61, %fd10;
	mul.f64 	%fd63, %fd62, %fd62;
	mov.f64 	%fd64, 0d3ED087FFCEB2DC44;
	mov.f64 	%fd65, 0d3EB372FB2FBE14B5;
	fma.rn.f64 	%fd66, %fd65, %fd63, %fd64;
	mov.f64 	%fd67, 0d3EF3B9FF890F468C;
	fma.rn.f64 	%fd68, %fd66, %fd63, %fd67;
	mov.f64 	%fd69, 0d3F17457EFD51BAF8;
	fma.rn.f64 	%fd70, %fd68, %fd63, %fd69;
	mov.f64 	%fd71, 0d3F3C71C8DE3CE825;
	fma.rn.f64 	%fd72, %fd70, %fd63, %fd71;
	mov.f64 	%fd73, 0d3F6249248FA4661F;
	fma.rn.f64 	%fd74, %fd72, %fd63, %fd73;
	mov.f64 	%fd75, 0d3F899999999D70C4;
	fma.rn.f64 	%fd76, %fd74, %fd63, %fd75;
	mov.f64 	%fd77, 0d3FB5555555555462;
	fma.rn.f64 	%fd78, %fd76, %fd63, %fd77;
	mul.f64 	%fd79, %fd78, %fd63;
	fma.rn.f64 	%fd80, %fd79, %fd62, %fd61;
	add.f64 	%fd82, %fd80, %fd10;

BB41_14:
	st.param.f64	[funj_retval0+0], %fd82;
	ret;
}

.visible .func  (.param .b32 funj_retval0) ___sqrts(
	.param .b32 ___sqrts_param_0
)
{
	.reg .f32 	%f<3>;


	ld.param.f32 	%f1, [___sqrts_param_0];
	sqrt.rn.f32 	%f2, %f1;
	st.param.f32	[funj_retval0+0], %f2;
	ret;
}

.visible .func  (.param .b32 funj_retval0) ___sqrti(
	.param .b32 ___sqrti_param_0
)
{
	.reg .s32 	%r<3>;
	.reg .f32 	%f<3>;


	ld.param.u32 	%r1, [___sqrti_param_0];
	cvt.rn.f32.s32	%f1, %r1;
	sqrt.rn.f32 	%f2, %f1;
	cvt.rzi.s32.f32	%r2, %f2;
	st.param.b32	[funj_retval0+0], %r2;
	ret;
}

.visible .func  (.param .b32 funj_retval0) ___sqrtu(
	.param .b32 ___sqrtu_param_0
)
{
	.reg .s32 	%r<3>;
	.reg .f32 	%f<3>;


	ld.param.u32 	%r1, [___sqrtu_param_0];
	cvt.rn.f32.u32	%f1, %r1;
	sqrt.rn.f32 	%f2, %f1;
	cvt.rzi.u32.f32	%r2, %f2;
	st.param.b32	[funj_retval0+0], %r2;
	ret;
}

.visible .func  (.param .b32 funj_retval0) ___sqrtj(
	.param .b32 ___sqrtj_param_0
)
{
	.reg .s16 	%rs<2>;
	.reg .s32 	%r<3>;
	.reg .f32 	%f<3>;


	ld.param.s8 	%rs1, [___sqrtj_param_0];
	cvt.rn.f32.s16	%f1, %rs1;
	sqrt.rn.f32 	%f2, %f1;
	cvt.rzi.s32.f32	%r1, %f2;
	cvt.s32.s8 	%r2, %r1;
	st.param.b32	[funj_retval0+0], %r2;
	ret;
}

.visible .func  (.param .b32 funj_retval0) ___sqrtv(
	.param .b32 ___sqrtv_param_0
)
{
	.reg .s16 	%rs<2>;
	.reg .s32 	%r<3>;
	.reg .f32 	%f<3>;


	ld.param.u8 	%rs1, [___sqrtv_param_0];
	cvt.rn.f32.u16	%f1, %rs1;
	sqrt.rn.f32 	%f2, %f1;
	cvt.rzi.u32.f32	%r1, %f2;
	and.b32  	%r2, %r1, 255;
	st.param.b32	[funj_retval0+0], %r2;
	ret;
}

.visible .func  (.param .b64 funj_retval0) ___sqrtd(
	.param .b64 ___sqrtd_param_0
)
{
	.reg .f64 	%fd<3>;


	ld.param.f64 	%fd1, [___sqrtd_param_0];
	sqrt.rn.f64 	%fd2, %fd1;
	st.param.f64	[funj_retval0+0], %fd2;
	ret;
}

.visible .func  (.param .b32 funj_retval0) ___cbrts(
	.param .b32 ___cbrts_param_0
)
{
	.reg .pred 	%p<3>;
	.reg .s32 	%r<2>;
	.reg .f32 	%f<16>;


	ld.param.f32 	%f5, [___cbrts_param_0];
	abs.f32 	%f6, %f5;
	lg2.approx.f32 	%f7, %f6;
	mul.f32 	%f2, %f7, 0f3EAAAAAB;
	// inline asm
	ex2.approx.ftz.f32 %f1,%f2;
	// inline asm
	mul.f32 	%f4, %f1, %f1;
	// inline asm
	rcp.approx.ftz.f32 %f3,%f4;
	// inline asm
	neg.f32 	%f8, %f6;
	fma.rn.f32 	%f9, %f3, %f8, %f1;
	mov.f32 	%f10, 0fBEAAAAAB;
	fma.rn.f32 	%f11, %f9, %f10, %f1;
	mov.b32 	 %r1, %f5;
	setp.lt.s32	%p1, %r1, 0;
	neg.f32 	%f12, %f11;
	selp.f32	%f13, %f12, %f11, %p1;
	add.f32 	%f14, %f5, %f5;
	setp.eq.f32	%p2, %f14, %f5;
	selp.f32	%f15, %f14, %f13, %p2;
	st.param.f32	[funj_retval0+0], %f15;
	ret;
}

.visible .func  (.param .b32 funj_retval0) ___cbrti(
	.param .b32 ___cbrti_param_0
)
{
	.reg .pred 	%p<3>;
	.reg .s32 	%r<4>;
	.reg .f32 	%f<16>;


	ld.param.u32 	%r1, [___cbrti_param_0];
	cvt.rn.f32.s32	%f5, %r1;
	abs.f32 	%f6, %f5;
	lg2.approx.f32 	%f7, %f6;
	mul.f32 	%f2, %f7, 0f3EAAAAAB;
	// inline asm
	ex2.approx.ftz.f32 %f1,%f2;
	// inline asm
	mul.f32 	%f4, %f1, %f1;
	// inline asm
	rcp.approx.ftz.f32 %f3,%f4;
	// inline asm
	neg.f32 	%f8, %f6;
	fma.rn.f32 	%f9, %f3, %f8, %f1;
	mov.f32 	%f10, 0fBEAAAAAB;
	fma.rn.f32 	%f11, %f9, %f10, %f1;
	mov.b32 	 %r2, %f5;
	setp.lt.s32	%p1, %r2, 0;
	neg.f32 	%f12, %f11;
	selp.f32	%f13, %f12, %f11, %p1;
	add.f32 	%f14, %f5, %f5;
	setp.eq.f32	%p2, %f14, %f5;
	selp.f32	%f15, %f14, %f13, %p2;
	cvt.rzi.s32.f32	%r3, %f15;
	st.param.b32	[funj_retval0+0], %r3;
	ret;
}

.visible .func  (.param .b32 funj_retval0) ___cbrtu(
	.param .b32 ___cbrtu_param_0
)
{
	.reg .pred 	%p<3>;
	.reg .s32 	%r<4>;
	.reg .f32 	%f<16>;


	ld.param.u32 	%r1, [___cbrtu_param_0];
	cvt.rn.f32.u32	%f5, %r1;
	abs.f32 	%f6, %f5;
	lg2.approx.f32 	%f7, %f6;
	mul.f32 	%f2, %f7, 0f3EAAAAAB;
	// inline asm
	ex2.approx.ftz.f32 %f1,%f2;
	// inline asm
	mul.f32 	%f4, %f1, %f1;
	// inline asm
	rcp.approx.ftz.f32 %f3,%f4;
	// inline asm
	neg.f32 	%f8, %f6;
	fma.rn.f32 	%f9, %f3, %f8, %f1;
	mov.f32 	%f10, 0fBEAAAAAB;
	fma.rn.f32 	%f11, %f9, %f10, %f1;
	mov.b32 	 %r2, %f5;
	setp.lt.s32	%p1, %r2, 0;
	neg.f32 	%f12, %f11;
	selp.f32	%f13, %f12, %f11, %p1;
	add.f32 	%f14, %f5, %f5;
	setp.eq.f32	%p2, %f14, %f5;
	selp.f32	%f15, %f14, %f13, %p2;
	cvt.rzi.u32.f32	%r3, %f15;
	st.param.b32	[funj_retval0+0], %r3;
	ret;
}

.visible .func  (.param .b32 funj_retval0) ___cbrtj(
	.param .b32 ___cbrtj_param_0
)
{
	.reg .pred 	%p<3>;
	.reg .s16 	%rs<2>;
	.reg .s32 	%r<4>;
	.reg .f32 	%f<16>;


	ld.param.s8 	%rs1, [___cbrtj_param_0];
	cvt.rn.f32.s16	%f5, %rs1;
	abs.f32 	%f6, %f5;
	lg2.approx.f32 	%f7, %f6;
	mul.f32 	%f2, %f7, 0f3EAAAAAB;
	// inline asm
	ex2.approx.ftz.f32 %f1,%f2;
	// inline asm
	mul.f32 	%f4, %f1, %f1;
	// inline asm
	rcp.approx.ftz.f32 %f3,%f4;
	// inline asm
	neg.f32 	%f8, %f6;
	fma.rn.f32 	%f9, %f3, %f8, %f1;
	mov.f32 	%f10, 0fBEAAAAAB;
	fma.rn.f32 	%f11, %f9, %f10, %f1;
	mov.b32 	 %r1, %f5;
	setp.lt.s32	%p1, %r1, 0;
	neg.f32 	%f12, %f11;
	selp.f32	%f13, %f12, %f11, %p1;
	add.f32 	%f14, %f5, %f5;
	setp.eq.f32	%p2, %f14, %f5;
	selp.f32	%f15, %f14, %f13, %p2;
	cvt.rzi.s32.f32	%r2, %f15;
	cvt.s32.s8 	%r3, %r2;
	st.param.b32	[funj_retval0+0], %r3;
	ret;
}

.visible .func  (.param .b32 funj_retval0) ___cbrtv(
	.param .b32 ___cbrtv_param_0
)
{
	.reg .pred 	%p<3>;
	.reg .s16 	%rs<2>;
	.reg .s32 	%r<4>;
	.reg .f32 	%f<16>;


	ld.param.u8 	%rs1, [___cbrtv_param_0];
	cvt.rn.f32.u16	%f5, %rs1;
	abs.f32 	%f6, %f5;
	lg2.approx.f32 	%f7, %f6;
	mul.f32 	%f2, %f7, 0f3EAAAAAB;
	// inline asm
	ex2.approx.ftz.f32 %f1,%f2;
	// inline asm
	mul.f32 	%f4, %f1, %f1;
	// inline asm
	rcp.approx.ftz.f32 %f3,%f4;
	// inline asm
	neg.f32 	%f8, %f6;
	fma.rn.f32 	%f9, %f3, %f8, %f1;
	mov.f32 	%f10, 0fBEAAAAAB;
	fma.rn.f32 	%f11, %f9, %f10, %f1;
	mov.b32 	 %r1, %f5;
	setp.lt.s32	%p1, %r1, 0;
	neg.f32 	%f12, %f11;
	selp.f32	%f13, %f12, %f11, %p1;
	add.f32 	%f14, %f5, %f5;
	setp.eq.f32	%p2, %f14, %f5;
	selp.f32	%f15, %f14, %f13, %p2;
	cvt.rzi.u32.f32	%r2, %f15;
	and.b32  	%r3, %r2, 255;
	st.param.b32	[funj_retval0+0], %r3;
	ret;
}

.visible .func  (.param .b64 funj_retval0) ___cbrtd(
	.param .b64 ___cbrtd_param_0
)
{
	.reg .pred 	%p<5>;
	.reg .s32 	%r<33>;
	.reg .f32 	%f<7>;
	.reg .f64 	%fd<24>;


	ld.param.f64 	%fd4, [___cbrtd_param_0];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r29, %temp}, %fd4;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2}, %fd4;
	}
	and.b32  	%r30, %r2, 2147483647;
	setp.lt.u32	%p1, %r30, 2146435072;
	setp.neu.f64	%p2, %fd4, 0d0000000000000000;
	and.pred  	%p3, %p2, %p1;
	@%p3 bra 	BB53_2;

	add.f64 	%fd23, %fd4, %fd4;
	bra.uni 	BB53_6;

BB53_2:
	shr.u32 	%r31, %r30, 20;
	setp.eq.s32	%p4, %r31, 0;
	@%p4 bra 	BB53_4;

	mov.u32 	%r32, 0;
	bra.uni 	BB53_5;

BB53_4:
	mov.b64 	%fd5, {%r29, %r30};
	mul.f64 	%fd6, %fd5, 0d4350000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r29, %temp}, %fd6;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r30}, %fd6;
	}
	shr.u32 	%r31, %r30, 20;
	mov.u32 	%r32, 18;

BB53_5:
	add.s32 	%r14, %r31, -1022;
	cvt.rn.f32.s32	%f5, %r14;
	mul.f32 	%f6, %f5, 0f3EAAAAAB;
	cvt.rni.s32.f32	%r15, %f6;
	mad.lo.s32 	%r16, %r15, -3145728, %r30;
	mov.b64 	%fd9, {%r29, %r16};
	cvt.rn.f32.f64	%f2, %fd9;
	// inline asm
	lg2.approx.ftz.f32 %f1,%f2;
	// inline asm
	mul.f32 	%f4, %f1, 0f3EAAAAAB;
	// inline asm
	ex2.approx.ftz.f32 %f3,%f4;
	// inline asm
	cvt.f64.f32	%fd10, %f3;
	mul.f64 	%fd11, %fd10, %fd10;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r17, %temp}, %fd11;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r18}, %fd11;
	}
	add.s32 	%r19, %r18, 1048576;
	mov.b64 	%fd12, {%r17, %r19};
	fma.rn.f64 	%fd8, %fd12, %fd10, %fd9;
	// inline asm
	rcp.approx.ftz.f64 %fd7,%fd8;
	// inline asm
	neg.f64 	%fd13, %fd8;
	mov.f64 	%fd14, 0d3FF0000000000000;
	fma.rn.f64 	%fd15, %fd13, %fd7, %fd14;
	fma.rn.f64 	%fd16, %fd15, %fd15, %fd15;
	fma.rn.f64 	%fd17, %fd16, %fd7, %fd7;
	neg.f64 	%fd18, %fd10;
	fma.rn.f64 	%fd19, %fd11, %fd18, %fd9;
	mul.f64 	%fd20, %fd17, %fd19;
	fma.rn.f64 	%fd21, %fd10, %fd20, %fd10;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r20, %temp}, %fd21;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r21}, %fd21;
	}
	sub.s32 	%r22, %r15, %r32;
	shl.b32 	%r23, %r22, 20;
	add.s32 	%r24, %r21, %r23;
	mov.b64 	%fd22, {%r20, %r24};
	{
	.reg .b32 %temp; 
	mov.b64 	{%r25, %temp}, %fd22;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r26}, %fd22;
	}
	and.b32  	%r27, %r2, -2147483648;
	or.b32  	%r28, %r26, %r27;
	mov.b64 	%fd23, {%r25, %r28};

BB53_6:
	st.param.f64	[funj_retval0+0], %fd23;
	ret;
}

.visible .func  (.param .b32 funj_retval0) ___powss(
	.param .b32 ___powss_param_0,
	.param .b32 ___powss_param_1
)
{
	.reg .pred 	%p<30>;
	.reg .s32 	%r<19>;
	.reg .f32 	%f<101>;


	ld.param.f32 	%f14, [___powss_param_0];
	ld.param.f32 	%f15, [___powss_param_1];
	mul.f32 	%f16, %f15, 0f3F000000;
	cvt.rzi.f32.f32	%f17, %f16;
	fma.rn.f32 	%f18, %f17, 0fC0000000, %f15;
	abs.f32 	%f1, %f18;
	setp.eq.f32	%p1, %f15, 0f00000000;
	setp.eq.f32	%p2, %f14, 0f3F800000;
	or.pred  	%p3, %p2, %p1;
	@!%p3 bra 	BB54_2;
	bra.uni 	BB54_1;

BB54_1:
	mov.f32 	%f100, 0f3F800000;
	bra.uni 	BB54_17;

BB54_2:
	abs.f32 	%f2, %f14;
	setp.gtu.f32	%p4, %f2, 0f7F800000;
	@%p4 bra 	BB54_16;

	abs.f32 	%f3, %f15;
	setp.gtu.f32	%p5, %f3, 0f7F800000;
	@%p5 bra 	BB54_16;

	setp.eq.f32	%p6, %f3, 0f7F800000;
	@%p6 bra 	BB54_15;

	setp.eq.f32	%p7, %f2, 0f7F800000;
	@%p7 bra 	BB54_14;

	setp.eq.f32	%p8, %f14, 0f00000000;
	@%p8 bra 	BB54_13;

	setp.geu.f32	%p9, %f14, 0f00000000;
	@%p9 bra 	BB54_10;

	cvt.rzi.f32.f32	%f19, %f15;
	setp.eq.f32	%p10, %f19, %f15;
	@%p10 bra 	BB54_10;

	mov.f32 	%f100, 0f7FFFFFFF;
	bra.uni 	BB54_17;

BB54_10:
	setp.lt.f32	%p11, %f2, 0f00800000;
	selp.f32	%f24, 0fC3170000, 0fC2FE0000, %p11;
	mul.f32 	%f25, %f2, 0f4B800000;
	selp.f32	%f26, %f25, %f2, %p11;
	mov.b32 	 %r1, %f26;
	and.b32  	%r2, %r1, 8388607;
	or.b32  	%r3, %r2, 1065353216;
	mov.b32 	 %f27, %r3;
	shr.u32 	%r4, %r1, 23;
	cvt.rn.f32.u32	%f28, %r4;
	add.f32 	%f29, %f24, %f28;
	setp.gt.f32	%p12, %f27, 0f3FB504F3;
	mul.f32 	%f30, %f27, 0f3F000000;
	add.f32 	%f31, %f29, 0f3F800000;
	selp.f32	%f32, %f30, %f27, %p12;
	selp.f32	%f33, %f31, %f29, %p12;
	add.f32 	%f34, %f32, 0fBF800000;
	add.f32 	%f21, %f32, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f20,%f21;
	// inline asm
	add.f32 	%f35, %f34, %f34;
	mul.f32 	%f36, %f35, %f20;
	mul.f32 	%f37, %f36, %f36;
	mov.f32 	%f38, 0f3C4CAF63;
	mov.f32 	%f39, 0f3B18F0FE;
	fma.rn.f32 	%f40, %f39, %f37, %f38;
	mov.f32 	%f41, 0f3DAAAABD;
	fma.rn.f32 	%f42, %f40, %f37, %f41;
	mul.rn.f32 	%f43, %f42, %f37;
	mul.rn.f32 	%f44, %f43, %f36;
	sub.f32 	%f45, %f34, %f36;
	add.f32 	%f46, %f45, %f45;
	neg.f32 	%f47, %f36;
	fma.rn.f32 	%f48, %f47, %f34, %f46;
	mul.rn.f32 	%f49, %f20, %f48;
	add.f32 	%f50, %f36, %f44;
	sub.f32 	%f51, %f36, %f50;
	add.f32 	%f52, %f51, %f44;
	add.f32 	%f53, %f52, %f49;
	add.f32 	%f54, %f50, %f53;
	sub.f32 	%f55, %f50, %f54;
	add.f32 	%f56, %f55, %f53;
	mov.f32 	%f57, 0f3F317200;
	mul.rn.f32 	%f58, %f33, %f57;
	mov.f32 	%f59, 0f35BFBE8E;
	mul.rn.f32 	%f60, %f33, %f59;
	add.f32 	%f61, %f58, %f54;
	sub.f32 	%f62, %f58, %f61;
	add.f32 	%f63, %f62, %f54;
	add.f32 	%f64, %f63, %f56;
	add.f32 	%f65, %f64, %f60;
	add.f32 	%f66, %f61, %f65;
	sub.f32 	%f67, %f61, %f66;
	add.f32 	%f68, %f67, %f65;
	mul.f32 	%f69, %f15, 0f39000000;
	setp.gt.f32	%p13, %f3, 0f77F684DF;
	selp.f32	%f70, %f69, %f15, %p13;
	mul.rn.f32 	%f71, %f70, %f66;
	neg.f32 	%f72, %f71;
	fma.rn.f32 	%f73, %f70, %f66, %f72;
	fma.rn.f32 	%f74, %f70, %f68, %f73;
	mov.f32 	%f75, 0f00000000;
	fma.rn.f32 	%f76, %f75, %f66, %f74;
	add.rn.f32 	%f77, %f71, %f76;
	neg.f32 	%f78, %f77;
	add.rn.f32 	%f79, %f71, %f78;
	add.rn.f32 	%f80, %f79, %f76;
	mov.b32 	 %r5, %f77;
	setp.eq.s32	%p14, %r5, 1118925336;
	add.s32 	%r6, %r5, -1;
	mov.b32 	 %f81, %r6;
	add.f32 	%f82, %f80, 0f37000000;
	selp.f32	%f4, %f82, %f80, %p14;
	selp.f32	%f83, %f81, %f77, %p14;
	mul.f32 	%f84, %f83, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f85, %f84;
	mov.f32 	%f86, 0fBF317200;
	fma.rn.f32 	%f87, %f85, %f86, %f83;
	mov.f32 	%f88, 0fB5BFBE8E;
	fma.rn.f32 	%f89, %f85, %f88, %f87;
	mul.f32 	%f23, %f89, 0f3FB8AA3B;
	// inline asm
	ex2.approx.ftz.f32 %f22,%f23;
	// inline asm
	add.f32 	%f90, %f85, 0f00000000;
	ex2.approx.f32 	%f91, %f90;
	mul.f32 	%f92, %f22, %f91;
	setp.lt.f32	%p15, %f83, 0fC2D20000;
	selp.f32	%f93, 0f00000000, %f92, %p15;
	setp.gt.f32	%p16, %f83, 0f42D20000;
	selp.f32	%f99, 0f7F800000, %f93, %p16;
	setp.eq.f32	%p17, %f99, 0f7F800000;
	@%p17 bra 	BB54_12;

	fma.rn.f32 	%f99, %f99, %f4, %f99;

BB54_12:
	setp.eq.f32	%p18, %f1, 0f3F800000;
	setp.lt.f32	%p19, %f14, 0f00000000;
	and.pred  	%p20, %p19, %p18;
	mov.b32 	 %r7, %f99;
	xor.b32  	%r8, %r7, -2147483648;
	mov.b32 	 %f94, %r8;
	selp.f32	%f100, %f94, %f99, %p20;
	bra.uni 	BB54_17;

BB54_13:
	setp.eq.f32	%p21, %f1, 0f3F800000;
	add.f32 	%f96, %f14, %f14;
	mov.b32 	 %r9, %f96;
	selp.b32	%r10, %r9, 0, %p21;
	or.b32  	%r11, %r10, 2139095040;
	setp.lt.f32	%p22, %f15, 0f00000000;
	selp.b32	%r12, %r11, %r10, %p22;
	mov.b32 	 %f100, %r12;
	bra.uni 	BB54_17;

BB54_14:
	setp.eq.f32	%p23, %f1, 0f3F800000;
	setp.ltu.f32	%p24, %f15, 0f00000000;
	selp.b32	%r13, 0, 2139095040, %p24;
	setp.lt.f32	%p25, %f14, 0f00000000;
	and.pred  	%p26, %p25, %p23;
	or.b32  	%r14, %r13, -2147483648;
	selp.b32	%r15, %r14, %r13, %p26;
	mov.b32 	 %f100, %r15;
	bra.uni 	BB54_17;

BB54_15:
	setp.gt.f32	%p27, %f2, 0f3F800000;
	selp.b32	%r16, 2139095040, 0, %p27;
	xor.b32  	%r17, %r16, 2139095040;
	setp.lt.f32	%p28, %f15, 0f00000000;
	selp.b32	%r18, %r17, %r16, %p28;
	mov.b32 	 %f97, %r18;
	setp.eq.f32	%p29, %f14, 0fBF800000;
	selp.f32	%f100, 0f3F800000, %f97, %p29;
	bra.uni 	BB54_17;

BB54_16:
	add.f32 	%f100, %f14, %f15;

BB54_17:
	st.param.f32	[funj_retval0+0], %f100;
	ret;
}

.visible .func  (.param .b32 funj_retval0) ___powii(
	.param .b32 ___powii_param_0,
	.param .b32 ___powii_param_1
)
{
	.reg .pred 	%p<30>;
	.reg .s32 	%r<22>;
	.reg .f32 	%f<101>;


	ld.param.u32 	%r1, [___powii_param_0];
	ld.param.u32 	%r2, [___powii_param_1];
	cvt.rn.f32.s32	%f1, %r1;
	cvt.rn.f32.s32	%f2, %r2;
	mul.f32 	%f16, %f2, 0f3F000000;
	cvt.rzi.f32.f32	%f17, %f16;
	fma.rn.f32 	%f18, %f17, 0fC0000000, %f2;
	abs.f32 	%f3, %f18;
	setp.eq.f32	%p1, %f1, 0f3F800000;
	setp.eq.f32	%p2, %f2, 0f00000000;
	or.pred  	%p3, %p1, %p2;
	@!%p3 bra 	BB55_2;
	bra.uni 	BB55_1;

BB55_1:
	mov.f32 	%f100, 0f3F800000;
	bra.uni 	BB55_17;

BB55_2:
	abs.f32 	%f4, %f1;
	setp.gtu.f32	%p4, %f4, 0f7F800000;
	@%p4 bra 	BB55_16;

	abs.f32 	%f5, %f2;
	setp.gtu.f32	%p5, %f5, 0f7F800000;
	@%p5 bra 	BB55_16;

	setp.eq.f32	%p6, %f5, 0f7F800000;
	@%p6 bra 	BB55_15;

	setp.eq.f32	%p7, %f4, 0f7F800000;
	@%p7 bra 	BB55_14;

	setp.eq.f32	%p8, %f1, 0f00000000;
	@%p8 bra 	BB55_13;

	setp.geu.f32	%p9, %f1, 0f00000000;
	@%p9 bra 	BB55_10;

	cvt.rzi.f32.f32	%f19, %f2;
	setp.eq.f32	%p10, %f19, %f2;
	@%p10 bra 	BB55_10;

	mov.f32 	%f100, 0f7FFFFFFF;
	bra.uni 	BB55_17;

BB55_10:
	setp.lt.f32	%p11, %f4, 0f00800000;
	selp.f32	%f24, 0fC3170000, 0fC2FE0000, %p11;
	mul.f32 	%f25, %f4, 0f4B800000;
	selp.f32	%f26, %f25, %f4, %p11;
	mov.b32 	 %r3, %f26;
	and.b32  	%r4, %r3, 8388607;
	or.b32  	%r5, %r4, 1065353216;
	mov.b32 	 %f27, %r5;
	shr.u32 	%r6, %r3, 23;
	cvt.rn.f32.u32	%f28, %r6;
	add.f32 	%f29, %f24, %f28;
	setp.gt.f32	%p12, %f27, 0f3FB504F3;
	mul.f32 	%f30, %f27, 0f3F000000;
	add.f32 	%f31, %f29, 0f3F800000;
	selp.f32	%f32, %f30, %f27, %p12;
	selp.f32	%f33, %f31, %f29, %p12;
	add.f32 	%f34, %f32, 0fBF800000;
	add.f32 	%f21, %f32, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f20,%f21;
	// inline asm
	add.f32 	%f35, %f34, %f34;
	mul.f32 	%f36, %f35, %f20;
	mul.f32 	%f37, %f36, %f36;
	mov.f32 	%f38, 0f3C4CAF63;
	mov.f32 	%f39, 0f3B18F0FE;
	fma.rn.f32 	%f40, %f39, %f37, %f38;
	mov.f32 	%f41, 0f3DAAAABD;
	fma.rn.f32 	%f42, %f40, %f37, %f41;
	mul.rn.f32 	%f43, %f42, %f37;
	mul.rn.f32 	%f44, %f43, %f36;
	sub.f32 	%f45, %f34, %f36;
	add.f32 	%f46, %f45, %f45;
	neg.f32 	%f47, %f36;
	fma.rn.f32 	%f48, %f47, %f34, %f46;
	mul.rn.f32 	%f49, %f20, %f48;
	add.f32 	%f50, %f36, %f44;
	sub.f32 	%f51, %f36, %f50;
	add.f32 	%f52, %f51, %f44;
	add.f32 	%f53, %f52, %f49;
	add.f32 	%f54, %f50, %f53;
	sub.f32 	%f55, %f50, %f54;
	add.f32 	%f56, %f55, %f53;
	mov.f32 	%f57, 0f3F317200;
	mul.rn.f32 	%f58, %f33, %f57;
	mov.f32 	%f59, 0f35BFBE8E;
	mul.rn.f32 	%f60, %f33, %f59;
	add.f32 	%f61, %f58, %f54;
	sub.f32 	%f62, %f58, %f61;
	add.f32 	%f63, %f62, %f54;
	add.f32 	%f64, %f63, %f56;
	add.f32 	%f65, %f64, %f60;
	add.f32 	%f66, %f61, %f65;
	sub.f32 	%f67, %f61, %f66;
	add.f32 	%f68, %f67, %f65;
	mul.f32 	%f69, %f2, 0f39000000;
	setp.gt.f32	%p13, %f5, 0f77F684DF;
	selp.f32	%f70, %f69, %f2, %p13;
	mul.rn.f32 	%f71, %f70, %f66;
	neg.f32 	%f72, %f71;
	fma.rn.f32 	%f73, %f70, %f66, %f72;
	fma.rn.f32 	%f74, %f70, %f68, %f73;
	mov.f32 	%f75, 0f00000000;
	fma.rn.f32 	%f76, %f75, %f66, %f74;
	add.rn.f32 	%f77, %f71, %f76;
	neg.f32 	%f78, %f77;
	add.rn.f32 	%f79, %f71, %f78;
	add.rn.f32 	%f80, %f79, %f76;
	mov.b32 	 %r7, %f77;
	setp.eq.s32	%p14, %r7, 1118925336;
	add.s32 	%r8, %r7, -1;
	mov.b32 	 %f81, %r8;
	add.f32 	%f82, %f80, 0f37000000;
	selp.f32	%f6, %f82, %f80, %p14;
	selp.f32	%f83, %f81, %f77, %p14;
	mul.f32 	%f84, %f83, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f85, %f84;
	mov.f32 	%f86, 0fBF317200;
	fma.rn.f32 	%f87, %f85, %f86, %f83;
	mov.f32 	%f88, 0fB5BFBE8E;
	fma.rn.f32 	%f89, %f85, %f88, %f87;
	mul.f32 	%f23, %f89, 0f3FB8AA3B;
	// inline asm
	ex2.approx.ftz.f32 %f22,%f23;
	// inline asm
	add.f32 	%f90, %f85, 0f00000000;
	ex2.approx.f32 	%f91, %f90;
	mul.f32 	%f92, %f22, %f91;
	setp.lt.f32	%p15, %f83, 0fC2D20000;
	selp.f32	%f93, 0f00000000, %f92, %p15;
	setp.gt.f32	%p16, %f83, 0f42D20000;
	selp.f32	%f99, 0f7F800000, %f93, %p16;
	setp.eq.f32	%p17, %f99, 0f7F800000;
	@%p17 bra 	BB55_12;

	fma.rn.f32 	%f99, %f99, %f6, %f99;

BB55_12:
	setp.eq.f32	%p18, %f3, 0f3F800000;
	setp.lt.f32	%p19, %f1, 0f00000000;
	and.pred  	%p20, %p19, %p18;
	mov.b32 	 %r9, %f99;
	xor.b32  	%r10, %r9, -2147483648;
	mov.b32 	 %f94, %r10;
	selp.f32	%f100, %f94, %f99, %p20;
	bra.uni 	BB55_17;

BB55_13:
	setp.eq.f32	%p21, %f3, 0f3F800000;
	add.f32 	%f96, %f1, %f1;
	mov.b32 	 %r11, %f96;
	selp.b32	%r12, %r11, 0, %p21;
	or.b32  	%r13, %r12, 2139095040;
	setp.lt.f32	%p22, %f2, 0f00000000;
	selp.b32	%r14, %r13, %r12, %p22;
	mov.b32 	 %f100, %r14;
	bra.uni 	BB55_17;

BB55_14:
	setp.eq.f32	%p23, %f3, 0f3F800000;
	setp.ltu.f32	%p24, %f2, 0f00000000;
	selp.b32	%r15, 0, 2139095040, %p24;
	setp.lt.f32	%p25, %f1, 0f00000000;
	and.pred  	%p26, %p25, %p23;
	or.b32  	%r16, %r15, -2147483648;
	selp.b32	%r17, %r16, %r15, %p26;
	mov.b32 	 %f100, %r17;
	bra.uni 	BB55_17;

BB55_15:
	setp.gt.f32	%p27, %f4, 0f3F800000;
	selp.b32	%r18, 2139095040, 0, %p27;
	xor.b32  	%r19, %r18, 2139095040;
	setp.lt.f32	%p28, %f2, 0f00000000;
	selp.b32	%r20, %r19, %r18, %p28;
	mov.b32 	 %f97, %r20;
	setp.eq.f32	%p29, %f1, 0fBF800000;
	selp.f32	%f100, 0f3F800000, %f97, %p29;
	bra.uni 	BB55_17;

BB55_16:
	add.f32 	%f100, %f1, %f2;

BB55_17:
	cvt.rzi.s32.f32	%r21, %f100;
	st.param.b32	[funj_retval0+0], %r21;
	ret;
}

.visible .func  (.param .b32 funj_retval0) ___powuu(
	.param .b32 ___powuu_param_0,
	.param .b32 ___powuu_param_1
)
{
	.reg .pred 	%p<30>;
	.reg .s32 	%r<22>;
	.reg .f32 	%f<101>;


	ld.param.u32 	%r1, [___powuu_param_0];
	ld.param.u32 	%r2, [___powuu_param_1];
	cvt.rn.f32.u32	%f1, %r1;
	cvt.rn.f32.u32	%f2, %r2;
	mul.f32 	%f16, %f2, 0f3F000000;
	cvt.rzi.f32.f32	%f17, %f16;
	fma.rn.f32 	%f18, %f17, 0fC0000000, %f2;
	abs.f32 	%f3, %f18;
	setp.eq.f32	%p1, %f1, 0f3F800000;
	setp.eq.f32	%p2, %f2, 0f00000000;
	or.pred  	%p3, %p1, %p2;
	@!%p3 bra 	BB56_2;
	bra.uni 	BB56_1;

BB56_1:
	mov.f32 	%f100, 0f3F800000;
	bra.uni 	BB56_17;

BB56_2:
	abs.f32 	%f4, %f1;
	setp.gtu.f32	%p4, %f4, 0f7F800000;
	@%p4 bra 	BB56_16;

	abs.f32 	%f5, %f2;
	setp.gtu.f32	%p5, %f5, 0f7F800000;
	@%p5 bra 	BB56_16;

	setp.eq.f32	%p6, %f5, 0f7F800000;
	@%p6 bra 	BB56_15;

	setp.eq.f32	%p7, %f4, 0f7F800000;
	@%p7 bra 	BB56_14;

	setp.eq.f32	%p8, %f1, 0f00000000;
	@%p8 bra 	BB56_13;

	setp.geu.f32	%p9, %f1, 0f00000000;
	@%p9 bra 	BB56_10;

	cvt.rzi.f32.f32	%f19, %f2;
	setp.eq.f32	%p10, %f19, %f2;
	@%p10 bra 	BB56_10;

	mov.f32 	%f100, 0f7FFFFFFF;
	bra.uni 	BB56_17;

BB56_10:
	setp.lt.f32	%p11, %f4, 0f00800000;
	selp.f32	%f24, 0fC3170000, 0fC2FE0000, %p11;
	mul.f32 	%f25, %f4, 0f4B800000;
	selp.f32	%f26, %f25, %f4, %p11;
	mov.b32 	 %r3, %f26;
	and.b32  	%r4, %r3, 8388607;
	or.b32  	%r5, %r4, 1065353216;
	mov.b32 	 %f27, %r5;
	shr.u32 	%r6, %r3, 23;
	cvt.rn.f32.u32	%f28, %r6;
	add.f32 	%f29, %f24, %f28;
	setp.gt.f32	%p12, %f27, 0f3FB504F3;
	mul.f32 	%f30, %f27, 0f3F000000;
	add.f32 	%f31, %f29, 0f3F800000;
	selp.f32	%f32, %f30, %f27, %p12;
	selp.f32	%f33, %f31, %f29, %p12;
	add.f32 	%f34, %f32, 0fBF800000;
	add.f32 	%f21, %f32, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f20,%f21;
	// inline asm
	add.f32 	%f35, %f34, %f34;
	mul.f32 	%f36, %f35, %f20;
	mul.f32 	%f37, %f36, %f36;
	mov.f32 	%f38, 0f3C4CAF63;
	mov.f32 	%f39, 0f3B18F0FE;
	fma.rn.f32 	%f40, %f39, %f37, %f38;
	mov.f32 	%f41, 0f3DAAAABD;
	fma.rn.f32 	%f42, %f40, %f37, %f41;
	mul.rn.f32 	%f43, %f42, %f37;
	mul.rn.f32 	%f44, %f43, %f36;
	sub.f32 	%f45, %f34, %f36;
	add.f32 	%f46, %f45, %f45;
	neg.f32 	%f47, %f36;
	fma.rn.f32 	%f48, %f47, %f34, %f46;
	mul.rn.f32 	%f49, %f20, %f48;
	add.f32 	%f50, %f36, %f44;
	sub.f32 	%f51, %f36, %f50;
	add.f32 	%f52, %f51, %f44;
	add.f32 	%f53, %f52, %f49;
	add.f32 	%f54, %f50, %f53;
	sub.f32 	%f55, %f50, %f54;
	add.f32 	%f56, %f55, %f53;
	mov.f32 	%f57, 0f3F317200;
	mul.rn.f32 	%f58, %f33, %f57;
	mov.f32 	%f59, 0f35BFBE8E;
	mul.rn.f32 	%f60, %f33, %f59;
	add.f32 	%f61, %f58, %f54;
	sub.f32 	%f62, %f58, %f61;
	add.f32 	%f63, %f62, %f54;
	add.f32 	%f64, %f63, %f56;
	add.f32 	%f65, %f64, %f60;
	add.f32 	%f66, %f61, %f65;
	sub.f32 	%f67, %f61, %f66;
	add.f32 	%f68, %f67, %f65;
	mul.f32 	%f69, %f2, 0f39000000;
	setp.gt.f32	%p13, %f5, 0f77F684DF;
	selp.f32	%f70, %f69, %f2, %p13;
	mul.rn.f32 	%f71, %f70, %f66;
	neg.f32 	%f72, %f71;
	fma.rn.f32 	%f73, %f70, %f66, %f72;
	fma.rn.f32 	%f74, %f70, %f68, %f73;
	mov.f32 	%f75, 0f00000000;
	fma.rn.f32 	%f76, %f75, %f66, %f74;
	add.rn.f32 	%f77, %f71, %f76;
	neg.f32 	%f78, %f77;
	add.rn.f32 	%f79, %f71, %f78;
	add.rn.f32 	%f80, %f79, %f76;
	mov.b32 	 %r7, %f77;
	setp.eq.s32	%p14, %r7, 1118925336;
	add.s32 	%r8, %r7, -1;
	mov.b32 	 %f81, %r8;
	add.f32 	%f82, %f80, 0f37000000;
	selp.f32	%f6, %f82, %f80, %p14;
	selp.f32	%f83, %f81, %f77, %p14;
	mul.f32 	%f84, %f83, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f85, %f84;
	mov.f32 	%f86, 0fBF317200;
	fma.rn.f32 	%f87, %f85, %f86, %f83;
	mov.f32 	%f88, 0fB5BFBE8E;
	fma.rn.f32 	%f89, %f85, %f88, %f87;
	mul.f32 	%f23, %f89, 0f3FB8AA3B;
	// inline asm
	ex2.approx.ftz.f32 %f22,%f23;
	// inline asm
	add.f32 	%f90, %f85, 0f00000000;
	ex2.approx.f32 	%f91, %f90;
	mul.f32 	%f92, %f22, %f91;
	setp.lt.f32	%p15, %f83, 0fC2D20000;
	selp.f32	%f93, 0f00000000, %f92, %p15;
	setp.gt.f32	%p16, %f83, 0f42D20000;
	selp.f32	%f99, 0f7F800000, %f93, %p16;
	setp.eq.f32	%p17, %f99, 0f7F800000;
	@%p17 bra 	BB56_12;

	fma.rn.f32 	%f99, %f99, %f6, %f99;

BB56_12:
	setp.eq.f32	%p18, %f3, 0f3F800000;
	setp.lt.f32	%p19, %f1, 0f00000000;
	and.pred  	%p20, %p19, %p18;
	mov.b32 	 %r9, %f99;
	xor.b32  	%r10, %r9, -2147483648;
	mov.b32 	 %f94, %r10;
	selp.f32	%f100, %f94, %f99, %p20;
	bra.uni 	BB56_17;

BB56_13:
	setp.eq.f32	%p21, %f3, 0f3F800000;
	add.f32 	%f96, %f1, %f1;
	mov.b32 	 %r11, %f96;
	selp.b32	%r12, %r11, 0, %p21;
	or.b32  	%r13, %r12, 2139095040;
	setp.lt.f32	%p22, %f2, 0f00000000;
	selp.b32	%r14, %r13, %r12, %p22;
	mov.b32 	 %f100, %r14;
	bra.uni 	BB56_17;

BB56_14:
	setp.eq.f32	%p23, %f3, 0f3F800000;
	setp.ltu.f32	%p24, %f2, 0f00000000;
	selp.b32	%r15, 0, 2139095040, %p24;
	setp.lt.f32	%p25, %f1, 0f00000000;
	and.pred  	%p26, %p25, %p23;
	or.b32  	%r16, %r15, -2147483648;
	selp.b32	%r17, %r16, %r15, %p26;
	mov.b32 	 %f100, %r17;
	bra.uni 	BB56_17;

BB56_15:
	setp.gt.f32	%p27, %f4, 0f3F800000;
	selp.b32	%r18, 2139095040, 0, %p27;
	xor.b32  	%r19, %r18, 2139095040;
	setp.lt.f32	%p28, %f2, 0f00000000;
	selp.b32	%r20, %r19, %r18, %p28;
	mov.b32 	 %f97, %r20;
	setp.eq.f32	%p29, %f1, 0fBF800000;
	selp.f32	%f100, 0f3F800000, %f97, %p29;
	bra.uni 	BB56_17;

BB56_16:
	add.f32 	%f100, %f1, %f2;

BB56_17:
	cvt.rzi.u32.f32	%r21, %f100;
	st.param.b32	[funj_retval0+0], %r21;
	ret;
}

.visible .func  (.param .b32 funj_retval0) ___powjj(
	.param .b32 ___powjj_param_0,
	.param .b32 ___powjj_param_1
)
{
	.reg .pred 	%p<30>;
	.reg .s16 	%rs<7>;
	.reg .s32 	%r<21>;
	.reg .f32 	%f<101>;


	ld.param.s8 	%rs1, [___powjj_param_0];
	cvt.rn.f32.s16	%f1, %rs1;
	ld.param.s8 	%rs2, [___powjj_param_1];
	cvt.rn.f32.s16	%f2, %rs2;
	mul.f32 	%f16, %f2, 0f3F000000;
	cvt.rzi.f32.f32	%f17, %f16;
	fma.rn.f32 	%f18, %f17, 0fC0000000, %f2;
	abs.f32 	%f3, %f18;
	and.b16  	%rs3, %rs2, 255;
	setp.eq.s16	%p1, %rs3, 0;
	and.b16  	%rs4, %rs1, 255;
	setp.eq.s16	%p2, %rs4, 1;
	or.pred  	%p3, %p2, %p1;
	@!%p3 bra 	BB57_2;
	bra.uni 	BB57_1;

BB57_1:
	mov.f32 	%f100, 0f3F800000;
	bra.uni 	BB57_17;

BB57_2:
	abs.f32 	%f4, %f1;
	setp.gtu.f32	%p4, %f4, 0f7F800000;
	@%p4 bra 	BB57_16;

	abs.f32 	%f5, %f2;
	setp.gtu.f32	%p5, %f5, 0f7F800000;
	@%p5 bra 	BB57_16;

	setp.eq.f32	%p6, %f5, 0f7F800000;
	@%p6 bra 	BB57_15;

	setp.eq.f32	%p7, %f4, 0f7F800000;
	@%p7 bra 	BB57_14;

	setp.eq.s16	%p8, %rs4, 0;
	@%p8 bra 	BB57_13;

	setp.gt.s16	%p9, %rs1, -1;
	@%p9 bra 	BB57_10;

	cvt.rzi.f32.f32	%f19, %f2;
	setp.eq.f32	%p10, %f19, %f2;
	@%p10 bra 	BB57_10;

	mov.f32 	%f100, 0f7FFFFFFF;
	bra.uni 	BB57_17;

BB57_10:
	setp.lt.f32	%p11, %f4, 0f00800000;
	selp.f32	%f24, 0fC3170000, 0fC2FE0000, %p11;
	mul.f32 	%f25, %f4, 0f4B800000;
	selp.f32	%f26, %f25, %f4, %p11;
	mov.b32 	 %r1, %f26;
	and.b32  	%r2, %r1, 8388607;
	or.b32  	%r3, %r2, 1065353216;
	mov.b32 	 %f27, %r3;
	shr.u32 	%r4, %r1, 23;
	cvt.rn.f32.u32	%f28, %r4;
	add.f32 	%f29, %f24, %f28;
	setp.gt.f32	%p12, %f27, 0f3FB504F3;
	mul.f32 	%f30, %f27, 0f3F000000;
	add.f32 	%f31, %f29, 0f3F800000;
	selp.f32	%f32, %f30, %f27, %p12;
	selp.f32	%f33, %f31, %f29, %p12;
	add.f32 	%f34, %f32, 0fBF800000;
	add.f32 	%f21, %f32, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f20,%f21;
	// inline asm
	add.f32 	%f35, %f34, %f34;
	mul.f32 	%f36, %f35, %f20;
	mul.f32 	%f37, %f36, %f36;
	mov.f32 	%f38, 0f3C4CAF63;
	mov.f32 	%f39, 0f3B18F0FE;
	fma.rn.f32 	%f40, %f39, %f37, %f38;
	mov.f32 	%f41, 0f3DAAAABD;
	fma.rn.f32 	%f42, %f40, %f37, %f41;
	mul.rn.f32 	%f43, %f42, %f37;
	mul.rn.f32 	%f44, %f43, %f36;
	sub.f32 	%f45, %f34, %f36;
	add.f32 	%f46, %f45, %f45;
	neg.f32 	%f47, %f36;
	fma.rn.f32 	%f48, %f47, %f34, %f46;
	mul.rn.f32 	%f49, %f20, %f48;
	add.f32 	%f50, %f36, %f44;
	sub.f32 	%f51, %f36, %f50;
	add.f32 	%f52, %f51, %f44;
	add.f32 	%f53, %f52, %f49;
	add.f32 	%f54, %f50, %f53;
	sub.f32 	%f55, %f50, %f54;
	add.f32 	%f56, %f55, %f53;
	mov.f32 	%f57, 0f3F317200;
	mul.rn.f32 	%f58, %f33, %f57;
	mov.f32 	%f59, 0f35BFBE8E;
	mul.rn.f32 	%f60, %f33, %f59;
	add.f32 	%f61, %f58, %f54;
	sub.f32 	%f62, %f58, %f61;
	add.f32 	%f63, %f62, %f54;
	add.f32 	%f64, %f63, %f56;
	add.f32 	%f65, %f64, %f60;
	add.f32 	%f66, %f61, %f65;
	sub.f32 	%f67, %f61, %f66;
	add.f32 	%f68, %f67, %f65;
	mul.f32 	%f69, %f2, 0f39000000;
	setp.gt.f32	%p13, %f5, 0f77F684DF;
	selp.f32	%f70, %f69, %f2, %p13;
	mul.rn.f32 	%f71, %f70, %f66;
	neg.f32 	%f72, %f71;
	fma.rn.f32 	%f73, %f70, %f66, %f72;
	fma.rn.f32 	%f74, %f70, %f68, %f73;
	mov.f32 	%f75, 0f00000000;
	fma.rn.f32 	%f76, %f75, %f66, %f74;
	add.rn.f32 	%f77, %f71, %f76;
	neg.f32 	%f78, %f77;
	add.rn.f32 	%f79, %f71, %f78;
	add.rn.f32 	%f80, %f79, %f76;
	mov.b32 	 %r5, %f77;
	setp.eq.s32	%p14, %r5, 1118925336;
	add.s32 	%r6, %r5, -1;
	mov.b32 	 %f81, %r6;
	add.f32 	%f82, %f80, 0f37000000;
	selp.f32	%f6, %f82, %f80, %p14;
	selp.f32	%f83, %f81, %f77, %p14;
	mul.f32 	%f84, %f83, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f85, %f84;
	mov.f32 	%f86, 0fBF317200;
	fma.rn.f32 	%f87, %f85, %f86, %f83;
	mov.f32 	%f88, 0fB5BFBE8E;
	fma.rn.f32 	%f89, %f85, %f88, %f87;
	mul.f32 	%f23, %f89, 0f3FB8AA3B;
	// inline asm
	ex2.approx.ftz.f32 %f22,%f23;
	// inline asm
	add.f32 	%f90, %f85, 0f00000000;
	ex2.approx.f32 	%f91, %f90;
	mul.f32 	%f92, %f22, %f91;
	setp.lt.f32	%p15, %f83, 0fC2D20000;
	selp.f32	%f93, 0f00000000, %f92, %p15;
	setp.gt.f32	%p16, %f83, 0f42D20000;
	selp.f32	%f99, 0f7F800000, %f93, %p16;
	setp.eq.f32	%p17, %f99, 0f7F800000;
	@%p17 bra 	BB57_12;

	fma.rn.f32 	%f99, %f99, %f6, %f99;

BB57_12:
	setp.eq.f32	%p18, %f3, 0f3F800000;
	setp.lt.s16	%p19, %rs1, 0;
	and.pred  	%p20, %p19, %p18;
	mov.b32 	 %r7, %f99;
	xor.b32  	%r8, %r7, -2147483648;
	mov.b32 	 %f94, %r8;
	selp.f32	%f100, %f94, %f99, %p20;
	bra.uni 	BB57_17;

BB57_13:
	setp.eq.f32	%p21, %f3, 0f3F800000;
	add.f32 	%f96, %f1, %f1;
	mov.b32 	 %r9, %f96;
	selp.b32	%r10, %r9, 0, %p21;
	or.b32  	%r11, %r10, 2139095040;
	setp.lt.s16	%p22, %rs2, 0;
	selp.b32	%r12, %r11, %r10, %p22;
	mov.b32 	 %f100, %r12;
	bra.uni 	BB57_17;

BB57_14:
	setp.eq.f32	%p23, %f3, 0f3F800000;
	setp.lt.s16	%p24, %rs2, 0;
	selp.b32	%r13, 0, 2139095040, %p24;
	setp.lt.s16	%p25, %rs1, 0;
	and.pred  	%p26, %p25, %p23;
	or.b32  	%r14, %r13, -2147483648;
	selp.b32	%r15, %r14, %r13, %p26;
	mov.b32 	 %f100, %r15;
	bra.uni 	BB57_17;

BB57_15:
	setp.gt.f32	%p27, %f4, 0f3F800000;
	selp.b32	%r16, 2139095040, 0, %p27;
	xor.b32  	%r17, %r16, 2139095040;
	setp.lt.s16	%p28, %rs2, 0;
	selp.b32	%r18, %r17, %r16, %p28;
	mov.b32 	 %f97, %r18;
	setp.eq.s16	%p29, %rs4, 255;
	selp.f32	%f100, 0f3F800000, %f97, %p29;
	bra.uni 	BB57_17;

BB57_16:
	add.f32 	%f100, %f1, %f2;

BB57_17:
	cvt.rzi.s32.f32	%r19, %f100;
	cvt.s32.s8 	%r20, %r19;
	st.param.b32	[funj_retval0+0], %r20;
	ret;
}

.visible .func  (.param .b32 funj_retval0) ___powvv(
	.param .b32 ___powvv_param_0,
	.param .b32 ___powvv_param_1
)
{
	.reg .pred 	%p<18>;
	.reg .s16 	%rs<3>;
	.reg .s32 	%r<9>;
	.reg .f32 	%f<94>;


	ld.param.u8 	%rs1, [___powvv_param_0];
	cvt.rn.f32.u16	%f1, %rs1;
	ld.param.u8 	%rs2, [___powvv_param_1];
	cvt.rn.f32.u16	%f2, %rs2;
	setp.eq.s16	%p1, %rs2, 0;
	setp.eq.s16	%p2, %rs1, 1;
	or.pred  	%p3, %p2, %p1;
	@!%p3 bra 	BB58_2;
	bra.uni 	BB58_1;

BB58_1:
	mov.f32 	%f93, 0f3F800000;
	bra.uni 	BB58_13;

BB58_2:
	abs.f32 	%f3, %f1;
	setp.gtu.f32	%p4, %f3, 0f7F800000;
	@%p4 bra 	BB58_12;

	abs.f32 	%f4, %f2;
	setp.gtu.f32	%p5, %f4, 0f7F800000;
	@%p5 bra 	BB58_12;

	setp.eq.f32	%p6, %f4, 0f7F800000;
	@%p6 bra 	BB58_11;

	setp.neu.f32	%p7, %f3, 0f7F800000;
	@%p7 bra 	BB58_7;

	mov.f32 	%f93, 0f7F800000;
	bra.uni 	BB58_13;

BB58_7:
	setp.eq.s16	%p8, %rs1, 0;
	@%p8 bra 	BB58_10;

	setp.lt.f32	%p9, %f3, 0f00800000;
	selp.f32	%f16, 0fC3170000, 0fC2FE0000, %p9;
	mul.f32 	%f17, %f3, 0f4B800000;
	selp.f32	%f18, %f17, %f3, %p9;
	mov.b32 	 %r1, %f18;
	and.b32  	%r2, %r1, 8388607;
	or.b32  	%r3, %r2, 1065353216;
	mov.b32 	 %f19, %r3;
	shr.u32 	%r4, %r1, 23;
	cvt.rn.f32.u32	%f20, %r4;
	add.f32 	%f21, %f16, %f20;
	setp.gt.f32	%p10, %f19, 0f3FB504F3;
	mul.f32 	%f22, %f19, 0f3F000000;
	add.f32 	%f23, %f21, 0f3F800000;
	selp.f32	%f24, %f22, %f19, %p10;
	selp.f32	%f25, %f23, %f21, %p10;
	add.f32 	%f26, %f24, 0fBF800000;
	add.f32 	%f13, %f24, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f12,%f13;
	// inline asm
	add.f32 	%f27, %f26, %f26;
	mul.f32 	%f28, %f27, %f12;
	mul.f32 	%f29, %f28, %f28;
	mov.f32 	%f30, 0f3C4CAF63;
	mov.f32 	%f31, 0f3B18F0FE;
	fma.rn.f32 	%f32, %f31, %f29, %f30;
	mov.f32 	%f33, 0f3DAAAABD;
	fma.rn.f32 	%f34, %f32, %f29, %f33;
	mul.rn.f32 	%f35, %f34, %f29;
	mul.rn.f32 	%f36, %f35, %f28;
	sub.f32 	%f37, %f26, %f28;
	add.f32 	%f38, %f37, %f37;
	neg.f32 	%f39, %f28;
	fma.rn.f32 	%f40, %f39, %f26, %f38;
	mul.rn.f32 	%f41, %f12, %f40;
	add.f32 	%f42, %f28, %f36;
	sub.f32 	%f43, %f28, %f42;
	add.f32 	%f44, %f43, %f36;
	add.f32 	%f45, %f44, %f41;
	add.f32 	%f46, %f42, %f45;
	sub.f32 	%f47, %f42, %f46;
	add.f32 	%f48, %f47, %f45;
	mov.f32 	%f49, 0f3F317200;
	mul.rn.f32 	%f50, %f25, %f49;
	mov.f32 	%f51, 0f35BFBE8E;
	mul.rn.f32 	%f52, %f25, %f51;
	add.f32 	%f53, %f50, %f46;
	sub.f32 	%f54, %f50, %f53;
	add.f32 	%f55, %f54, %f46;
	add.f32 	%f56, %f55, %f48;
	add.f32 	%f57, %f56, %f52;
	add.f32 	%f58, %f53, %f57;
	sub.f32 	%f59, %f53, %f58;
	add.f32 	%f60, %f59, %f57;
	mul.f32 	%f61, %f2, 0f39000000;
	setp.gt.f32	%p11, %f4, 0f77F684DF;
	selp.f32	%f62, %f61, %f2, %p11;
	mul.rn.f32 	%f63, %f62, %f58;
	neg.f32 	%f64, %f63;
	fma.rn.f32 	%f65, %f62, %f58, %f64;
	fma.rn.f32 	%f66, %f62, %f60, %f65;
	mov.f32 	%f67, 0f00000000;
	fma.rn.f32 	%f68, %f67, %f58, %f66;
	add.rn.f32 	%f69, %f63, %f68;
	neg.f32 	%f70, %f69;
	add.rn.f32 	%f71, %f63, %f70;
	add.rn.f32 	%f72, %f71, %f68;
	mov.b32 	 %r5, %f69;
	setp.eq.s32	%p12, %r5, 1118925336;
	add.s32 	%r6, %r5, -1;
	mov.b32 	 %f73, %r6;
	add.f32 	%f74, %f72, 0f37000000;
	selp.f32	%f5, %f74, %f72, %p12;
	selp.f32	%f75, %f73, %f69, %p12;
	mul.f32 	%f76, %f75, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f77, %f76;
	mov.f32 	%f78, 0fBF317200;
	fma.rn.f32 	%f79, %f77, %f78, %f75;
	mov.f32 	%f80, 0fB5BFBE8E;
	fma.rn.f32 	%f81, %f77, %f80, %f79;
	mul.f32 	%f15, %f81, 0f3FB8AA3B;
	// inline asm
	ex2.approx.ftz.f32 %f14,%f15;
	// inline asm
	add.f32 	%f82, %f77, 0f00000000;
	ex2.approx.f32 	%f83, %f82;
	mul.f32 	%f84, %f14, %f83;
	setp.lt.f32	%p13, %f75, 0fC2D20000;
	selp.f32	%f85, 0f00000000, %f84, %p13;
	setp.gt.f32	%p14, %f75, 0f42D20000;
	selp.f32	%f93, 0f7F800000, %f85, %p14;
	setp.eq.f32	%p15, %f93, 0f7F800000;
	@%p15 bra 	BB58_13;

	fma.rn.f32 	%f93, %f93, %f5, %f93;
	bra.uni 	BB58_13;

BB58_10:
	mul.f32 	%f86, %f2, 0f3F000000;
	cvt.rzi.f32.f32	%f87, %f86;
	fma.rn.f32 	%f88, %f87, 0fC0000000, %f2;
	abs.f32 	%f89, %f88;
	setp.eq.f32	%p16, %f89, 0f3F800000;
	add.f32 	%f90, %f1, %f1;
	selp.f32	%f93, %f90, 0f00000000, %p16;
	bra.uni 	BB58_13;

BB58_11:
	setp.gt.f32	%p17, %f3, 0f3F800000;
	selp.f32	%f93, 0f7F800000, 0f00000000, %p17;
	bra.uni 	BB58_13;

BB58_12:
	add.f32 	%f93, %f1, %f2;

BB58_13:
	cvt.rzi.u32.f32	%r7, %f93;
	and.b32  	%r8, %r7, 255;
	st.param.b32	[funj_retval0+0], %r8;
	ret;
}

.visible .func  (.param .b64 funj_retval0) ___powdd(
	.param .b64 ___powdd_param_0,
	.param .b64 ___powdd_param_1
)
{
	.reg .pred 	%p<26>;
	.reg .s32 	%r<25>;
	.reg .f64 	%fd<20>;


	ld.param.f64 	%fd10, [___powdd_param_0];
	ld.param.f64 	%fd11, [___powdd_param_1];
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r1}, %fd10;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2}, %fd11;
	}
	mul.f64 	%fd12, %fd11, 0d3FE0000000000000;
	cvt.rzi.f64.f64	%fd13, %fd12;
	fma.rn.f64 	%fd14, %fd13, 0dC000000000000000, %fd11;
	abs.f64 	%fd1, %fd14;
	setp.eq.f64	%p1, %fd11, 0d0000000000000000;
	setp.eq.f64	%p2, %fd10, 0d3FF0000000000000;
	or.pred  	%p3, %p2, %p1;
	@!%p3 bra 	BB59_2;
	bra.uni 	BB59_1;

BB59_1:
	mov.f64 	%fd19, 0d3FF0000000000000;
	bra.uni 	BB59_16;

BB59_2:
	abs.f64 	%fd2, %fd10;
	setp.gtu.f64	%p4, %fd2, 0d7FF0000000000000;
	@%p4 bra 	BB59_15;

	abs.f64 	%fd15, %fd11;
	setp.gtu.f64	%p5, %fd15, 0d7FF0000000000000;
	@%p5 bra 	BB59_15;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r3, %temp}, %fd11;
	}
	and.b32  	%r4, %r2, 2147483647;
	setp.eq.s32	%p6, %r4, 2146435072;
	setp.eq.s32	%p7, %r3, 0;
	and.pred  	%p8, %p6, %p7;
	@%p8 bra 	BB59_14;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r5, %temp}, %fd10;
	}
	and.b32  	%r6, %r1, 2147483647;
	setp.eq.s32	%p9, %r6, 2146435072;
	setp.eq.s32	%p10, %r5, 0;
	and.pred  	%p11, %p9, %p10;
	@%p11 bra 	BB59_13;

	setp.eq.f64	%p12, %fd10, 0d0000000000000000;
	@%p12 bra 	BB59_12;

	setp.gt.s32	%p13, %r1, -1;
	@%p13 bra 	BB59_10;

	cvt.rzi.f64.f64	%fd16, %fd11;
	setp.eq.f64	%p14, %fd16, %fd11;
	@%p14 bra 	BB59_10;

	mov.f64 	%fd19, 0dFFF8000000000000;
	bra.uni 	BB59_16;

BB59_10:
	setp.lt.s32	%p15, %r1, 0;
	// Callseq Start 0
	{
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.f64	[param0+0], %fd2;
	.param .b64 param1;
	st.param.f64	[param1+0], %fd11;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_accurate_pow, 
	(
	param0, 
	param1
	);
	ld.param.f64	%fd19, [retval0+0];
	}
	// Callseq End 0
	setp.eq.f64	%p16, %fd1, 0d3FF0000000000000;
	and.pred  	%p17, %p15, %p16;
	@!%p17 bra 	BB59_16;
	bra.uni 	BB59_11;

BB59_11:
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r7}, %fd19;
	}
	xor.b32  	%r8, %r7, -2147483648;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r9, %temp}, %fd19;
	}
	mov.b64 	%fd19, {%r9, %r8};
	bra.uni 	BB59_16;

BB59_12:
	setp.eq.f64	%p18, %fd1, 0d3FF0000000000000;
	selp.b32	%r10, %r1, 0, %p18;
	mov.u32 	%r11, 0;
	or.b32  	%r12, %r10, 2146435072;
	setp.lt.s32	%p19, %r2, 0;
	selp.b32	%r13, %r12, %r10, %p19;
	mov.b64 	%fd19, {%r11, %r13};
	bra.uni 	BB59_16;

BB59_13:
	setp.eq.f64	%p20, %fd1, 0d3FF0000000000000;
	shr.s32 	%r14, %r2, 31;
	and.b32  	%r15, %r14, -2146435072;
	add.s32 	%r16, %r15, 2146435072;
	setp.lt.s32	%p21, %r1, 0;
	mov.u32 	%r17, 0;
	and.pred  	%p22, %p21, %p20;
	or.b32  	%r18, %r16, -2147483648;
	selp.b32	%r19, %r18, %r16, %p22;
	mov.b64 	%fd19, {%r17, %r19};
	bra.uni 	BB59_16;

BB59_14:
	setp.gt.f64	%p23, %fd2, 0d3FF0000000000000;
	selp.b32	%r20, 2146435072, 0, %p23;
	mov.u32 	%r21, 0;
	xor.b32  	%r22, %r20, 2146435072;
	setp.lt.s32	%p24, %r2, 0;
	selp.b32	%r23, %r22, %r20, %p24;
	setp.eq.f64	%p25, %fd10, 0dBFF0000000000000;
	selp.b32	%r24, 1072693248, %r23, %p25;
	mov.b64 	%fd19, {%r21, %r24};
	bra.uni 	BB59_16;

BB59_15:
	add.f64 	%fd19, %fd10, %fd11;

BB59_16:
	st.param.f64	[funj_retval0+0], %fd19;
	ret;
}

.visible .func  (.param .align 8 .b8 funj_retval0[8]) ___powcs(
	.param .align 8 .b8 ___powcs_param_0[8],
	.param .b32 ___powcs_param_1
)
{
	.local .align 4 .b8 	__local_depot60[28];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<71>;
	.reg .s32 	%r<211>;
	.reg .f32 	%f<239>;
	.reg .s64 	%rd<28>;


	mov.u64 	%SPL, __local_depot60;
	cvta.local.u64 	%SP, %SPL;
	ld.param.f32 	%f59, [___powcs_param_0+4];
	ld.param.f32 	%f60, [___powcs_param_0];
	ld.param.f32 	%f58, [___powcs_param_1];
	add.u64 	%rd14, %SP, 0;
	cvta.to.local.u64 	%rd25, %rd14;
	abs.f32 	%f1, %f60;
	abs.f32 	%f2, %f59;
	setp.gt.f32	%p1, %f1, %f2;
	selp.f32	%f61, %f1, %f2, %p1;
	selp.f32	%f62, %f2, %f1, %p1;
	div.rn.f32 	%f63, %f62, %f61;
	fma.rn.f32 	%f64, %f63, %f63, 0f3F800000;
	sqrt.rn.f32 	%f65, %f64;
	mul.f32 	%f66, %f61, %f65;
	setp.eq.f32	%p2, %f61, 0f00000000;
	setp.gt.f32	%p3, %f61, 0f7F7FFFFF;
	or.pred  	%p4, %p2, %p3;
	setp.gt.f32	%p5, %f62, 0f7F7FFFFF;
	or.pred  	%p6, %p4, %p5;
	add.f32 	%f67, %f61, %f62;
	selp.f32	%f3, %f67, %f66, %p6;
	setp.eq.f32	%p7, %f1, 0f00000000;
	setp.eq.f32	%p8, %f2, 0f00000000;
	and.pred  	%p9, %p7, %p8;
	mov.b32 	 %r1, %f60;
	mov.b32 	 %r61, %f59;
	and.b32  	%r2, %r61, -2147483648;
	@%p9 bra 	BB60_4;

	setp.eq.f32	%p10, %f1, 0f7F800000;
	setp.eq.f32	%p11, %f2, 0f7F800000;
	and.pred  	%p12, %p10, %p11;
	@%p12 bra 	BB60_3;

	max.f32 	%f68, %f2, %f1;
	min.f32 	%f69, %f2, %f1;
	div.rn.f32 	%f70, %f69, %f68;
	mul.rn.f32 	%f71, %f70, %f70;
	mov.f32 	%f72, 0fC0B59883;
	mov.f32 	%f73, 0fBF52C7EA;
	fma.rn.f32 	%f74, %f71, %f73, %f72;
	mov.f32 	%f75, 0fC0D21907;
	fma.rn.f32 	%f76, %f74, %f71, %f75;
	mul.f32 	%f77, %f76, %f71;
	mul.f32 	%f78, %f77, %f70;
	add.f32 	%f79, %f71, 0f41355DC0;
	mov.f32 	%f80, 0f41E6BD60;
	fma.rn.f32 	%f81, %f79, %f71, %f80;
	mov.f32 	%f82, 0f419D92C8;
	fma.rn.f32 	%f83, %f81, %f71, %f82;
	rcp.rn.f32 	%f84, %f83;
	fma.rn.f32 	%f85, %f78, %f84, %f70;
	mov.f32 	%f86, 0f3FC90FDB;
	sub.f32 	%f87, %f86, %f85;
	setp.gt.f32	%p13, %f2, %f1;
	selp.f32	%f88, %f87, %f85, %p13;
	mov.f32 	%f89, 0f40490FDB;
	sub.f32 	%f90, %f89, %f88;
	setp.lt.s32	%p14, %r1, 0;
	selp.f32	%f91, %f90, %f88, %p14;
	mov.b32 	 %r62, %f91;
	or.b32  	%r63, %r62, %r2;
	mov.b32 	 %f92, %r63;
	add.f32 	%f93, %f1, %f2;
	setp.gtu.f32	%p15, %f93, 0f7F800000;
	selp.f32	%f225, %f93, %f92, %p15;
	bra.uni 	BB60_5;

BB60_3:
	shr.s32 	%r64, %r1, 31;
	and.b32  	%r65, %r64, 13483017;
	add.s32 	%r66, %r65, 1061752795;
	or.b32  	%r67, %r66, %r2;
	mov.b32 	 %f225, %r67;
	bra.uni 	BB60_5;

BB60_4:
	shr.s32 	%r68, %r1, 31;
	and.b32  	%r69, %r68, 1078530011;
	or.b32  	%r70, %r69, %r2;
	mov.b32 	 %f225, %r70;

BB60_5:
	mul.f32 	%f94, %f58, 0f3F000000;
	cvt.rzi.f32.f32	%f95, %f94;
	fma.rn.f32 	%f96, %f95, 0fC0000000, %f58;
	abs.f32 	%f8, %f96;
	setp.eq.f32	%p16, %f58, 0f00000000;
	setp.eq.f32	%p17, %f3, 0f3F800000;
	or.pred  	%p18, %p17, %p16;
	@!%p18 bra 	BB60_7;
	bra.uni 	BB60_6;

BB60_6:
	mov.f32 	%f227, 0f3F800000;
	bra.uni 	BB60_22;

BB60_7:
	abs.f32 	%f9, %f3;
	setp.gtu.f32	%p19, %f9, 0f7F800000;
	@%p19 bra 	BB60_21;

	abs.f32 	%f10, %f58;
	setp.gtu.f32	%p20, %f10, 0f7F800000;
	@%p20 bra 	BB60_21;

	setp.eq.f32	%p21, %f10, 0f7F800000;
	@%p21 bra 	BB60_20;

	setp.eq.f32	%p22, %f9, 0f7F800000;
	@%p22 bra 	BB60_19;

	setp.eq.f32	%p23, %f3, 0f00000000;
	@%p23 bra 	BB60_18;

	setp.geu.f32	%p24, %f3, 0f00000000;
	@%p24 bra 	BB60_15;

	cvt.rzi.f32.f32	%f97, %f58;
	setp.eq.f32	%p25, %f97, %f58;
	@%p25 bra 	BB60_15;

	mov.f32 	%f227, 0f7FFFFFFF;
	bra.uni 	BB60_22;

BB60_15:
	setp.lt.f32	%p26, %f9, 0f00800000;
	selp.f32	%f102, 0fC3170000, 0fC2FE0000, %p26;
	mul.f32 	%f103, %f9, 0f4B800000;
	selp.f32	%f104, %f103, %f9, %p26;
	mov.b32 	 %r71, %f104;
	and.b32  	%r72, %r71, 8388607;
	or.b32  	%r73, %r72, 1065353216;
	mov.b32 	 %f105, %r73;
	shr.u32 	%r74, %r71, 23;
	cvt.rn.f32.u32	%f106, %r74;
	add.f32 	%f107, %f102, %f106;
	setp.gt.f32	%p27, %f105, 0f3FB504F3;
	mul.f32 	%f108, %f105, 0f3F000000;
	add.f32 	%f109, %f107, 0f3F800000;
	selp.f32	%f110, %f108, %f105, %p27;
	selp.f32	%f111, %f109, %f107, %p27;
	add.f32 	%f112, %f110, 0fBF800000;
	add.f32 	%f99, %f110, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f98,%f99;
	// inline asm
	add.f32 	%f113, %f112, %f112;
	mul.f32 	%f114, %f113, %f98;
	mul.f32 	%f115, %f114, %f114;
	mov.f32 	%f116, 0f3C4CAF63;
	mov.f32 	%f117, 0f3B18F0FE;
	fma.rn.f32 	%f118, %f117, %f115, %f116;
	mov.f32 	%f119, 0f3DAAAABD;
	fma.rn.f32 	%f120, %f118, %f115, %f119;
	mul.rn.f32 	%f121, %f120, %f115;
	mul.rn.f32 	%f122, %f121, %f114;
	sub.f32 	%f123, %f112, %f114;
	add.f32 	%f124, %f123, %f123;
	neg.f32 	%f125, %f114;
	fma.rn.f32 	%f126, %f125, %f112, %f124;
	mul.rn.f32 	%f127, %f98, %f126;
	add.f32 	%f128, %f114, %f122;
	sub.f32 	%f129, %f114, %f128;
	add.f32 	%f130, %f129, %f122;
	add.f32 	%f131, %f130, %f127;
	add.f32 	%f132, %f128, %f131;
	sub.f32 	%f133, %f128, %f132;
	add.f32 	%f134, %f133, %f131;
	mov.f32 	%f135, 0f3F317200;
	mul.rn.f32 	%f136, %f111, %f135;
	mov.f32 	%f137, 0f35BFBE8E;
	mul.rn.f32 	%f138, %f111, %f137;
	add.f32 	%f139, %f136, %f132;
	sub.f32 	%f140, %f136, %f139;
	add.f32 	%f141, %f140, %f132;
	add.f32 	%f142, %f141, %f134;
	add.f32 	%f143, %f142, %f138;
	add.f32 	%f144, %f139, %f143;
	sub.f32 	%f145, %f139, %f144;
	add.f32 	%f146, %f145, %f143;
	mul.f32 	%f147, %f58, 0f39000000;
	setp.gt.f32	%p28, %f10, 0f77F684DF;
	selp.f32	%f148, %f147, %f58, %p28;
	mul.rn.f32 	%f149, %f148, %f144;
	neg.f32 	%f150, %f149;
	fma.rn.f32 	%f151, %f148, %f144, %f150;
	fma.rn.f32 	%f152, %f148, %f146, %f151;
	mov.f32 	%f153, 0f00000000;
	fma.rn.f32 	%f154, %f153, %f144, %f152;
	add.rn.f32 	%f155, %f149, %f154;
	neg.f32 	%f156, %f155;
	add.rn.f32 	%f157, %f149, %f156;
	add.rn.f32 	%f158, %f157, %f154;
	mov.b32 	 %r75, %f155;
	setp.eq.s32	%p29, %r75, 1118925336;
	add.s32 	%r76, %r75, -1;
	mov.b32 	 %f159, %r76;
	add.f32 	%f160, %f158, 0f37000000;
	selp.f32	%f11, %f160, %f158, %p29;
	selp.f32	%f161, %f159, %f155, %p29;
	mul.f32 	%f162, %f161, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f163, %f162;
	mov.f32 	%f164, 0fBF317200;
	fma.rn.f32 	%f165, %f163, %f164, %f161;
	mov.f32 	%f166, 0fB5BFBE8E;
	fma.rn.f32 	%f167, %f163, %f166, %f165;
	mul.f32 	%f101, %f167, 0f3FB8AA3B;
	// inline asm
	ex2.approx.ftz.f32 %f100,%f101;
	// inline asm
	add.f32 	%f168, %f163, 0f00000000;
	ex2.approx.f32 	%f169, %f168;
	mul.f32 	%f170, %f100, %f169;
	setp.lt.f32	%p30, %f161, 0fC2D20000;
	selp.f32	%f171, 0f00000000, %f170, %p30;
	setp.gt.f32	%p31, %f161, 0f42D20000;
	selp.f32	%f226, 0f7F800000, %f171, %p31;
	setp.eq.f32	%p32, %f226, 0f7F800000;
	@%p32 bra 	BB60_17;

	fma.rn.f32 	%f226, %f226, %f11, %f226;

BB60_17:
	setp.eq.f32	%p33, %f8, 0f3F800000;
	setp.lt.f32	%p34, %f3, 0f00000000;
	and.pred  	%p35, %p34, %p33;
	mov.b32 	 %r77, %f226;
	xor.b32  	%r78, %r77, -2147483648;
	mov.b32 	 %f172, %r78;
	selp.f32	%f227, %f172, %f226, %p35;
	bra.uni 	BB60_22;

BB60_18:
	setp.eq.f32	%p36, %f8, 0f3F800000;
	add.f32 	%f174, %f3, %f3;
	mov.b32 	 %r79, %f174;
	selp.b32	%r80, %r79, 0, %p36;
	or.b32  	%r81, %r80, 2139095040;
	setp.lt.f32	%p37, %f58, 0f00000000;
	selp.b32	%r82, %r81, %r80, %p37;
	mov.b32 	 %f227, %r82;
	bra.uni 	BB60_22;

BB60_19:
	setp.eq.f32	%p38, %f8, 0f3F800000;
	setp.ltu.f32	%p39, %f58, 0f00000000;
	selp.b32	%r83, 0, 2139095040, %p39;
	setp.lt.f32	%p40, %f3, 0f00000000;
	and.pred  	%p41, %p40, %p38;
	or.b32  	%r84, %r83, -2147483648;
	selp.b32	%r85, %r84, %r83, %p41;
	mov.b32 	 %f227, %r85;
	bra.uni 	BB60_22;

BB60_20:
	setp.gt.f32	%p42, %f9, 0f3F800000;
	selp.b32	%r86, 2139095040, 0, %p42;
	xor.b32  	%r87, %r86, 2139095040;
	setp.lt.f32	%p43, %f58, 0f00000000;
	selp.b32	%r88, %r87, %r86, %p43;
	mov.b32 	 %f175, %r88;
	setp.eq.f32	%p44, %f3, 0fBF800000;
	selp.f32	%f227, 0f3F800000, %f175, %p44;
	bra.uni 	BB60_22;

BB60_21:
	add.f32 	%f227, %f3, %f58;

BB60_22:
	ld.param.f32 	%f224, [___powcs_param_1];
	mul.f32 	%f21, %f225, %f224;
	abs.f32 	%f22, %f21;
	setp.neu.f32	%p45, %f22, 0f7F800000;
	mov.f32 	%f234, %f21;
	@%p45 bra 	BB60_24;

	mov.f32 	%f177, 0f00000000;
	mul.rn.f32 	%f23, %f21, %f177;
	mov.f32 	%f234, %f23;

BB60_24:
	mov.f32 	%f24, %f234;
	mul.f32 	%f178, %f24, 0f3F22F983;
	cvt.rni.s32.f32	%r202, %f178;
	cvt.rn.f32.s32	%f179, %r202;
	neg.f32 	%f180, %f179;
	mov.f32 	%f181, 0f3FC90FDA;
	fma.rn.f32 	%f182, %f180, %f181, %f24;
	mov.f32 	%f183, 0f33A22168;
	fma.rn.f32 	%f184, %f180, %f183, %f182;
	mov.f32 	%f185, 0f27C234C5;
	fma.rn.f32 	%f228, %f180, %f185, %f184;
	abs.f32 	%f186, %f24;
	setp.leu.f32	%p46, %f186, 0f47CE4780;
	@%p46 bra 	BB60_32;

	add.s64 	%rd2, %rd25, 24;
	mov.b32 	 %r4, %f24;
	bfe.u32 	%r91, %r4, 23, 8;
	add.s32 	%r92, %r91, -128;
	shl.b32 	%r93, %r4, 8;
	or.b32  	%r5, %r93, -2147483648;
	shr.u32 	%r94, %r92, 5;
	mov.u32 	%r95, 4;
	sub.s32 	%r6, %r95, %r94;
	mov.u32 	%r196, 0;
	mov.u32 	%r195, %r196;
	mov.u64 	%rd24, __cudart_i2opi_f;

BB60_26:
	.pragma "nounroll";
	ld.const.u32 	%r98, [%rd24];
	// inline asm
	{
	mad.lo.cc.u32   %r96, %r98, %r5, %r196;
	madc.hi.u32     %r97, %r98, %r5,  0;
	}
	// inline asm
	st.local.u32 	[%rd25], %r96;
	add.s64 	%rd25, %rd25, 4;
	add.s64 	%rd24, %rd24, 4;
	add.s32 	%r195, %r195, 1;
	setp.ne.s32	%p47, %r195, 6;
	mov.u32 	%r196, %r97;
	@%p47 bra 	BB60_26;

	and.b32  	%r11, %r4, -2147483648;
	st.local.u32 	[%rd2], %r97;
	bfe.u32 	%r12, %r4, 23, 5;
	add.s32 	%r101, %r6, 2;
	cvta.to.local.u64 	%rd17, %rd14;
	mul.wide.s32 	%rd18, %r101, 4;
	add.s64 	%rd7, %rd17, %rd18;
	ld.local.u32 	%r197, [%rd7];
	ld.local.u32 	%r198, [%rd7+-4];
	setp.eq.s32	%p48, %r12, 0;
	@%p48 bra 	BB60_29;

	mov.u32 	%r102, 32;
	sub.s32 	%r103, %r102, %r12;
	shr.u32 	%r104, %r198, %r103;
	shl.b32 	%r105, %r197, %r12;
	add.s32 	%r197, %r104, %r105;
	ld.local.u32 	%r106, [%rd7+-8];
	shr.u32 	%r107, %r106, %r103;
	shl.b32 	%r108, %r198, %r12;
	add.s32 	%r198, %r107, %r108;

BB60_29:
	shr.u32 	%r109, %r198, 30;
	shl.b32 	%r110, %r197, 2;
	add.s32 	%r199, %r109, %r110;
	shl.b32 	%r20, %r198, 2;
	shr.u32 	%r111, %r199, 31;
	shr.u32 	%r112, %r197, 30;
	add.s32 	%r21, %r111, %r112;
	setp.eq.s32	%p49, %r111, 0;
	mov.u32 	%r200, %r11;
	mov.u32 	%r201, %r20;
	@%p49 bra 	BB60_31;

	not.b32 	%r113, %r199;
	neg.s32 	%r22, %r20;
	setp.eq.s32	%p50, %r20, 0;
	selp.u32	%r114, 1, 0, %p50;
	add.s32 	%r199, %r114, %r113;
	xor.b32  	%r24, %r11, -2147483648;
	mov.u32 	%r200, %r24;
	mov.u32 	%r201, %r22;

BB60_31:
	mov.u32 	%r26, %r200;
	neg.s32 	%r115, %r21;
	setp.eq.s32	%p51, %r11, 0;
	selp.b32	%r202, %r21, %r115, %p51;
	clz.b32 	%r116, %r199;
	setp.eq.s32	%p52, %r116, 0;
	shl.b32 	%r117, %r199, %r116;
	mov.u32 	%r118, 32;
	sub.s32 	%r119, %r118, %r116;
	shr.u32 	%r120, %r201, %r119;
	add.s32 	%r121, %r120, %r117;
	selp.b32	%r122, %r199, %r121, %p52;
	mul.lo.s32 	%r123, %r122, -921707870;
	mov.u32 	%r124, -921707870;
	mul.hi.u32 	%r125, %r122, %r124;
	setp.gt.s32	%p53, %r125, 0;
	shl.b32 	%r126, %r125, 1;
	shr.u32 	%r127, %r123, 31;
	add.s32 	%r128, %r127, %r126;
	selp.b32	%r129, %r128, %r125, %p53;
	selp.b32	%r130, -1, 0, %p53;
	mov.u32 	%r131, 126;
	sub.s32 	%r132, %r131, %r116;
	add.s32 	%r133, %r132, %r130;
	shl.b32 	%r134, %r133, 23;
	add.s32 	%r135, %r129, 1;
	shr.u32 	%r136, %r135, 7;
	add.s32 	%r137, %r136, 1;
	shr.u32 	%r138, %r137, 1;
	add.s32 	%r139, %r138, %r134;
	or.b32  	%r140, %r139, %r26;
	mov.b32 	 %f228, %r140;

BB60_32:
	mul.rn.f32 	%f28, %f228, %f228;
	add.s32 	%r30, %r202, 1;
	and.b32  	%r31, %r30, 1;
	setp.eq.s32	%p54, %r31, 0;
	@%p54 bra 	BB60_34;

	mov.f32 	%f187, 0fBAB6061A;
	mov.f32 	%f188, 0f37CCF5CE;
	fma.rn.f32 	%f229, %f188, %f28, %f187;
	bra.uni 	BB60_35;

BB60_34:
	mov.f32 	%f189, 0f3C08839E;
	mov.f32 	%f190, 0fB94CA1F9;
	fma.rn.f32 	%f229, %f190, %f28, %f189;

BB60_35:
	@%p54 bra 	BB60_37;

	mov.f32 	%f191, 0f3D2AAAA5;
	fma.rn.f32 	%f192, %f229, %f28, %f191;
	mov.f32 	%f193, 0fBF000000;
	fma.rn.f32 	%f230, %f192, %f28, %f193;
	bra.uni 	BB60_38;

BB60_37:
	mov.f32 	%f194, 0fBE2AAAA3;
	fma.rn.f32 	%f195, %f229, %f28, %f194;
	mov.f32 	%f196, 0f00000000;
	fma.rn.f32 	%f230, %f195, %f28, %f196;

BB60_38:
	fma.rn.f32 	%f231, %f230, %f228, %f228;
	@%p54 bra 	BB60_40;

	mov.f32 	%f197, 0f3F800000;
	fma.rn.f32 	%f231, %f230, %f28, %f197;

BB60_40:
	and.b32  	%r141, %r30, 2;
	setp.eq.s32	%p57, %r141, 0;
	@%p57 bra 	BB60_42;

	mov.f32 	%f198, 0f00000000;
	mov.f32 	%f199, 0fBF800000;
	fma.rn.f32 	%f231, %f231, %f199, %f198;

BB60_42:
	mov.f32 	%f233, %f21;
	@%p45 bra 	BB60_44;

	mov.f32 	%f200, 0f00000000;
	mul.rn.f32 	%f233, %f21, %f200;

BB60_44:
	mul.f32 	%f201, %f233, 0f3F22F983;
	cvt.rni.s32.f32	%r210, %f201;
	cvt.rn.f32.s32	%f202, %r210;
	neg.f32 	%f203, %f202;
	fma.rn.f32 	%f205, %f203, %f181, %f233;
	fma.rn.f32 	%f207, %f203, %f183, %f205;
	fma.rn.f32 	%f235, %f203, %f185, %f207;
	abs.f32 	%f209, %f233;
	setp.leu.f32	%p59, %f209, 0f47CE4780;
	@%p59 bra 	BB60_52;

	mov.b32 	 %r33, %f233;
	shr.u32 	%r34, %r33, 23;
	bfe.u32 	%r144, %r33, 23, 8;
	add.s32 	%r145, %r144, -128;
	shl.b32 	%r146, %r33, 8;
	or.b32  	%r35, %r146, -2147483648;
	shr.u32 	%r147, %r145, 5;
	mov.u32 	%r148, 4;
	sub.s32 	%r36, %r148, %r147;
	cvta.to.local.u64 	%rd27, %rd14;
	mov.u32 	%r204, 0;
	mov.u32 	%r203, %r204;
	mov.u64 	%rd26, __cudart_i2opi_f;

BB60_46:
	.pragma "nounroll";
	ld.const.u32 	%r151, [%rd26];
	// inline asm
	{
	mad.lo.cc.u32   %r149, %r151, %r35, %r204;
	madc.hi.u32     %r150, %r151, %r35,  0;
	}
	// inline asm
	st.local.u32 	[%rd27], %r149;
	add.s64 	%rd27, %rd27, 4;
	add.s64 	%rd26, %rd26, 4;
	add.s32 	%r203, %r203, 1;
	setp.ne.s32	%p60, %r203, 6;
	mov.u32 	%r204, %r150;
	@%p60 bra 	BB60_46;

	and.b32  	%r41, %r33, -2147483648;
	cvta.to.local.u64 	%rd22, %rd14;
	st.local.u32 	[%rd22+24], %r150;
	add.s32 	%r154, %r36, 2;
	mul.wide.s32 	%rd23, %r154, 4;
	add.s64 	%rd13, %rd22, %rd23;
	ld.local.u32 	%r205, [%rd13];
	ld.local.u32 	%r206, [%rd13+-4];
	and.b32  	%r44, %r34, 31;
	setp.eq.s32	%p61, %r44, 0;
	@%p61 bra 	BB60_49;

	mov.u32 	%r155, 32;
	sub.s32 	%r156, %r155, %r44;
	shr.u32 	%r157, %r206, %r156;
	shl.b32 	%r158, %r205, %r44;
	add.s32 	%r205, %r157, %r158;
	ld.local.u32 	%r159, [%rd13+-8];
	shr.u32 	%r160, %r159, %r156;
	shl.b32 	%r161, %r206, %r44;
	add.s32 	%r206, %r160, %r161;

BB60_49:
	shr.u32 	%r162, %r206, 30;
	shl.b32 	%r163, %r205, 2;
	add.s32 	%r207, %r162, %r163;
	shl.b32 	%r50, %r206, 2;
	shr.u32 	%r164, %r207, 31;
	shr.u32 	%r165, %r205, 30;
	add.s32 	%r51, %r164, %r165;
	setp.eq.s32	%p62, %r164, 0;
	mov.u32 	%r208, %r41;
	mov.u32 	%r209, %r50;
	@%p62 bra 	BB60_51;

	not.b32 	%r166, %r207;
	neg.s32 	%r52, %r50;
	setp.eq.s32	%p63, %r50, 0;
	selp.u32	%r167, 1, 0, %p63;
	add.s32 	%r207, %r167, %r166;
	xor.b32  	%r54, %r41, -2147483648;
	mov.u32 	%r208, %r54;
	mov.u32 	%r209, %r52;

BB60_51:
	mov.u32 	%r56, %r208;
	neg.s32 	%r168, %r51;
	setp.eq.s32	%p64, %r41, 0;
	selp.b32	%r210, %r51, %r168, %p64;
	clz.b32 	%r169, %r207;
	setp.eq.s32	%p65, %r169, 0;
	shl.b32 	%r170, %r207, %r169;
	mov.u32 	%r171, 32;
	sub.s32 	%r172, %r171, %r169;
	shr.u32 	%r173, %r209, %r172;
	add.s32 	%r174, %r173, %r170;
	selp.b32	%r175, %r207, %r174, %p65;
	mul.lo.s32 	%r176, %r175, -921707870;
	mov.u32 	%r177, -921707870;
	mul.hi.u32 	%r178, %r175, %r177;
	setp.gt.s32	%p66, %r178, 0;
	shl.b32 	%r179, %r178, 1;
	shr.u32 	%r180, %r176, 31;
	add.s32 	%r181, %r180, %r179;
	selp.b32	%r182, %r181, %r178, %p66;
	selp.b32	%r183, -1, 0, %p66;
	mov.u32 	%r184, 126;
	sub.s32 	%r185, %r184, %r169;
	add.s32 	%r186, %r185, %r183;
	shl.b32 	%r187, %r186, 23;
	add.s32 	%r188, %r182, 1;
	shr.u32 	%r189, %r188, 7;
	add.s32 	%r190, %r189, 1;
	shr.u32 	%r191, %r190, 1;
	add.s32 	%r192, %r191, %r187;
	or.b32  	%r193, %r192, %r56;
	mov.b32 	 %f235, %r193;

BB60_52:
	mul.f32 	%f45, %f227, %f231;
	mul.rn.f32 	%f46, %f235, %f235;
	and.b32  	%r60, %r210, 1;
	setp.eq.s32	%p67, %r60, 0;
	@%p67 bra 	BB60_54;

	mov.f32 	%f210, 0fBAB6061A;
	mov.f32 	%f211, 0f37CCF5CE;
	fma.rn.f32 	%f236, %f211, %f46, %f210;
	bra.uni 	BB60_55;

BB60_54:
	mov.f32 	%f212, 0f3C08839E;
	mov.f32 	%f213, 0fB94CA1F9;
	fma.rn.f32 	%f236, %f213, %f46, %f212;

BB60_55:
	@%p67 bra 	BB60_57;

	mov.f32 	%f214, 0f3D2AAAA5;
	fma.rn.f32 	%f215, %f236, %f46, %f214;
	mov.f32 	%f216, 0fBF000000;
	fma.rn.f32 	%f237, %f215, %f46, %f216;
	bra.uni 	BB60_58;

BB60_57:
	mov.f32 	%f217, 0fBE2AAAA3;
	fma.rn.f32 	%f218, %f236, %f46, %f217;
	mov.f32 	%f219, 0f00000000;
	fma.rn.f32 	%f237, %f218, %f46, %f219;

BB60_58:
	fma.rn.f32 	%f238, %f237, %f235, %f235;
	@%p67 bra 	BB60_60;

	mov.f32 	%f220, 0f3F800000;
	fma.rn.f32 	%f238, %f237, %f46, %f220;

BB60_60:
	and.b32  	%r194, %r210, 2;
	setp.eq.s32	%p70, %r194, 0;
	@%p70 bra 	BB60_62;

	mov.f32 	%f221, 0f00000000;
	mov.f32 	%f222, 0fBF800000;
	fma.rn.f32 	%f238, %f238, %f222, %f221;

BB60_62:
	mul.f32 	%f223, %f227, %f238;
	st.param.f32	[funj_retval0+0], %f45;
	st.param.f32	[funj_retval0+4], %f223;
	ret;
}

.visible .func  (.param .align 16 .b8 funj_retval0[16]) ___powzs(
	.param .align 16 .b8 ___powzs_param_0[16],
	.param .b32 ___powzs_param_1
)
{
	.local .align 4 .b8 	__local_depot61[28];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<73>;
	.reg .s32 	%r<211>;
	.reg .f32 	%f<198>;
	.reg .s64 	%rd<28>;
	.reg .f64 	%fd<73>;


	mov.u64 	%SPL, __local_depot61;
	cvta.local.u64 	%SP, %SPL;
	ld.param.f64 	%fd8, [___powzs_param_0+8];
	ld.param.f64 	%fd9, [___powzs_param_0];
	ld.param.f32 	%f51, [___powzs_param_1];
	add.u64 	%rd14, %SP, 0;
	cvta.to.local.u64 	%rd25, %rd14;
	abs.f64 	%fd1, %fd9;
	abs.f64 	%fd2, %fd8;
	setp.gt.f64	%p1, %fd1, %fd2;
	selp.f64	%fd10, %fd1, %fd2, %p1;
	selp.f64	%fd11, %fd2, %fd1, %p1;
	div.rn.f64 	%fd12, %fd11, %fd10;
	fma.rn.f64 	%fd13, %fd12, %fd12, 0d3FF0000000000000;
	sqrt.rn.f64 	%fd14, %fd13;
	mul.f64 	%fd15, %fd10, %fd14;
	setp.eq.f64	%p2, %fd10, 0d0000000000000000;
	setp.gt.f64	%p3, %fd10, 0d7FEFFFFFFFFFFFFF;
	or.pred  	%p4, %p2, %p3;
	setp.gt.f64	%p5, %fd11, 0d7FEFFFFFFFFFFFFF;
	or.pred  	%p6, %p4, %p5;
	add.f64 	%fd16, %fd10, %fd11;
	selp.f64	%fd17, %fd16, %fd15, %p6;
	cvt.rn.f32.f64	%f1, %fd17;
	setp.eq.f64	%p7, %fd1, 0d0000000000000000;
	setp.eq.f64	%p8, %fd2, 0d0000000000000000;
	and.pred  	%p9, %p7, %p8;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r1}, %fd9;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r61}, %fd8;
	}
	and.b32  	%r2, %r61, -2147483648;
	@%p9 bra 	BB61_4;

	setp.eq.f64	%p10, %fd1, 0d7FF0000000000000;
	setp.eq.f64	%p11, %fd2, 0d7FF0000000000000;
	and.pred  	%p12, %p10, %p11;
	@%p12 bra 	BB61_3;

	setp.lt.s32	%p13, %r1, 0;
	min.f64 	%fd18, %fd2, %fd1;
	max.f64 	%fd19, %fd2, %fd1;
	div.rn.f64 	%fd20, %fd18, %fd19;
	mul.f64 	%fd21, %fd20, %fd20;
	mov.f64 	%fd22, 0d3F2D3B63DBB65B49;
	mov.f64 	%fd23, 0dBEF53E1D2A25FF7E;
	fma.rn.f64 	%fd24, %fd23, %fd21, %fd22;
	mov.f64 	%fd25, 0dBF5312788DDE082E;
	fma.rn.f64 	%fd26, %fd24, %fd21, %fd25;
	mov.f64 	%fd27, 0d3F6F9690C8249315;
	fma.rn.f64 	%fd28, %fd26, %fd21, %fd27;
	mov.f64 	%fd29, 0dBF82CF5AABC7CF0D;
	fma.rn.f64 	%fd30, %fd28, %fd21, %fd29;
	mov.f64 	%fd31, 0d3F9162B0B2A3BFDE;
	fma.rn.f64 	%fd32, %fd30, %fd21, %fd31;
	mov.f64 	%fd33, 0dBF9A7256FEB6FC6B;
	fma.rn.f64 	%fd34, %fd32, %fd21, %fd33;
	mov.f64 	%fd35, 0d3FA171560CE4A489;
	fma.rn.f64 	%fd36, %fd34, %fd21, %fd35;
	mov.f64 	%fd37, 0dBFA4F44D841450E4;
	fma.rn.f64 	%fd38, %fd36, %fd21, %fd37;
	mov.f64 	%fd39, 0d3FA7EE3D3F36BB95;
	fma.rn.f64 	%fd40, %fd38, %fd21, %fd39;
	mov.f64 	%fd41, 0dBFAAD32AE04A9FD1;
	fma.rn.f64 	%fd42, %fd40, %fd21, %fd41;
	mov.f64 	%fd43, 0d3FAE17813D66954F;
	fma.rn.f64 	%fd44, %fd42, %fd21, %fd43;
	mov.f64 	%fd45, 0dBFB11089CA9A5BCD;
	fma.rn.f64 	%fd46, %fd44, %fd21, %fd45;
	mov.f64 	%fd47, 0d3FB3B12B2DB51738;
	fma.rn.f64 	%fd48, %fd46, %fd21, %fd47;
	mov.f64 	%fd49, 0dBFB745D022F8DC5C;
	fma.rn.f64 	%fd50, %fd48, %fd21, %fd49;
	mov.f64 	%fd51, 0d3FBC71C709DFE927;
	fma.rn.f64 	%fd52, %fd50, %fd21, %fd51;
	mov.f64 	%fd53, 0dBFC2492491FA1744;
	fma.rn.f64 	%fd54, %fd52, %fd21, %fd53;
	mov.f64 	%fd55, 0d3FC99999999840D2;
	fma.rn.f64 	%fd56, %fd54, %fd21, %fd55;
	mov.f64 	%fd57, 0dBFD555555555544C;
	fma.rn.f64 	%fd58, %fd56, %fd21, %fd57;
	mul.f64 	%fd59, %fd58, %fd21;
	fma.rn.f64 	%fd60, %fd59, %fd20, %fd20;
	mov.f64 	%fd61, 0d3FF921FB54442D18;
	sub.f64 	%fd62, %fd61, %fd60;
	setp.gt.f64	%p14, %fd2, %fd1;
	selp.f64	%fd63, %fd62, %fd60, %p14;
	mov.f64 	%fd64, 0d400921FB54442D18;
	sub.f64 	%fd65, %fd64, %fd63;
	selp.f64	%fd66, %fd65, %fd63, %p13;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r62, %temp}, %fd66;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r63}, %fd66;
	}
	or.b32  	%r64, %r63, %r2;
	mov.b64 	%fd67, {%r62, %r64};
	add.f64 	%fd68, %fd1, %fd2;
	setp.gtu.f64	%p15, %fd68, 0d7FF0000000000000;
	selp.f64	%fd72, %fd68, %fd67, %p15;
	bra.uni 	BB61_5;

BB61_3:
	setp.lt.s32	%p16, %r1, 0;
	selp.f64	%fd69, 0d4002D97C7F3321D2, 0d3FE921FB54442D18, %p16;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r65, %temp}, %fd69;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r66}, %fd69;
	}
	or.b32  	%r67, %r66, %r2;
	mov.b64 	%fd72, {%r65, %r67};
	bra.uni 	BB61_5;

BB61_4:
	setp.lt.s32	%p17, %r1, 0;
	selp.f64	%fd70, 0d400921FB54442D18, 0d0000000000000000, %p17;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r68, %temp}, %fd70;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r69}, %fd70;
	}
	or.b32  	%r70, %r69, %r2;
	mov.b64 	%fd72, {%r68, %r70};

BB61_5:
	mul.f32 	%f52, %f51, 0f3F000000;
	cvt.rzi.f32.f32	%f53, %f52;
	fma.rn.f32 	%f54, %f53, 0fC0000000, %f51;
	abs.f32 	%f2, %f54;
	setp.eq.f32	%p18, %f51, 0f00000000;
	setp.eq.f32	%p19, %f1, 0f3F800000;
	or.pred  	%p20, %p19, %p18;
	@!%p20 bra 	BB61_7;
	bra.uni 	BB61_6;

BB61_6:
	mov.f32 	%f186, 0f3F800000;
	bra.uni 	BB61_22;

BB61_7:
	abs.f32 	%f3, %f1;
	setp.gtu.f32	%p21, %f3, 0f7F800000;
	@%p21 bra 	BB61_21;

	abs.f32 	%f4, %f51;
	setp.gtu.f32	%p22, %f4, 0f7F800000;
	@%p22 bra 	BB61_21;

	setp.eq.f32	%p23, %f4, 0f7F800000;
	@%p23 bra 	BB61_20;

	setp.eq.f32	%p24, %f3, 0f7F800000;
	@%p24 bra 	BB61_19;

	setp.eq.f32	%p25, %f1, 0f00000000;
	@%p25 bra 	BB61_18;

	setp.geu.f32	%p26, %f1, 0f00000000;
	@%p26 bra 	BB61_15;

	cvt.rzi.f32.f32	%f55, %f51;
	setp.eq.f32	%p27, %f55, %f51;
	@%p27 bra 	BB61_15;

	mov.f32 	%f186, 0f7FFFFFFF;
	bra.uni 	BB61_22;

BB61_15:
	setp.lt.f32	%p28, %f3, 0f00800000;
	selp.f32	%f60, 0fC3170000, 0fC2FE0000, %p28;
	mul.f32 	%f61, %f3, 0f4B800000;
	selp.f32	%f62, %f61, %f3, %p28;
	mov.b32 	 %r71, %f62;
	and.b32  	%r72, %r71, 8388607;
	or.b32  	%r73, %r72, 1065353216;
	mov.b32 	 %f63, %r73;
	shr.u32 	%r74, %r71, 23;
	cvt.rn.f32.u32	%f64, %r74;
	add.f32 	%f65, %f60, %f64;
	setp.gt.f32	%p29, %f63, 0f3FB504F3;
	mul.f32 	%f66, %f63, 0f3F000000;
	add.f32 	%f67, %f65, 0f3F800000;
	selp.f32	%f68, %f66, %f63, %p29;
	selp.f32	%f69, %f67, %f65, %p29;
	add.f32 	%f70, %f68, 0fBF800000;
	add.f32 	%f57, %f68, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f56,%f57;
	// inline asm
	add.f32 	%f71, %f70, %f70;
	mul.f32 	%f72, %f71, %f56;
	mul.f32 	%f73, %f72, %f72;
	mov.f32 	%f74, 0f3C4CAF63;
	mov.f32 	%f75, 0f3B18F0FE;
	fma.rn.f32 	%f76, %f75, %f73, %f74;
	mov.f32 	%f77, 0f3DAAAABD;
	fma.rn.f32 	%f78, %f76, %f73, %f77;
	mul.rn.f32 	%f79, %f78, %f73;
	mul.rn.f32 	%f80, %f79, %f72;
	sub.f32 	%f81, %f70, %f72;
	add.f32 	%f82, %f81, %f81;
	neg.f32 	%f83, %f72;
	fma.rn.f32 	%f84, %f83, %f70, %f82;
	mul.rn.f32 	%f85, %f56, %f84;
	add.f32 	%f86, %f72, %f80;
	sub.f32 	%f87, %f72, %f86;
	add.f32 	%f88, %f87, %f80;
	add.f32 	%f89, %f88, %f85;
	add.f32 	%f90, %f86, %f89;
	sub.f32 	%f91, %f86, %f90;
	add.f32 	%f92, %f91, %f89;
	mov.f32 	%f93, 0f3F317200;
	mul.rn.f32 	%f94, %f69, %f93;
	mov.f32 	%f95, 0f35BFBE8E;
	mul.rn.f32 	%f96, %f69, %f95;
	add.f32 	%f97, %f94, %f90;
	sub.f32 	%f98, %f94, %f97;
	add.f32 	%f99, %f98, %f90;
	add.f32 	%f100, %f99, %f92;
	add.f32 	%f101, %f100, %f96;
	add.f32 	%f102, %f97, %f101;
	sub.f32 	%f103, %f97, %f102;
	add.f32 	%f104, %f103, %f101;
	mul.f32 	%f105, %f51, 0f39000000;
	setp.gt.f32	%p30, %f4, 0f77F684DF;
	selp.f32	%f106, %f105, %f51, %p30;
	mul.rn.f32 	%f107, %f106, %f102;
	neg.f32 	%f108, %f107;
	fma.rn.f32 	%f109, %f106, %f102, %f108;
	fma.rn.f32 	%f110, %f106, %f104, %f109;
	mov.f32 	%f111, 0f00000000;
	fma.rn.f32 	%f112, %f111, %f102, %f110;
	add.rn.f32 	%f113, %f107, %f112;
	neg.f32 	%f114, %f113;
	add.rn.f32 	%f115, %f107, %f114;
	add.rn.f32 	%f116, %f115, %f112;
	mov.b32 	 %r75, %f113;
	setp.eq.s32	%p31, %r75, 1118925336;
	add.s32 	%r76, %r75, -1;
	mov.b32 	 %f117, %r76;
	add.f32 	%f118, %f116, 0f37000000;
	selp.f32	%f5, %f118, %f116, %p31;
	selp.f32	%f119, %f117, %f113, %p31;
	mul.f32 	%f120, %f119, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f121, %f120;
	mov.f32 	%f122, 0fBF317200;
	fma.rn.f32 	%f123, %f121, %f122, %f119;
	mov.f32 	%f124, 0fB5BFBE8E;
	fma.rn.f32 	%f125, %f121, %f124, %f123;
	mul.f32 	%f59, %f125, 0f3FB8AA3B;
	// inline asm
	ex2.approx.ftz.f32 %f58,%f59;
	// inline asm
	add.f32 	%f126, %f121, 0f00000000;
	ex2.approx.f32 	%f127, %f126;
	mul.f32 	%f128, %f58, %f127;
	setp.lt.f32	%p32, %f119, 0fC2D20000;
	selp.f32	%f129, 0f00000000, %f128, %p32;
	setp.gt.f32	%p33, %f119, 0f42D20000;
	selp.f32	%f185, 0f7F800000, %f129, %p33;
	setp.eq.f32	%p34, %f185, 0f7F800000;
	@%p34 bra 	BB61_17;

	fma.rn.f32 	%f185, %f185, %f5, %f185;

BB61_17:
	setp.eq.f32	%p35, %f2, 0f3F800000;
	setp.lt.f32	%p36, %f1, 0f00000000;
	and.pred  	%p37, %p36, %p35;
	mov.b32 	 %r77, %f185;
	xor.b32  	%r78, %r77, -2147483648;
	mov.b32 	 %f130, %r78;
	selp.f32	%f186, %f130, %f185, %p37;
	bra.uni 	BB61_22;

BB61_18:
	setp.eq.f32	%p38, %f2, 0f3F800000;
	add.f32 	%f132, %f1, %f1;
	mov.b32 	 %r79, %f132;
	selp.b32	%r80, %r79, 0, %p38;
	or.b32  	%r81, %r80, 2139095040;
	setp.lt.f32	%p39, %f51, 0f00000000;
	selp.b32	%r82, %r81, %r80, %p39;
	mov.b32 	 %f186, %r82;
	bra.uni 	BB61_22;

BB61_19:
	setp.eq.f32	%p40, %f2, 0f3F800000;
	setp.ltu.f32	%p41, %f51, 0f00000000;
	selp.b32	%r83, 0, 2139095040, %p41;
	setp.lt.f32	%p42, %f1, 0f00000000;
	and.pred  	%p43, %p42, %p40;
	or.b32  	%r84, %r83, -2147483648;
	selp.b32	%r85, %r84, %r83, %p43;
	mov.b32 	 %f186, %r85;
	bra.uni 	BB61_22;

BB61_20:
	setp.gt.f32	%p44, %f3, 0f3F800000;
	selp.b32	%r86, 2139095040, 0, %p44;
	xor.b32  	%r87, %r86, 2139095040;
	setp.lt.f32	%p45, %f51, 0f00000000;
	selp.b32	%r88, %r87, %r86, %p45;
	mov.b32 	 %f133, %r88;
	setp.eq.f32	%p46, %f1, 0fBF800000;
	selp.f32	%f186, 0f3F800000, %f133, %p46;
	bra.uni 	BB61_22;

BB61_21:
	add.f32 	%f186, %f1, %f51;

BB61_22:
	ld.param.f32 	%f184, [___powzs_param_1];
	cvt.rn.f32.f64	%f135, %fd72;
	mul.f32 	%f15, %f135, %f184;
	abs.f32 	%f16, %f15;
	setp.neu.f32	%p47, %f16, 0f7F800000;
	mov.f32 	%f193, %f15;
	@%p47 bra 	BB61_24;

	mov.f32 	%f136, 0f00000000;
	mul.rn.f32 	%f17, %f15, %f136;
	mov.f32 	%f193, %f17;

BB61_24:
	mov.f32 	%f18, %f193;
	mul.f32 	%f137, %f18, 0f3F22F983;
	cvt.rni.s32.f32	%r202, %f137;
	cvt.rn.f32.s32	%f138, %r202;
	neg.f32 	%f139, %f138;
	mov.f32 	%f140, 0f3FC90FDA;
	fma.rn.f32 	%f141, %f139, %f140, %f18;
	mov.f32 	%f142, 0f33A22168;
	fma.rn.f32 	%f143, %f139, %f142, %f141;
	mov.f32 	%f144, 0f27C234C5;
	fma.rn.f32 	%f187, %f139, %f144, %f143;
	abs.f32 	%f145, %f18;
	setp.leu.f32	%p48, %f145, 0f47CE4780;
	@%p48 bra 	BB61_32;

	add.s64 	%rd2, %rd25, 24;
	mov.b32 	 %r4, %f18;
	bfe.u32 	%r91, %r4, 23, 8;
	add.s32 	%r92, %r91, -128;
	shl.b32 	%r93, %r4, 8;
	or.b32  	%r5, %r93, -2147483648;
	shr.u32 	%r94, %r92, 5;
	mov.u32 	%r95, 4;
	sub.s32 	%r6, %r95, %r94;
	mov.u32 	%r196, 0;
	mov.u32 	%r195, %r196;
	mov.u64 	%rd24, __cudart_i2opi_f;

BB61_26:
	.pragma "nounroll";
	ld.const.u32 	%r98, [%rd24];
	// inline asm
	{
	mad.lo.cc.u32   %r96, %r98, %r5, %r196;
	madc.hi.u32     %r97, %r98, %r5,  0;
	}
	// inline asm
	st.local.u32 	[%rd25], %r96;
	add.s64 	%rd25, %rd25, 4;
	add.s64 	%rd24, %rd24, 4;
	add.s32 	%r195, %r195, 1;
	setp.ne.s32	%p49, %r195, 6;
	mov.u32 	%r196, %r97;
	@%p49 bra 	BB61_26;

	and.b32  	%r11, %r4, -2147483648;
	st.local.u32 	[%rd2], %r97;
	bfe.u32 	%r12, %r4, 23, 5;
	add.s32 	%r101, %r6, 2;
	cvta.to.local.u64 	%rd17, %rd14;
	mul.wide.s32 	%rd18, %r101, 4;
	add.s64 	%rd7, %rd17, %rd18;
	ld.local.u32 	%r197, [%rd7];
	ld.local.u32 	%r198, [%rd7+-4];
	setp.eq.s32	%p50, %r12, 0;
	@%p50 bra 	BB61_29;

	mov.u32 	%r102, 32;
	sub.s32 	%r103, %r102, %r12;
	shr.u32 	%r104, %r198, %r103;
	shl.b32 	%r105, %r197, %r12;
	add.s32 	%r197, %r104, %r105;
	ld.local.u32 	%r106, [%rd7+-8];
	shr.u32 	%r107, %r106, %r103;
	shl.b32 	%r108, %r198, %r12;
	add.s32 	%r198, %r107, %r108;

BB61_29:
	shr.u32 	%r109, %r198, 30;
	shl.b32 	%r110, %r197, 2;
	add.s32 	%r199, %r109, %r110;
	shl.b32 	%r20, %r198, 2;
	shr.u32 	%r111, %r199, 31;
	shr.u32 	%r112, %r197, 30;
	add.s32 	%r21, %r111, %r112;
	setp.eq.s32	%p51, %r111, 0;
	mov.u32 	%r200, %r11;
	mov.u32 	%r201, %r20;
	@%p51 bra 	BB61_31;

	not.b32 	%r113, %r199;
	neg.s32 	%r22, %r20;
	setp.eq.s32	%p52, %r20, 0;
	selp.u32	%r114, 1, 0, %p52;
	add.s32 	%r199, %r114, %r113;
	xor.b32  	%r24, %r11, -2147483648;
	mov.u32 	%r200, %r24;
	mov.u32 	%r201, %r22;

BB61_31:
	mov.u32 	%r26, %r200;
	neg.s32 	%r115, %r21;
	setp.eq.s32	%p53, %r11, 0;
	selp.b32	%r202, %r21, %r115, %p53;
	clz.b32 	%r116, %r199;
	setp.eq.s32	%p54, %r116, 0;
	shl.b32 	%r117, %r199, %r116;
	mov.u32 	%r118, 32;
	sub.s32 	%r119, %r118, %r116;
	shr.u32 	%r120, %r201, %r119;
	add.s32 	%r121, %r120, %r117;
	selp.b32	%r122, %r199, %r121, %p54;
	mul.lo.s32 	%r123, %r122, -921707870;
	mov.u32 	%r124, -921707870;
	mul.hi.u32 	%r125, %r122, %r124;
	setp.gt.s32	%p55, %r125, 0;
	shl.b32 	%r126, %r125, 1;
	shr.u32 	%r127, %r123, 31;
	add.s32 	%r128, %r127, %r126;
	selp.b32	%r129, %r128, %r125, %p55;
	selp.b32	%r130, -1, 0, %p55;
	mov.u32 	%r131, 126;
	sub.s32 	%r132, %r131, %r116;
	add.s32 	%r133, %r132, %r130;
	shl.b32 	%r134, %r133, 23;
	add.s32 	%r135, %r129, 1;
	shr.u32 	%r136, %r135, 7;
	add.s32 	%r137, %r136, 1;
	shr.u32 	%r138, %r137, 1;
	add.s32 	%r139, %r138, %r134;
	or.b32  	%r140, %r139, %r26;
	mov.b32 	 %f187, %r140;

BB61_32:
	mul.rn.f32 	%f22, %f187, %f187;
	add.s32 	%r30, %r202, 1;
	and.b32  	%r31, %r30, 1;
	setp.eq.s32	%p56, %r31, 0;
	@%p56 bra 	BB61_34;

	mov.f32 	%f146, 0fBAB6061A;
	mov.f32 	%f147, 0f37CCF5CE;
	fma.rn.f32 	%f188, %f147, %f22, %f146;
	bra.uni 	BB61_35;

BB61_34:
	mov.f32 	%f148, 0f3C08839E;
	mov.f32 	%f149, 0fB94CA1F9;
	fma.rn.f32 	%f188, %f149, %f22, %f148;

BB61_35:
	@%p56 bra 	BB61_37;

	mov.f32 	%f150, 0f3D2AAAA5;
	fma.rn.f32 	%f151, %f188, %f22, %f150;
	mov.f32 	%f152, 0fBF000000;
	fma.rn.f32 	%f189, %f151, %f22, %f152;
	bra.uni 	BB61_38;

BB61_37:
	mov.f32 	%f153, 0fBE2AAAA3;
	fma.rn.f32 	%f154, %f188, %f22, %f153;
	mov.f32 	%f155, 0f00000000;
	fma.rn.f32 	%f189, %f154, %f22, %f155;

BB61_38:
	fma.rn.f32 	%f190, %f189, %f187, %f187;
	@%p56 bra 	BB61_40;

	mov.f32 	%f156, 0f3F800000;
	fma.rn.f32 	%f190, %f189, %f22, %f156;

BB61_40:
	and.b32  	%r141, %r30, 2;
	setp.eq.s32	%p59, %r141, 0;
	@%p59 bra 	BB61_42;

	mov.f32 	%f157, 0f00000000;
	mov.f32 	%f158, 0fBF800000;
	fma.rn.f32 	%f190, %f190, %f158, %f157;

BB61_42:
	mov.f32 	%f192, %f15;
	@%p47 bra 	BB61_44;

	mov.f32 	%f159, 0f00000000;
	mul.rn.f32 	%f192, %f15, %f159;

BB61_44:
	mul.f32 	%f160, %f192, 0f3F22F983;
	cvt.rni.s32.f32	%r210, %f160;
	cvt.rn.f32.s32	%f161, %r210;
	neg.f32 	%f162, %f161;
	fma.rn.f32 	%f164, %f162, %f140, %f192;
	fma.rn.f32 	%f166, %f162, %f142, %f164;
	fma.rn.f32 	%f194, %f162, %f144, %f166;
	abs.f32 	%f168, %f192;
	setp.leu.f32	%p61, %f168, 0f47CE4780;
	@%p61 bra 	BB61_52;

	mov.b32 	 %r33, %f192;
	shr.u32 	%r34, %r33, 23;
	bfe.u32 	%r144, %r33, 23, 8;
	add.s32 	%r145, %r144, -128;
	shl.b32 	%r146, %r33, 8;
	or.b32  	%r35, %r146, -2147483648;
	shr.u32 	%r147, %r145, 5;
	mov.u32 	%r148, 4;
	sub.s32 	%r36, %r148, %r147;
	cvta.to.local.u64 	%rd27, %rd14;
	mov.u32 	%r204, 0;
	mov.u32 	%r203, %r204;
	mov.u64 	%rd26, __cudart_i2opi_f;

BB61_46:
	.pragma "nounroll";
	ld.const.u32 	%r151, [%rd26];
	// inline asm
	{
	mad.lo.cc.u32   %r149, %r151, %r35, %r204;
	madc.hi.u32     %r150, %r151, %r35,  0;
	}
	// inline asm
	st.local.u32 	[%rd27], %r149;
	add.s64 	%rd27, %rd27, 4;
	add.s64 	%rd26, %rd26, 4;
	add.s32 	%r203, %r203, 1;
	setp.ne.s32	%p62, %r203, 6;
	mov.u32 	%r204, %r150;
	@%p62 bra 	BB61_46;

	and.b32  	%r41, %r33, -2147483648;
	cvta.to.local.u64 	%rd22, %rd14;
	st.local.u32 	[%rd22+24], %r150;
	add.s32 	%r154, %r36, 2;
	mul.wide.s32 	%rd23, %r154, 4;
	add.s64 	%rd13, %rd22, %rd23;
	ld.local.u32 	%r205, [%rd13];
	ld.local.u32 	%r206, [%rd13+-4];
	and.b32  	%r44, %r34, 31;
	setp.eq.s32	%p63, %r44, 0;
	@%p63 bra 	BB61_49;

	mov.u32 	%r155, 32;
	sub.s32 	%r156, %r155, %r44;
	shr.u32 	%r157, %r206, %r156;
	shl.b32 	%r158, %r205, %r44;
	add.s32 	%r205, %r157, %r158;
	ld.local.u32 	%r159, [%rd13+-8];
	shr.u32 	%r160, %r159, %r156;
	shl.b32 	%r161, %r206, %r44;
	add.s32 	%r206, %r160, %r161;

BB61_49:
	shr.u32 	%r162, %r206, 30;
	shl.b32 	%r163, %r205, 2;
	add.s32 	%r207, %r162, %r163;
	shl.b32 	%r50, %r206, 2;
	shr.u32 	%r164, %r207, 31;
	shr.u32 	%r165, %r205, 30;
	add.s32 	%r51, %r164, %r165;
	setp.eq.s32	%p64, %r164, 0;
	mov.u32 	%r208, %r41;
	mov.u32 	%r209, %r50;
	@%p64 bra 	BB61_51;

	not.b32 	%r166, %r207;
	neg.s32 	%r52, %r50;
	setp.eq.s32	%p65, %r50, 0;
	selp.u32	%r167, 1, 0, %p65;
	add.s32 	%r207, %r167, %r166;
	xor.b32  	%r54, %r41, -2147483648;
	mov.u32 	%r208, %r54;
	mov.u32 	%r209, %r52;

BB61_51:
	mov.u32 	%r56, %r208;
	neg.s32 	%r168, %r51;
	setp.eq.s32	%p66, %r41, 0;
	selp.b32	%r210, %r51, %r168, %p66;
	clz.b32 	%r169, %r207;
	setp.eq.s32	%p67, %r169, 0;
	shl.b32 	%r170, %r207, %r169;
	mov.u32 	%r171, 32;
	sub.s32 	%r172, %r171, %r169;
	shr.u32 	%r173, %r209, %r172;
	add.s32 	%r174, %r173, %r170;
	selp.b32	%r175, %r207, %r174, %p67;
	mul.lo.s32 	%r176, %r175, -921707870;
	mov.u32 	%r177, -921707870;
	mul.hi.u32 	%r178, %r175, %r177;
	setp.gt.s32	%p68, %r178, 0;
	shl.b32 	%r179, %r178, 1;
	shr.u32 	%r180, %r176, 31;
	add.s32 	%r181, %r180, %r179;
	selp.b32	%r182, %r181, %r178, %p68;
	selp.b32	%r183, -1, 0, %p68;
	mov.u32 	%r184, 126;
	sub.s32 	%r185, %r184, %r169;
	add.s32 	%r186, %r185, %r183;
	shl.b32 	%r187, %r186, 23;
	add.s32 	%r188, %r182, 1;
	shr.u32 	%r189, %r188, 7;
	add.s32 	%r190, %r189, 1;
	shr.u32 	%r191, %r190, 1;
	add.s32 	%r192, %r191, %r187;
	or.b32  	%r193, %r192, %r56;
	mov.b32 	 %f194, %r193;

BB61_52:
	mul.f32 	%f169, %f186, %f190;
	cvt.f64.f32	%fd7, %f169;
	mul.rn.f32 	%f39, %f194, %f194;
	and.b32  	%r60, %r210, 1;
	setp.eq.s32	%p69, %r60, 0;
	@%p69 bra 	BB61_54;

	mov.f32 	%f170, 0fBAB6061A;
	mov.f32 	%f171, 0f37CCF5CE;
	fma.rn.f32 	%f195, %f171, %f39, %f170;
	bra.uni 	BB61_55;

BB61_54:
	mov.f32 	%f172, 0f3C08839E;
	mov.f32 	%f173, 0fB94CA1F9;
	fma.rn.f32 	%f195, %f173, %f39, %f172;

BB61_55:
	@%p69 bra 	BB61_57;

	mov.f32 	%f174, 0f3D2AAAA5;
	fma.rn.f32 	%f175, %f195, %f39, %f174;
	mov.f32 	%f176, 0fBF000000;
	fma.rn.f32 	%f196, %f175, %f39, %f176;
	bra.uni 	BB61_58;

BB61_57:
	mov.f32 	%f177, 0fBE2AAAA3;
	fma.rn.f32 	%f178, %f195, %f39, %f177;
	mov.f32 	%f179, 0f00000000;
	fma.rn.f32 	%f196, %f178, %f39, %f179;

BB61_58:
	fma.rn.f32 	%f197, %f196, %f194, %f194;
	@%p69 bra 	BB61_60;

	mov.f32 	%f180, 0f3F800000;
	fma.rn.f32 	%f197, %f196, %f39, %f180;

BB61_60:
	and.b32  	%r194, %r210, 2;
	setp.eq.s32	%p72, %r194, 0;
	@%p72 bra 	BB61_62;

	mov.f32 	%f181, 0f00000000;
	mov.f32 	%f182, 0fBF800000;
	fma.rn.f32 	%f197, %f197, %f182, %f181;

BB61_62:
	mul.f32 	%f183, %f186, %f197;
	cvt.f64.f32	%fd71, %f183;
	st.param.f64	[funj_retval0+0], %fd7;
	st.param.f64	[funj_retval0+8], %fd71;
	ret;
}

.func  (.param .b64 funj_retval0) __internal_accurate_pow(
	.param .b64 __internal_accurate_pow_param_0,
	.param .b64 __internal_accurate_pow_param_1
)
{
	.reg .pred 	%p<11>;
	.reg .s32 	%r<51>;
	.reg .f32 	%f<3>;
	.reg .f64 	%fd<140>;


	ld.param.f64 	%fd14, [__internal_accurate_pow_param_0];
	ld.param.f64 	%fd15, [__internal_accurate_pow_param_1];
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r47}, %fd14;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%r46, %temp}, %fd14;
	}
	shr.u32 	%r48, %r47, 20;
	setp.ne.s32	%p1, %r48, 0;
	@%p1 bra 	BB62_2;

	mul.f64 	%fd16, %fd14, 0d4350000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r47}, %fd16;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%r46, %temp}, %fd16;
	}
	shr.u32 	%r18, %r47, 20;
	add.s32 	%r48, %r18, -54;

BB62_2:
	add.s32 	%r49, %r48, -1023;
	and.b32  	%r19, %r47, -2146435073;
	or.b32  	%r20, %r19, 1072693248;
	mov.b64 	%fd137, {%r46, %r20};
	setp.lt.u32	%p2, %r20, 1073127583;
	@%p2 bra 	BB62_4;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r21, %temp}, %fd137;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r22}, %fd137;
	}
	add.s32 	%r23, %r22, -1048576;
	mov.b64 	%fd137, {%r21, %r23};
	add.s32 	%r49, %r48, -1022;

BB62_4:
	add.f64 	%fd18, %fd137, 0d3FF0000000000000;
	mov.f64 	%fd19, 0d3FF0000000000000;
	// inline asm
	rcp.approx.ftz.f64 %fd17,%fd18;
	// inline asm
	neg.f64 	%fd20, %fd18;
	fma.rn.f64 	%fd21, %fd20, %fd17, %fd19;
	fma.rn.f64 	%fd22, %fd21, %fd21, %fd21;
	fma.rn.f64 	%fd23, %fd22, %fd17, %fd17;
	add.f64 	%fd24, %fd137, 0dBFF0000000000000;
	mul.f64 	%fd25, %fd24, %fd23;
	fma.rn.f64 	%fd26, %fd24, %fd23, %fd25;
	mul.f64 	%fd27, %fd26, %fd26;
	mov.f64 	%fd28, 0d3ED0F5D241AD3B5A;
	mov.f64 	%fd29, 0d3EB0F5FF7D2CAFE2;
	fma.rn.f64 	%fd30, %fd29, %fd27, %fd28;
	mov.f64 	%fd31, 0d3EF3B20A75488A3F;
	fma.rn.f64 	%fd32, %fd30, %fd27, %fd31;
	mov.f64 	%fd33, 0d3F1745CDE4FAECD5;
	fma.rn.f64 	%fd34, %fd32, %fd27, %fd33;
	mov.f64 	%fd35, 0d3F3C71C7258A578B;
	fma.rn.f64 	%fd36, %fd34, %fd27, %fd35;
	mov.f64 	%fd37, 0d3F6249249242B910;
	fma.rn.f64 	%fd38, %fd36, %fd27, %fd37;
	mov.f64 	%fd39, 0d3F89999999999DFB;
	fma.rn.f64 	%fd40, %fd38, %fd27, %fd39;
	sub.f64 	%fd41, %fd24, %fd26;
	add.f64 	%fd42, %fd41, %fd41;
	neg.f64 	%fd43, %fd26;
	fma.rn.f64 	%fd44, %fd43, %fd24, %fd42;
	mul.f64 	%fd45, %fd23, %fd44;
	fma.rn.f64 	%fd46, %fd40, %fd27, 0d3FB5555555555555;
	mov.f64 	%fd47, 0d3FB5555555555555;
	sub.f64 	%fd48, %fd47, %fd46;
	fma.rn.f64 	%fd49, %fd40, %fd27, %fd48;
	add.f64 	%fd50, %fd49, 0d0000000000000000;
	add.f64 	%fd51, %fd50, 0dBC46A4CB00B9E7B0;
	add.f64 	%fd52, %fd46, %fd51;
	sub.f64 	%fd53, %fd46, %fd52;
	add.f64 	%fd54, %fd53, %fd51;
	mul.rn.f64 	%fd55, %fd26, %fd26;
	neg.f64 	%fd56, %fd55;
	fma.rn.f64 	%fd57, %fd26, %fd26, %fd56;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r24, %temp}, %fd45;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r25}, %fd45;
	}
	add.s32 	%r26, %r25, 1048576;
	mov.b64 	%fd58, {%r24, %r26};
	fma.rn.f64 	%fd59, %fd26, %fd58, %fd57;
	mul.rn.f64 	%fd60, %fd55, %fd26;
	neg.f64 	%fd61, %fd60;
	fma.rn.f64 	%fd62, %fd55, %fd26, %fd61;
	fma.rn.f64 	%fd63, %fd55, %fd45, %fd62;
	fma.rn.f64 	%fd64, %fd59, %fd26, %fd63;
	mul.rn.f64 	%fd65, %fd52, %fd60;
	neg.f64 	%fd66, %fd65;
	fma.rn.f64 	%fd67, %fd52, %fd60, %fd66;
	fma.rn.f64 	%fd68, %fd52, %fd64, %fd67;
	fma.rn.f64 	%fd69, %fd54, %fd60, %fd68;
	add.f64 	%fd70, %fd65, %fd69;
	sub.f64 	%fd71, %fd65, %fd70;
	add.f64 	%fd72, %fd71, %fd69;
	add.f64 	%fd73, %fd26, %fd70;
	sub.f64 	%fd74, %fd26, %fd73;
	add.f64 	%fd75, %fd74, %fd70;
	add.f64 	%fd76, %fd75, %fd72;
	add.f64 	%fd77, %fd76, %fd45;
	add.f64 	%fd78, %fd73, %fd77;
	sub.f64 	%fd79, %fd73, %fd78;
	add.f64 	%fd80, %fd79, %fd77;
	xor.b32  	%r27, %r49, -2147483648;
	mov.u32 	%r28, -2147483648;
	mov.u32 	%r29, 1127219200;
	mov.b64 	%fd81, {%r27, %r29};
	mov.b64 	%fd82, {%r28, %r29};
	sub.f64 	%fd83, %fd81, %fd82;
	mov.f64 	%fd84, 0d3FE62E42FEFA39EF;
	fma.rn.f64 	%fd85, %fd83, %fd84, %fd78;
	neg.f64 	%fd86, %fd83;
	fma.rn.f64 	%fd87, %fd86, %fd84, %fd85;
	sub.f64 	%fd88, %fd87, %fd78;
	sub.f64 	%fd89, %fd80, %fd88;
	mov.f64 	%fd90, 0d3C7ABC9E3B39803F;
	fma.rn.f64 	%fd91, %fd83, %fd90, %fd89;
	add.f64 	%fd92, %fd85, %fd91;
	sub.f64 	%fd93, %fd85, %fd92;
	add.f64 	%fd94, %fd93, %fd91;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r30}, %fd15;
	}
	add.s32 	%r31, %r30, %r30;
	and.b32  	%r32, %r30, -15728641;
	setp.gt.u32	%p3, %r31, -33554433;
	selp.b32	%r33, %r32, %r30, %p3;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r34, %temp}, %fd15;
	}
	mov.b64 	%fd95, {%r34, %r33};
	mul.rn.f64 	%fd96, %fd92, %fd95;
	neg.f64 	%fd97, %fd96;
	fma.rn.f64 	%fd98, %fd92, %fd95, %fd97;
	fma.rn.f64 	%fd99, %fd94, %fd95, %fd98;
	add.f64 	%fd4, %fd96, %fd99;
	sub.f64 	%fd100, %fd96, %fd4;
	add.f64 	%fd5, %fd100, %fd99;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r13}, %fd4;
	}
	mov.b32 	 %f1, %r13;
	abs.f32 	%f2, %f1;
	setp.lt.f32	%p4, %f2, 0f40874911;
	@%p4 bra 	BB62_6;

	setp.lt.s32	%p5, %r13, 0;
	selp.f64	%fd101, 0d0000000000000000, 0d7FF0000000000000, %p5;
	abs.f64 	%fd102, %fd4;
	setp.gtu.f64	%p6, %fd102, 0d7FF0000000000000;
	add.f64 	%fd103, %fd4, %fd4;
	selp.f64	%fd139, %fd103, %fd101, %p6;
	bra.uni 	BB62_10;

BB62_6:
	mov.f64 	%fd104, 0d3FF71547652B82FE;
	mul.rn.f64 	%fd105, %fd4, %fd104;
	mov.f64 	%fd106, 0d4338000000000000;
	add.rn.f64 	%fd107, %fd105, %fd106;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r14, %temp}, %fd107;
	}
	mov.f64 	%fd108, 0dC338000000000000;
	add.rn.f64 	%fd109, %fd107, %fd108;
	mov.f64 	%fd110, 0dBFE62E42FEFA39EF;
	fma.rn.f64 	%fd111, %fd109, %fd110, %fd4;
	mov.f64 	%fd112, 0dBC7ABC9E3B39803F;
	fma.rn.f64 	%fd113, %fd109, %fd112, %fd111;
	mov.f64 	%fd114, 0d3E928AF3FCA213EA;
	mov.f64 	%fd115, 0d3E5ADE1569CE2BDF;
	fma.rn.f64 	%fd116, %fd115, %fd113, %fd114;
	mov.f64 	%fd117, 0d3EC71DEE62401315;
	fma.rn.f64 	%fd118, %fd116, %fd113, %fd117;
	mov.f64 	%fd119, 0d3EFA01997C89EB71;
	fma.rn.f64 	%fd120, %fd118, %fd113, %fd119;
	mov.f64 	%fd121, 0d3F2A01A014761F65;
	fma.rn.f64 	%fd122, %fd120, %fd113, %fd121;
	mov.f64 	%fd123, 0d3F56C16C1852B7AF;
	fma.rn.f64 	%fd124, %fd122, %fd113, %fd123;
	mov.f64 	%fd125, 0d3F81111111122322;
	fma.rn.f64 	%fd126, %fd124, %fd113, %fd125;
	mov.f64 	%fd127, 0d3FA55555555502A1;
	fma.rn.f64 	%fd128, %fd126, %fd113, %fd127;
	mov.f64 	%fd129, 0d3FC5555555555511;
	fma.rn.f64 	%fd130, %fd128, %fd113, %fd129;
	mov.f64 	%fd131, 0d3FE000000000000B;
	fma.rn.f64 	%fd132, %fd130, %fd113, %fd131;
	fma.rn.f64 	%fd134, %fd132, %fd113, %fd19;
	fma.rn.f64 	%fd138, %fd134, %fd113, %fd19;
	abs.s32 	%r35, %r14;
	setp.lt.s32	%p7, %r35, 1023;
	@%p7 bra 	BB62_8;

	add.s32 	%r36, %r14, 2046;
	shl.b32 	%r37, %r36, 19;
	and.b32  	%r38, %r37, -1048576;
	shl.b32 	%r39, %r36, 20;
	sub.s32 	%r50, %r39, %r38;
	mov.u32 	%r40, 0;
	mov.b64 	%fd135, {%r40, %r38};
	mul.f64 	%fd138, %fd138, %fd135;
	bra.uni 	BB62_9;

BB62_8:
	shl.b32 	%r41, %r14, 20;
	add.s32 	%r50, %r41, 1072693248;

BB62_9:
	mov.u32 	%r42, 0;
	mov.b64 	%fd136, {%r42, %r50};
	mul.f64 	%fd139, %fd138, %fd136;

BB62_10:
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r43}, %fd139;
	}
	and.b32  	%r44, %r43, 2147483647;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r45, %temp}, %fd139;
	}
	setp.ne.s32	%p8, %r45, 0;
	setp.ne.s32	%p9, %r44, 2146435072;
	or.pred  	%p10, %p9, %p8;
	@!%p10 bra 	BB62_12;
	bra.uni 	BB62_11;

BB62_11:
	fma.rn.f64 	%fd139, %fd139, %fd5, %fd139;

BB62_12:
	st.param.f64	[funj_retval0+0], %fd139;
	ret;
}


